com.volmit.gloss.Config -> com.volume.gloss.src.eHBj:
    int HOLOGRAMS_MAX_PACKETS_OUT_PER_SECOND -> eHBj
    int HOLOGRAMS_MAXIMUM_UPDATE_RATE -> kHrl
    int HOLOGRAMS_MINIMUM_UPDATE_RATE -> DYEw
    double HOLOGRAMS_FAST_UPDATE_RANGE -> HvTN
    double HOLOGRAMS_MAX_RANGE -> RbNj
    double HOLOGRAMS_STACK_SPREAD -> HeRd
    boolean CHATBUBBLES_ENABLED -> Cwed
    int BOARDS_MAX_UPDATES_PER_SECOND -> uEoN
    int BOARDS_TARGET_UPDATE_RATE -> XdAH
    3:3:void <init>() -> <init>
    5:13:void <clinit>() -> <clinit>
com.volmit.gloss.GlossPlugin -> com.volume.gloss.src.kHrl:
    com.volmit.gloss.command.CommandGloss cmdGloss -> gpLR
    com.volmit.gloss.command.CommandBoard cmdBoard -> HTOe
    com.volmit.gloss.command.CommandHologram cmdHologram -> SBmD
    com.volmit.gloss.inject.PlaceholderAPIViolator papi -> gpKR
    27:27:void <init>() -> <init>
    43:49:void start() -> start
    44:44:com.volmit.gloss.api.glow.Glower lambda$start$0(org.bukkit.entity.Entity,org.bukkit.entity.Player) -> eHBj
com.volmit.gloss.Perms -> com.volume.gloss.src.DYEw:
    com.volmit.gloss.Perms ADMIN -> kYsX
    com.volmit.gloss.Perms EMOJI_USE -> jhRg
    com.volmit.gloss.Perms EMOJI_EDIT -> srmC
    com.volmit.gloss.Perms CHAT_COLOR -> Oidv
    com.volmit.gloss.Perms CHAT_FORMATTING -> OjFW
    com.volmit.gloss.Perms CHAT_SPECIAL -> uySi
    com.volmit.gloss.Perms CHAT_FUNCTIONS -> HvSQ
    com.volmit.gloss.Perms BOARDS_CREATE -> IEpg
    com.volmit.gloss.Perms BOARDS_DELETE -> tvPU
    com.volmit.gloss.Perms BOARDS_EDIT -> OjGB
    com.volmit.gloss.Perms BOARDS_SHOW -> TFQS
    com.volmit.gloss.Perms BOARDS_HIDE -> Sdoq
    com.volmit.gloss.Perms HOLOGRAMS_CREATE -> ivPg
    com.volmit.gloss.Perms HOLOGRAMS_DELETE -> HdqT
    com.volmit.gloss.Perms HOLOGRAMS_EDIT -> vjtI
    com.volmit.gloss.Perms HOLOGRAMS_MOVE -> qKGa
    com.volmit.gloss.Perms[] $VALUES -> jWTX
    5:5:com.volmit.gloss.Perms[] values() -> values
    5:5:com.volmit.gloss.Perms valueOf(java.lang.String) -> valueOf
    5:5:void <init>(java.lang.String,int) -> <init>
    26:26:boolean has(org.bukkit.permissions.Permissible) -> eHBj
    5:22:void <clinit>() -> <clinit>
com.volmit.gloss.animation.GlossAnimation -> com.volume.gloss.src.HvTN:
    java.lang.String id -> id
    double targetFramerate -> ugtU
    com.volmit.gloss.volume.lang.collections.GList frames -> rMjM
    com.volmit.gloss.api.animation.Animator animator -> Ujxg
    com.volmit.gloss.api.animation.AnimationType type -> pXeV
    20:25:void <init>(java.lang.String) -> <init>
    30:30:java.lang.String getId() -> getId
    36:39:com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
    45:56:com.volmit.gloss.volume.lang.json.JSONObject toJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> eHBj
    62:71:void fromJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> kHrl
    76:76:int getFrameCount() -> getFrameCount
    82:82:com.volmit.gloss.volume.lang.collections.GList getFrames() -> kHrl
    88:89:void addFrame(com.volmit.gloss.api.animation.Frame) -> eHBj
    94:95:void clearFrames() -> DYEw
    100:101:void removeFrame(com.volmit.gloss.api.animation.Frame) -> kHrl
    106:106:com.volmit.gloss.api.animation.Animator getAnimator() -> HvTN
    112:113:void setAnimator(com.volmit.gloss.api.animation.Animator) -> eHBj
    118:118:double getTargetFramerate() -> RbNj
    124:125:void setTargetFramerate(double) -> eHBj
    130:130:com.volmit.gloss.api.animation.AnimationType getType() -> HeRd
    136:137:void setType(com.volmit.gloss.api.animation.AnimationType) -> eHBj
com.volmit.gloss.animation.GlossAnimator -> com.volume.gloss.src.RbNj:
    6:6:void <init>() -> <init>
    10:10:int getTemporalFrame(int,double) -> eHBj
com.volmit.gloss.animation.GlossAscendingAnimator -> com.volume.gloss.src.HeRd:
    7:7:void <init>() -> <init>
    12:12:com.volmit.gloss.api.animation.Frame getTemporalFrame(double,com.volmit.gloss.api.animation.Animation) -> eHBj
com.volmit.gloss.animation.GlossAscendingDecendingAnimator -> com.volume.gloss.src.Cwed:
    com.volmit.gloss.api.animation.Animator ascend -> dVBp
    com.volmit.gloss.api.animation.Animator descend -> CDam
    boolean ascending -> YEBp
    7:11:void <init>() -> <init>
    16:18:com.volmit.gloss.api.animation.Frame getTemporalFrame(double,com.volmit.gloss.api.animation.Animation) -> eHBj
com.volmit.gloss.animation.GlossDescendingAnimator -> com.volume.gloss.src.uEoN:
    7:7:void <init>() -> <init>
    12:12:com.volmit.gloss.api.animation.Frame getTemporalFrame(double,com.volmit.gloss.api.animation.Animation) -> eHBj
com.volmit.gloss.animation.GlossFrame -> com.volume.gloss.src.XdAH:
    java.lang.String content -> JIWi
    10:12:void <init>(java.lang.String) -> <init>
    17:17:java.lang.String getContent() -> getContent
com.volmit.gloss.animation.GlossRandomAnimator -> com.volume.gloss.src.gpLR:
    int lastFrame -> ytaS
    int lastIndex -> lastIndex
    7:10:void <init>() -> <init>
    15:20:com.volmit.gloss.api.animation.Frame getTemporalFrame(double,com.volmit.gloss.api.animation.Animation) -> eHBj
com.volmit.gloss.api.GLOSS -> com.volume.gloss.src.HTOe:
    com.volmit.gloss.api.library.IntentLibrary intentLibrary -> CxHi
    com.volmit.gloss.api.library.CaptureLibrary captureLibrary -> TWVC
    com.volmit.gloss.api.library.NodeLibrary nodeLibrary -> xNyr
    com.volmit.gloss.api.board.BoardLibrary boardLibrary -> cdBU
    com.volmit.gloss.api.library.FunctionLibrary functionLibrary -> uVqa
    com.volmit.gloss.api.library.AnimationLibrary animationLibrary -> lKwR
    com.volmit.gloss.api.library.EmojiLibrary emojiLibrary -> jgsn
    24:24:void <init>() -> <init>
    36:37:void registerIntentions(org.bukkit.plugin.Plugin,java.lang.String) -> eHBj
    41:42:void registerIntent(com.volmit.gloss.api.intent.CompiledIntent) -> eHBj
    47:63:void createIntentNode(java.lang.String,com.volmit.gloss.api.capture.Capture,com.volmit.gloss.api.display.DisplayRenderer,com.volmit.gloss.api.binder.Binder,com.volmit.gloss.api.source.SourceType,boolean,com.volmit.gloss.api.context.NodeActionListener) -> eHBj
    67:74:void init(com.volmit.gloss.api.library.IntentLibrary,com.volmit.gloss.api.library.CaptureLibrary,com.volmit.gloss.api.library.NodeLibrary,com.volmit.gloss.api.board.BoardLibrary,com.volmit.gloss.api.library.FunctionLibrary,com.volmit.gloss.api.library.AnimationLibrary,com.volmit.gloss.api.library.EmojiLibrary) -> eHBj
    78:78:com.volmit.gloss.api.library.AnimationLibrary getAnimationLibrary() -> Cwed
    83:83:com.volmit.gloss.api.library.EmojiLibrary getEmojiLibrary() -> uEoN
    88:88:com.volmit.gloss.api.library.FunctionLibrary getFunctionLibrary() -> XdAH
    93:93:com.volmit.gloss.api.board.BoardLibrary getBoardLibrary() -> gpLR
    98:98:com.volmit.gloss.api.library.IntentLibrary getIntentLibrary() -> HTOe
    103:103:com.volmit.gloss.api.library.NodeLibrary getNodeLibrary() -> SBmD
    108:108:com.volmit.gloss.api.library.CaptureLibrary getCaptureLibrary() -> gpKR
com.volmit.gloss.api.animation.Animation -> com.volume.gloss.src.SBmD:
    double getTargetFramerate() -> RbNj
    com.volmit.gloss.api.animation.AnimationType getType() -> HeRd
    void setType(com.volmit.gloss.api.animation.AnimationType) -> eHBj
    void setTargetFramerate(double) -> eHBj
    int getFrameCount() -> getFrameCount
    com.volmit.gloss.volume.lang.collections.GList getFrames() -> kHrl
    void addFrame(com.volmit.gloss.api.animation.Frame) -> eHBj
    void clearFrames() -> DYEw
    void removeFrame(com.volmit.gloss.api.animation.Frame) -> kHrl
    com.volmit.gloss.api.animation.Animator getAnimator() -> HvTN
    void setAnimator(com.volmit.gloss.api.animation.Animator) -> eHBj
com.volmit.gloss.api.animation.AnimationType -> com.volume.gloss.src.gpKR:
    com.volmit.gloss.api.animation.AnimationType ASCEND -> KKxf
    com.volmit.gloss.api.animation.AnimationType DESCEND -> ssOU
    com.volmit.gloss.api.animation.AnimationType ASCEND_DESCEND -> QonB
    com.volmit.gloss.api.animation.AnimationType RANDOM -> Ranp
    com.volmit.gloss.api.animation.AnimationType[] $VALUES -> DYGi
    3:3:com.volmit.gloss.api.animation.AnimationType[] values() -> values
    3:3:com.volmit.gloss.api.animation.AnimationType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:8:void <clinit>() -> <clinit>
com.volmit.gloss.api.animation.Animator -> com.volume.gloss.src.kYsX:
    long MSS -> QonO
    8:8:void <clinit>() -> <clinit>
    com.volmit.gloss.api.animation.Frame getTemporalFrame(double,com.volmit.gloss.api.animation.Animation) -> eHBj
com.volmit.gloss.api.animation.Frame -> com.volume.gloss.src.jhRg:
    java.lang.String getContent() -> getContent
com.volmit.gloss.api.binder.Binder -> com.volume.gloss.src.srmC:
    boolean shouldBind(org.bukkit.Material) -> eHBj
    boolean shouldBind(org.bukkit.entity.EntityType) -> eHBj
    com.volmit.gloss.api.binder.Binder accept(java.lang.Object) -> eHBj
    com.volmit.gloss.api.binder.Binder remove(java.lang.Object) -> kHrl
    boolean has(java.lang.Object) -> DYEw
    com.volmit.gloss.volume.lang.collections.GSet get() -> kYsX
com.volmit.gloss.api.binder.BlockBinder -> com.volume.gloss.src.Oidv:
    com.volmit.gloss.volume.lang.collections.GSet materials -> pXdJ
    14:17:void <init>() -> <init>
    22:23:com.volmit.gloss.api.binder.BlockBinder accept(org.bukkit.Material) -> kHrl
    29:30:com.volmit.gloss.api.binder.BlockBinder remove(org.bukkit.Material) -> DYEw
    36:36:boolean has(org.bukkit.Material) -> HvTN
    42:42:com.volmit.gloss.volume.lang.collections.GSet get() -> kYsX
    48:48:boolean shouldBind(org.bukkit.Material) -> eHBj
    54:54:boolean shouldBind(org.bukkit.entity.EntityType) -> eHBj
    60:63:int hashCode() -> hashCode
    69:93:boolean equals(java.lang.Object) -> equals
    99:101:com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
    107:117:com.volmit.gloss.volume.lang.json.JSONObject toJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> eHBj
    123:148:void fromJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> kHrl
    1:1:boolean has(java.lang.Object) -> DYEw
    1:1:com.volmit.gloss.api.binder.Binder accept(java.lang.Object) -> eHBj
    1:1:com.volmit.gloss.api.binder.Binder remove(java.lang.Object) -> kHrl
com.volmit.gloss.api.binder.EntityBinder -> com.volume.gloss.src.OjFW:
    com.volmit.gloss.volume.lang.collections.GSet materials -> pXdJ
    14:17:void <init>() -> <init>
    22:23:com.volmit.gloss.api.binder.EntityBinder accept(org.bukkit.entity.EntityType) -> kHrl
    29:30:com.volmit.gloss.api.binder.EntityBinder remove(org.bukkit.entity.EntityType) -> DYEw
    36:36:boolean has(org.bukkit.entity.EntityType) -> HvTN
    42:42:com.volmit.gloss.volume.lang.collections.GSet get() -> kYsX
    48:48:boolean shouldBind(org.bukkit.Material) -> eHBj
    54:54:boolean shouldBind(org.bukkit.entity.EntityType) -> eHBj
    60:63:int hashCode() -> hashCode
    69:93:boolean equals(java.lang.Object) -> equals
    99:101:com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
    107:117:com.volmit.gloss.volume.lang.json.JSONObject toJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> eHBj
    123:148:void fromJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> kHrl
    1:1:boolean has(java.lang.Object) -> DYEw
    1:1:com.volmit.gloss.api.binder.Binder accept(java.lang.Object) -> eHBj
    1:1:com.volmit.gloss.api.binder.Binder remove(java.lang.Object) -> kHrl
com.volmit.gloss.api.binder.VoidBinder -> com.volume.gloss.src.uySi:
    9:9:void <init>() -> <init>
    14:14:boolean shouldBind(org.bukkit.Material) -> eHBj
    20:20:boolean shouldBind(org.bukkit.entity.EntityType) -> eHBj
    26:26:com.volmit.gloss.api.binder.VoidBinder accept(java.lang.Void) -> eHBj
    32:32:com.volmit.gloss.api.binder.VoidBinder remove(java.lang.Void) -> kHrl
    38:38:boolean has(java.lang.Void) -> DYEw
    44:44:com.volmit.gloss.volume.lang.collections.GSet get() -> kYsX
    50:53:com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
    59:61:com.volmit.gloss.volume.lang.json.JSONObject toJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> eHBj
    68:68:void fromJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> kHrl
    1:1:boolean has(java.lang.Object) -> DYEw
    1:1:com.volmit.gloss.api.binder.Binder accept(java.lang.Object) -> eHBj
    1:1:com.volmit.gloss.api.binder.Binder remove(java.lang.Object) -> kHrl
com.volmit.gloss.api.board.Board -> com.volume.gloss.src.HvSQ:
    void setFromMeta(com.volmit.gloss.api.board.BoardMeta) -> eHBj
    boolean isVisible() -> isVisible
    void setVisible(boolean) -> setVisible
    void update() -> update
    void addLine(java.lang.String) -> eHBj
    java.lang.String getTitle() -> getTitle
    void setTitle(java.lang.String) -> setTitle
    com.volmit.gloss.volume.lang.collections.GList getContent() -> jhRg
    void setLine(int,java.lang.String) -> setLine
    void removeLine(int) -> eHBj
    java.lang.String getLine(int) -> getLine
    void forceUpdate() -> srmC
    void clear() -> clear
    org.bukkit.entity.Player getPlayer() -> getPlayer
    void hide() -> hide
    void show() -> show
com.volmit.gloss.api.board.BoardContext -> com.volume.gloss.src.IEpg:
    com.volmit.gloss.api.board.Board getBoard() -> Oidv
    com.volmit.gloss.api.board.BoardMeta getMeta() -> OjFW
    void setBoard(com.volmit.gloss.api.board.Board) -> eHBj
    void setMeta(com.volmit.gloss.api.board.BoardMeta) -> kHrl
com.volmit.gloss.api.board.BoardLibrary -> com.volume.gloss.src.tvPU:
    void registerBoard(com.volmit.gloss.api.board.BoardMeta) -> DYEw
    void setBoard(org.bukkit.entity.Player,com.volmit.gloss.api.board.BoardMeta) -> eHBj
    com.volmit.gloss.api.board.BoardMeta getBoard(org.bukkit.entity.Player) -> eHBj
    void removeBoard(org.bukkit.entity.Player) -> kHrl
com.volmit.gloss.api.board.BoardMeta -> com.volume.gloss.src.OjGB:
    com.volmit.gloss.volume.lang.collections.GList getLines() -> uySi
    java.lang.String getPrimaryWorld() -> HvSQ
    void setPrimaryWorld(java.lang.String) -> kHrl
    void addLine(java.lang.String) -> eHBj
    void removeLine(int) -> eHBj
    void removeLine(java.lang.String) -> DYEw
    void insertLine(java.lang.String,int) -> eHBj
    void setLine(java.lang.String,int) -> kHrl
    void clearLines() -> IEpg
    void setTempPlayer(org.bukkit.entity.Player) -> DYEw
com.volmit.gloss.api.capture.Capture -> com.volume.gloss.src.TFQS:
    java.lang.Object apply(java.lang.Object,java.lang.Object) -> apply
com.volmit.gloss.api.capture.GlossNode -> com.volume.gloss.src.Sdoq:
    com.volmit.gloss.api.display.DisplayRenderer renderer -> JIVp
    com.volmit.gloss.api.context.NodeActionListener listener -> jhUA
    com.volmit.gloss.volume.lang.collections.GMap captures -> flhp
    java.lang.String id -> id
    int priority -> priority
    boolean focus -> RbRi
    20:21:void <init>(com.volmit.gloss.api.display.DisplayRenderer,com.volmit.gloss.volume.lang.collections.GMap,java.lang.String,boolean) -> <init>
    23:31:void <init>(com.volmit.gloss.api.display.DisplayRenderer,com.volmit.gloss.volume.lang.collections.GMap,java.lang.String,boolean,com.volmit.gloss.api.context.NodeActionListener,int) -> <init>
    36:36:com.volmit.gloss.api.display.DisplayRenderer getRenderer() -> tvPU
    42:43:void assign(java.lang.String,com.volmit.gloss.api.capture.VC) -> eHBj
    48:48:com.volmit.gloss.api.capture.VC getCapture(java.lang.String) -> HvTN
    54:54:com.volmit.gloss.volume.lang.collections.GList getCaptures() -> OjGB
    60:60:java.lang.String getId() -> getId
    66:66:boolean isFocusTraversable() -> isFocusTraversable
    72:72:com.volmit.gloss.api.context.NodeActionListener getListener() -> TFQS
    78:79:void setActionListener(com.volmit.gloss.api.context.NodeActionListener) -> eHBj
    84:91:int hashCode() -> hashCode
    97:158:boolean equals(java.lang.Object) -> equals
    164:164:int getProirity() -> Sdoq
com.volmit.gloss.api.capture.SpecialEvent -> com.volume.gloss.src.ivPg:
    java.lang.Object add(java.lang.Object,java.lang.Object) -> eHBj
com.volmit.gloss.api.capture.UselessNodeListener -> com.volume.gloss.src.HdqT:
    8:8:void <init>() -> <init>
    14:14:void onAction(com.volmit.gloss.api.context.Context,com.volmit.gloss.api.source.Source,com.volmit.gloss.api.util.ActionType) -> eHBj
com.volmit.gloss.api.capture.VC -> com.volume.gloss.src.vjtI:
    com.volmit.gloss.volume.lang.collections.GMap t -> YgGg
    com.volmit.gloss.volume.lang.collections.GMap last -> Tgwf
    java.lang.String id -> id
    int rate -> HeWD
    com.volmit.gloss.api.capture.Capture capture -> Txxu
    17:24:void <init>(java.lang.String,int,com.volmit.gloss.api.capture.Capture) -> <init>
    28:29:void <init>(java.lang.String,com.volmit.gloss.api.capture.Capture) -> <init>
    33:33:long getLast(com.volmit.gloss.api.context.Context) -> eHBj
    38:38:int getRate() -> ivPg
    43:43:boolean hasValue(com.volmit.gloss.api.context.Context) -> kHrl
    48:48:java.lang.Object value(java.lang.Object,com.volmit.gloss.api.context.Context) -> eHBj
    53:53:java.lang.Object value(com.volmit.gloss.api.context.Context) -> DYEw
    58:58:java.lang.Object value(com.volmit.gloss.api.source.Source) -> eHBj
    63:69:boolean shouldCapture(com.volmit.gloss.api.context.Context) -> HvTN
    74:75:void capture(com.volmit.gloss.api.context.Context,com.volmit.gloss.api.source.Source) -> eHBj
    80:80:java.lang.String getId() -> getId
com.volmit.gloss.api.capture.Watcher -> com.volume.gloss.src.qKGa:
    java.lang.Object current -> uWUr
    java.lang.Object last -> ThXr
    10:10:java.lang.Object last() -> last
    14:17:void <init>(java.lang.Object) -> <init>
    21:21:java.lang.Object get() -> get
    26:27:void set(java.lang.Object) -> set
    31:31:boolean isStale() -> isStale
    36:37:void mark() -> mark
com.volmit.gloss.api.context.Context -> com.volume.gloss.src.jWTX:
    void unbind() -> HdqT
    void target(org.bukkit.Location) -> eHBj
    void push(com.volmit.gloss.volume.lang.collections.GList) -> eHBj
    com.volmit.gloss.api.source.Source getSource() -> vjtI
    boolean onScroll(com.volmit.gloss.api.util.ScrollResult) -> eHBj
    org.bukkit.Location getTarget() -> qKGa
    org.bukkit.entity.Player getPlayer() -> getPlayer
    com.volmit.gloss.api.display.Display getDisplay() -> jWTX
    com.volmit.gloss.api.util.ScrollGate getScrollGate() -> ugtU
    boolean isSneaking() -> isSneaking
    void setSneaking(boolean) -> setSneaking
    org.bukkit.util.Vector getDirection() -> getDirection
    void setDirection(org.bukkit.util.Vector) -> setDirection
    boolean isActive() -> isActive
    boolean isBound() -> isBound
    void bind(com.volmit.gloss.api.source.Source,com.volmit.gloss.volume.lang.collections.GList) -> eHBj
    void setActive(boolean) -> setActive
    void fireAction(com.volmit.gloss.api.util.ActionType) -> eHBj
    void destroy() -> destroy
com.volmit.gloss.api.context.ContextualView -> com.volume.gloss.src.ugtU:
    com.volmit.gloss.api.board.BoardContext getBoardContext() -> rMjM
    org.bukkit.entity.Player getPlayer() -> getPlayer
    com.volmit.gloss.api.board.Board getBoard() -> Oidv
    void setBoardMeta(com.volmit.gloss.api.board.BoardMeta) -> HvTN
    com.volmit.gloss.api.board.BoardMeta getBoardMeta() -> Ujxg
    boolean hasBoard() -> pXeV
    int getTrackedBubbles() -> dVBp
    void setTrackedBubbles(int) -> kHrl
    com.volmit.gloss.api.context.StaticContext getStaticContext(java.lang.String) -> RbNj
    com.volmit.gloss.api.context.Context getHandContext() -> CDam
    com.volmit.gloss.volume.lang.collections.GList getStaticContexts() -> YEBp
    void addStaticContext(com.volmit.gloss.api.context.StaticContext) -> eHBj
    void removeStaticContext(com.volmit.gloss.api.context.StaticContext) -> kHrl
    void removeStaticContext(java.lang.String) -> HeRd
    boolean hasStaticContext(java.lang.String) -> Cwed
    void update(java.util.concurrent.ExecutorService) -> eHBj
    com.volmit.gloss.api.context.StaticContext getStaticContextLooking() -> JIWi
    void destroy() -> destroy
    void justClicked() -> ytaS
com.volmit.gloss.api.context.Node -> com.volume.gloss.src.rMjM:
    com.volmit.gloss.api.context.NodeActionListener getListener() -> TFQS
    void setActionListener(com.volmit.gloss.api.context.NodeActionListener) -> eHBj
    boolean isFocusTraversable() -> isFocusTraversable
    com.volmit.gloss.api.display.DisplayRenderer getRenderer() -> tvPU
    void assign(java.lang.String,com.volmit.gloss.api.capture.VC) -> eHBj
    com.volmit.gloss.api.capture.VC getCapture(java.lang.String) -> HvTN
    com.volmit.gloss.volume.lang.collections.GList getCaptures() -> OjGB
    int getProirity() -> Sdoq
    32:32:com.volmit.gloss.api.context.Node$Builder builder() -> CxHi
com.volmit.gloss.api.context.Node$Builder -> com.volume.gloss.src.rMjM$eHBj:
    com.volmit.gloss.api.display.DisplayRenderer renderer -> JIVp
    com.volmit.gloss.api.context.NodeActionListener listener -> jhUA
    com.volmit.gloss.volume.lang.collections.GMap captures -> flhp
    java.lang.String id -> id
    int priority -> priority
    boolean focus -> RbRi
    44:49:void <init>() -> <init>
    53:54:com.volmit.gloss.api.context.Node$Builder listener(com.volmit.gloss.api.context.NodeActionListener) -> kHrl
    59:60:com.volmit.gloss.api.context.Node$Builder priority(int) -> DYEw
    65:66:com.volmit.gloss.api.context.Node$Builder focusTraversable() -> TWVC
    71:72:com.volmit.gloss.api.context.Node$Builder focusTraversable(boolean) -> eHBj
    77:78:com.volmit.gloss.api.context.Node$Builder renderer(com.volmit.gloss.api.display.DisplayRenderer) -> eHBj
    83:84:com.volmit.gloss.api.context.Node$Builder capture(com.volmit.gloss.api.capture.VC) -> eHBj
    89:90:com.volmit.gloss.api.context.Node$Builder id(java.lang.String) -> uEoN
    95:95:com.volmit.gloss.api.context.Node$Builder capture(java.lang.String) -> XdAH
    100:110:com.volmit.gloss.api.context.Node build() -> xNyr
com.volmit.gloss.api.context.NodeActionListener -> com.volume.gloss.src.Ujxg:
    void onAction(com.volmit.gloss.api.context.Context,com.volmit.gloss.api.source.Source,com.volmit.gloss.api.util.ActionType) -> eHBj
com.volmit.gloss.api.context.StaticContext -> com.volume.gloss.src.pXeV:
com.volmit.gloss.api.context.ValueCache -> com.volume.gloss.src.dVBp:
com.volmit.gloss.api.display.BasicTextComponent -> com.volume.gloss.src.CDam:
    com.volmit.gloss.api.util.CC c -> BSCh
    java.lang.String t -> QMnA
    boolean cc -> tutm
    12:15:void <init>(com.volmit.gloss.api.util.CC) -> <init>
    18:21:void <init>(java.lang.String) -> <init>
    26:26:boolean isColor() -> isColor
    32:32:com.volmit.gloss.api.util.CC getColor() -> cdBU
    38:43:java.lang.String get() -> get
    49:54:int hashCode() -> hashCode
    60:92:boolean equals(java.lang.Object) -> equals
com.volmit.gloss.api.display.Display -> com.volume.gloss.src.YEBp:
    com.volmit.gloss.api.display.UpdateTracker getTracker() -> uVqa
    int getSize() -> getSize
    void clear() -> clear
    com.volmit.gloss.volume.lang.collections.GList getComponents() -> lKwR
    com.volmit.gloss.volume.lang.collections.GList getNodes() -> getNodes
    void add(com.volmit.gloss.api.context.Node,com.volmit.gloss.api.display.DisplayComponent) -> eHBj
    void update(double,org.bukkit.Location,com.volmit.gloss.api.source.Source) -> eHBj
    org.bukkit.Location getTarget() -> qKGa
    void setTarget(org.bukkit.Location) -> kHrl
    void destroy() -> destroy
    void justClicked() -> ytaS
com.volmit.gloss.api.display.DisplayComponent -> com.volume.gloss.src.JIWi:
    void justClicked() -> ytaS
    org.bukkit.Location getPosition() -> jgsn
    void setPosition(org.bukkit.Location) -> DYEw
    void setDisplay(java.lang.String) -> setDisplay
    java.lang.String getDisplay(java.lang.String) -> gpLR
    org.bukkit.entity.Player getPlayer() -> getPlayer
    void destroy() -> destroy
    boolean isActive() -> isActive
    void create() -> create
    void update() -> update
    void update(com.volmit.gloss.api.display.DisplayState,com.volmit.gloss.api.source.Source) -> eHBj
    com.volmit.gloss.api.display.DisplayRenderer getRenderer() -> tvPU
    java.lang.String getText() -> getText
com.volmit.gloss.api.display.DisplayRenderer -> com.volume.gloss.src.ytaS:
    java.lang.String render(com.volmit.gloss.api.display.DisplayState,com.volmit.gloss.api.source.Source) -> render
com.volmit.gloss.api.display.DisplayState -> com.volume.gloss.src.CxHi:
    com.volmit.gloss.api.display.DisplayState NORMAL -> pYHW
    com.volmit.gloss.api.display.DisplayState DISABLED -> vYwn
    com.volmit.gloss.api.display.DisplayState SELECTED -> pXfw
    com.volmit.gloss.api.display.DisplayState[] $VALUES -> ArCc
    3:3:com.volmit.gloss.api.display.DisplayState[] values() -> values
    3:3:com.volmit.gloss.api.display.DisplayState valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:7:void <clinit>() -> <clinit>
com.volmit.gloss.api.display.Emoji -> com.volume.gloss.src.TWVC:
    java.lang.String getTrigger() -> KKxf
    java.lang.String getEmoji() -> ssOU
com.volmit.gloss.api.display.FilterChain -> com.volume.gloss.src.xNyr:
    com.volmit.gloss.volume.lang.collections.GList getFilters() -> QonB
    void addFilter(com.volmit.gloss.api.display.TextFilter) -> eHBj
    void removeFilter(com.volmit.gloss.api.display.TextFilter) -> kHrl
    void clearFilters() -> Ranp
com.volmit.gloss.api.display.FilteredRenderer -> com.volume.gloss.src.cdBU:
    java.lang.String filter(java.lang.String) -> HTOe
com.volmit.gloss.api.display.SelectionDisplay -> com.volume.gloss.src.uVqa:
    boolean hasAnyFocus() -> DYGi
    int getSelection() -> QonO
    void setSelection(int,com.volmit.gloss.api.source.Source) -> eHBj
    void scroll(com.volmit.gloss.api.util.ScrollResult,com.volmit.gloss.api.source.Source) -> eHBj
    boolean isFocusTraversable(int) -> HvTN
    boolean hasSelection() -> pXdJ
    com.volmit.gloss.api.context.Node getSelectedNode() -> JIVp
    int getMinFocus() -> jhUA
    int getMaxFocus() -> flhp
    com.volmit.gloss.volume.lang.collections.GMap computeHotspots() -> RbRi
com.volmit.gloss.api.display.TextComponent -> com.volume.gloss.src.lKwR:
    boolean isColor() -> isColor
    com.volmit.gloss.api.util.CC getColor() -> cdBU
    java.lang.String get() -> get
com.volmit.gloss.api.display.TextFilter -> com.volume.gloss.src.jgsn:
    boolean compression -> qlkj
    java.lang.String filter(org.bukkit.entity.Player,boolean,org.bukkit.Location,com.volmit.gloss.api.display.TextComponent[]) -> eHBj
    22:57:java.lang.String compress(java.lang.String) -> SBmD
    62:101:com.volmit.gloss.api.display.TextComponent[] extract(java.lang.String) -> gpKR
    106:113:java.lang.String combine(com.volmit.gloss.api.display.TextComponent[]) -> eHBj
com.volmit.gloss.api.display.UpdateTracker -> com.volume.gloss.src.KKxf:
    long lastUpdate -> IhYm
    double maxRange -> uFSf
    double fastRange -> eYIR
    int maxSpeed -> Plmf
    int minSpeed -> ejKA
    7:19:void <init>(double,double,int,int) -> <init>
    23:39:int getUpdateRate(double) -> kHrl
    44:55:boolean shouldUpdate(double) -> DYEw
com.volmit.gloss.api.event.GlossEvent -> com.volume.gloss.src.ssOU:
    org.bukkit.event.HandlerList handlers -> Xcch
    11:13:void <init>() -> <init>
    18:18:org.bukkit.event.HandlerList getHandlers() -> getHandlers
    23:23:org.bukkit.event.HandlerList getHandlerList() -> getHandlerList
    8:8:void <clinit>() -> <clinit>
com.volmit.gloss.api.event.GlossPlayerInteractEvent -> com.volume.gloss.src.QonB:
    com.volmit.gloss.api.util.ActionType r -> idtF
    org.bukkit.entity.Player p -> jyXx
    13:16:void <init>(com.volmit.gloss.api.util.ActionType,org.bukkit.entity.Player) -> <init>
    20:20:com.volmit.gloss.api.util.ActionType getResult() -> YgGg
    25:25:org.bukkit.entity.Player getPlayer() -> getPlayer
com.volmit.gloss.api.event.GlossPlayerScrollEvent -> com.volume.gloss.src.Ranp:
    com.volmit.gloss.api.util.ScrollResult r -> vHvO
    org.bukkit.entity.Player p -> jyXx
    13:16:void <init>(com.volmit.gloss.api.util.ScrollResult,org.bukkit.entity.Player) -> <init>
    20:20:com.volmit.gloss.api.util.ScrollResult getResult() -> Tgwf
    25:25:org.bukkit.entity.Player getPlayer() -> getPlayer
com.volmit.gloss.api.function.CachedFunction -> com.volume.gloss.src.DYGi:
    void setFunction(com.volmit.gloss.api.function.Function) -> eHBj
    com.volmit.gloss.api.function.Function getFunction() -> HeWD
    java.lang.String parse(org.bukkit.entity.Player) -> HvTN
com.volmit.gloss.api.function.Function -> com.volume.gloss.src.QonO:
    java.lang.Object parse(org.bukkit.entity.Player) -> parse
com.volmit.gloss.api.glow.GRT -> com.volume.gloss.src.pXdJ:
    com.volmit.gloss.api.glow.Glower getGlower(org.bukkit.entity.Entity,org.bukkit.entity.Player) -> getGlower
com.volmit.gloss.api.glow.GlowManager -> com.volume.gloss.src.JIVp:
    com.volmit.gloss.api.glow.GRT f -> kYxV
    6:6:void <init>() -> <init>
    12:12:com.volmit.gloss.api.glow.Glower create(org.bukkit.entity.Entity,org.bukkit.entity.Player) -> kHrl
    8:8:void <clinit>() -> <clinit>
com.volmit.gloss.api.glow.Glower -> com.volume.gloss.src.jhUA:
    org.bukkit.entity.Player getObserver() -> Txxu
    org.bukkit.entity.Entity getEntity() -> getEntity
    org.bukkit.ChatColor getColor() -> getColor
    void setColor(org.bukkit.ChatColor) -> setColor
    void setGlowing(boolean) -> setGlowing
    void destroy() -> destroy
com.volmit.gloss.api.inject.PluginViolator -> com.volume.gloss.src.flhp:
    java.lang.String getTargetName() -> uWUr
    void engage(org.bukkit.plugin.Plugin) -> eHBj
    void disengage(org.bukkit.plugin.Plugin) -> kHrl
com.volmit.gloss.api.intent.CompiledIntent -> com.volume.gloss.src.RbRi:
    java.lang.String getId() -> getId
    com.volmit.gloss.api.binder.Binder getBinder() -> ThXr
    com.volmit.gloss.api.source.SourceType getSourceType() -> BSCh
    boolean isFocusTraversable() -> isFocusTraversable
    int getPriority() -> getPriority
com.volmit.gloss.api.intent.Descriptor -> com.volume.gloss.src.YgGg:
    org.bukkit.Location getLocation() -> getLocation
    void setLocation(org.bukkit.Location) -> setLocation
    com.volmit.gloss.volume.lang.collections.GList getLines() -> uySi
    void addLine(java.lang.String) -> eHBj
    void removeLine(int) -> eHBj
    void removeLine(java.lang.String) -> DYEw
    void insertLine(java.lang.String,int) -> eHBj
    void clearLines() -> IEpg
    com.volmit.gloss.api.intent.Intent createIntent() -> QMnA
    org.bukkit.inventory.ItemStack toBook() -> tutm
    void fromBook(org.bukkit.inventory.ItemStack) -> eHBj
com.volmit.gloss.api.intent.FocusableIntention -> com.volume.gloss.src.Tgwf:
    13:14:void <init>(java.lang.String,com.volmit.gloss.api.source.SourceType,com.volmit.gloss.api.binder.Binder,int) -> <init>
    18:19:void <init>(java.lang.String,com.volmit.gloss.api.source.SourceType,com.volmit.gloss.api.binder.Binder) -> <init>
    24:24:boolean isFocusTraversable() -> isFocusTraversable
    void onAction(com.volmit.gloss.api.context.Context,com.volmit.gloss.api.source.Source,com.volmit.gloss.api.util.ActionType) -> eHBj
com.volmit.gloss.api.intent.GlossIntent -> com.volume.gloss.src.HeWD:
    com.volmit.gloss.volume.lang.collections.GList nodes -> nodes
    com.volmit.gloss.api.binder.Binder binder -> HTTK
    com.volmit.gloss.api.source.SourceType assumedType -> XuDr
    java.lang.String id -> id
    15:21:void <init>(com.volmit.gloss.volume.lang.collections.GList,com.volmit.gloss.api.binder.Binder,com.volmit.gloss.api.source.SourceType,java.lang.String) -> <init>
    26:26:com.volmit.gloss.volume.lang.collections.GList getNodes() -> getNodes
    32:32:com.volmit.gloss.api.source.SourceType getAssumedType() -> pYHW
    38:38:com.volmit.gloss.api.binder.Binder getBinder() -> ThXr
    44:44:java.lang.String getId() -> getId
    50:56:int hashCode() -> hashCode
    62:112:boolean equals(java.lang.Object) -> equals
com.volmit.gloss.api.intent.Intent -> com.volume.gloss.src.Txxu:
    com.volmit.gloss.volume.lang.collections.GList getNodes() -> getNodes
    com.volmit.gloss.api.source.SourceType getAssumedType() -> pYHW
    com.volmit.gloss.api.binder.Binder getBinder() -> ThXr
    20:20:com.volmit.gloss.api.intent.Intent$Builder builder() -> vYwn
com.volmit.gloss.api.intent.Intent$Builder -> com.volume.gloss.src.Txxu$eHBj:
    java.lang.String id -> id
    com.volmit.gloss.volume.lang.collections.GList nodes -> nodes
    com.volmit.gloss.api.binder.Binder binder -> HTTK
    com.volmit.gloss.api.source.SourceType assumedType -> XuDr
    30:33:void <init>() -> <init>
    37:37:com.volmit.gloss.api.intent.Intent$Builder node(java.lang.String) -> kYsX
    42:43:com.volmit.gloss.api.intent.Intent$Builder node(com.volmit.gloss.api.context.Node) -> eHBj
    48:49:com.volmit.gloss.api.intent.Intent$Builder id(java.lang.String) -> jhRg
    54:55:com.volmit.gloss.api.intent.Intent$Builder binder(com.volmit.gloss.api.binder.Binder) -> eHBj
    60:61:com.volmit.gloss.api.intent.Intent$Builder assume(com.volmit.gloss.api.source.SourceType) -> eHBj
    66:81:com.volmit.gloss.api.intent.Intent build() -> pXfw
com.volmit.gloss.api.intent.Intention -> com.volume.gloss.src.uWUr:
    java.lang.String id -> id
    com.volmit.gloss.api.source.SourceType sourceType -> Cffh
    com.volmit.gloss.api.binder.Binder binder -> HTTK
    int priority -> priority
    22:29:void <init>(java.lang.String,com.volmit.gloss.api.source.SourceType,com.volmit.gloss.api.binder.Binder,int) -> <init>
    34:34:java.lang.Object get(com.volmit.gloss.api.source.Source) -> kHrl
    39:40:void <init>(java.lang.String,com.volmit.gloss.api.source.SourceType,com.volmit.gloss.api.binder.Binder) -> <init>
    46:46:void onAction(com.volmit.gloss.api.context.Context,com.volmit.gloss.api.source.Source,com.volmit.gloss.api.util.ActionType) -> eHBj
    51:51:int getPriority() -> getPriority
    57:57:boolean isFocusTraversable() -> isFocusTraversable
    63:63:java.lang.String getId() -> getId
    69:69:com.volmit.gloss.api.binder.Binder getBinder() -> ThXr
    75:75:com.volmit.gloss.api.source.SourceType getSourceType() -> BSCh
    81:83:com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
    89:91:com.volmit.gloss.volume.lang.json.JSONObject toJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> eHBj
    97:121:void fromJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> kHrl
    126:131:int hashCode() -> hashCode
    137:176:boolean equals(java.lang.Object) -> equals
com.volmit.gloss.api.intent.TemporaryDescriptor -> com.volume.gloss.src.ThXr:
    void setHealth(long) -> eHBj
    long getHealth() -> ArCc
    boolean hasHealth() -> qlkj
    boolean shouldDestroy() -> IhYm
    void update() -> update
    void bindPosition(com.volmit.gloss.api.util.PositionBinder) -> eHBj
com.volmit.gloss.api.library.AnimationLibrary -> com.volume.gloss.src.BSCh:
com.volmit.gloss.api.library.CaptureLibrary -> com.volume.gloss.src.QMnA:
    com.volmit.gloss.api.capture.VC getCapture(java.lang.String) -> HvTN
com.volmit.gloss.api.library.EmojiLibrary -> com.volume.gloss.src.tutm:
com.volmit.gloss.api.library.FunctionLibrary -> com.volume.gloss.src.pYHW:
com.volmit.gloss.api.library.IntentLibrary -> com.volume.gloss.src.vYwn:
    com.volmit.gloss.volume.lang.collections.GList getIntents(org.bukkit.Material) -> RbNj
    com.volmit.gloss.volume.lang.collections.GList getIntents(org.bukkit.entity.EntityType) -> RbNj
    void register(org.bukkit.plugin.Plugin,java.lang.String) -> kHrl
com.volmit.gloss.api.library.Library -> com.volume.gloss.src.pXfw:
    com.volmit.gloss.volume.lang.collections.GList getRegistries() -> uFSf
    void register(java.lang.Object) -> register
    java.lang.Object get(java.lang.String) -> get
com.volmit.gloss.api.library.NodeLibrary -> com.volume.gloss.src.ArCc:
com.volmit.gloss.api.source.BlockSource -> com.volume.gloss.src.qlkj:
    org.bukkit.block.Block getBlock() -> getBlock
    org.bukkit.Material getBlockType() -> eYIR
com.volmit.gloss.api.source.EntitySource -> com.volume.gloss.src.IhYm:
    org.bukkit.entity.Entity getEntity() -> getEntity
    org.bukkit.entity.EntityType getEntityType() -> getEntityType
    boolean isMountable() -> Plmf
    void setMountable(boolean) -> kHrl
com.volmit.gloss.api.source.PositionalSource -> com.volume.gloss.src.uFSf:
    org.bukkit.Location getLocation() -> getLocation
    void setLocation(org.bukkit.Location) -> setLocation
com.volmit.gloss.api.source.Source -> com.volume.gloss.src.eYIR:
    void assign(java.lang.String,com.volmit.gloss.api.capture.VC) -> eHBj
    void unassign(java.lang.String) -> srmC
    com.volmit.gloss.volume.lang.collections.GList getNodes() -> getNodes
    com.volmit.gloss.api.capture.VC getCapture(java.lang.String) -> HvTN
    com.volmit.gloss.api.source.SourceType getType() -> ejKA
    com.volmit.gloss.api.context.Context getRelatedContext() -> Xcch
    org.bukkit.Location getLocation() -> getLocation
com.volmit.gloss.api.source.SourceType -> com.volume.gloss.src.Plmf:
    com.volmit.gloss.api.source.SourceType POSITIONAL -> YUcv
    com.volmit.gloss.api.source.SourceType ENTITY -> CVHM
    com.volmit.gloss.api.source.SourceType BLOCK -> dUcY
    com.volmit.gloss.api.source.SourceType[] $VALUES -> NUdk
    3:3:com.volmit.gloss.api.source.SourceType[] values() -> values
    3:3:com.volmit.gloss.api.source.SourceType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:7:void <clinit>() -> <clinit>
com.volmit.gloss.api.source.SourceWorld -> com.volume.gloss.src.ejKA:
    org.bukkit.World getWorld() -> getWorld
    com.volmit.gloss.volume.lang.collections.GList getSources() -> idtF
    void createSource(com.volmit.gloss.api.source.StaticSource) -> eHBj
    com.volmit.gloss.api.source.StaticSource getSource(java.lang.String) -> Oidv
    void removeSource(com.volmit.gloss.api.source.StaticSource) -> kHrl
    void removeSource(java.lang.String) -> OjFW
    boolean hasSource(java.lang.String) -> uySi
    void update(java.util.concurrent.ExecutorService) -> eHBj
com.volmit.gloss.api.source.StaticSource -> com.volume.gloss.src.Xcch:
com.volmit.gloss.api.util.ActionType -> com.volume.gloss.src.idtF:
    com.volmit.gloss.api.util.ActionType LEFT -> fmMC
    com.volmit.gloss.api.util.ActionType RIGHT -> fllC
    com.volmit.gloss.api.util.ActionType[] $VALUES -> DYJB
    3:3:com.volmit.gloss.api.util.ActionType[] values() -> values
    3:3:com.volmit.gloss.api.util.ActionType valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
com.volmit.gloss.api.util.Axis -> com.volume.gloss.src.jyXx:
    com.volmit.gloss.api.util.Axis X -> ssQW
    com.volmit.gloss.api.util.Axis Y -> uxux
    com.volmit.gloss.api.util.Axis Z -> CgHX
    int x -> x
    int y -> y
    int z -> z
    com.volmit.gloss.api.util.Axis[] $VALUES -> WrBc
    5:5:com.volmit.gloss.api.util.Axis[] values() -> values
    5:5:com.volmit.gloss.api.util.Axis valueOf(java.lang.String) -> valueOf
    16:20:void <init>(java.lang.String,int,int,int,int) -> <init>
    24:24:org.bukkit.util.Vector positive() -> jyXx
    29:29:org.bukkit.util.Vector negative() -> vHvO
    5:9:void <clinit>() -> <clinit>
com.volmit.gloss.api.util.CC -> com.volume.gloss.src.vHvO:
    com.volmit.gloss.api.util.CC BLACK -> vHuF
    com.volmit.gloss.api.util.CC DARK_BLUE -> dxHI
    com.volmit.gloss.api.util.CC DARK_GREEN -> jhVe
    com.volmit.gloss.api.util.CC DARK_AQUA -> eYHF
    com.volmit.gloss.api.util.CC DARK_RED -> qliy
    com.volmit.gloss.api.util.CC DARK_PURPLE -> dDbS
    com.volmit.gloss.api.util.CC GOLD -> yRcC
    com.volmit.gloss.api.util.CC GRAY -> ydDt
    com.volmit.gloss.api.util.CC DARK_GRAY -> VnaT
    com.volmit.gloss.api.util.CC BLUE -> tCSU
    com.volmit.gloss.api.util.CC GREEN -> SvXv
    com.volmit.gloss.api.util.CC AQUA -> hasT
    com.volmit.gloss.api.util.CC RED -> MuIP
    com.volmit.gloss.api.util.CC LIGHT_PURPLE -> nceN
    com.volmit.gloss.api.util.CC YELLOW -> dDeH
    com.volmit.gloss.api.util.CC WHITE -> BdFr
    com.volmit.gloss.api.util.CC MAGIC -> BReB
    com.volmit.gloss.api.util.CC BOLD -> STWJ
    com.volmit.gloss.api.util.CC STRIKETHROUGH -> Ploo
    com.volmit.gloss.api.util.CC UNDERLINE -> Gatt
    com.volmit.gloss.api.util.CC ITALIC -> XBCo
    com.volmit.gloss.api.util.CC RESET -> ArFt
    com.volmit.gloss.api.util.CC GLOW -> goox
    com.volmit.gloss.api.util.CC SHINE -> FMoH
    com.volmit.gloss.api.util.CC RGB -> uWVf
    com.volmit.gloss.api.util.CC LINK -> pYHo
    com.volmit.gloss.api.util.CC URL -> wKyw
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern STRIP_COLOR_PATTERN -> STRIP_COLOR_PATTERN
    int intCode -> intCode
    char code -> code
    boolean isFormat -> isFormat
    java.lang.String toString -> toString
    java.util.Map BY_ID -> BY_ID
    java.util.Map BY_CHAR -> BY_CHAR
    java.util.Map dyeChatMap -> dyeChatMap
    java.util.Map chatHexMap -> chatHexMap
    java.util.Map dyeHexMap -> dyeHexMap
    com.volmit.gloss.api.util.CC[] $VALUES -> AOcL
    17:17:com.volmit.gloss.api.util.CC[] values() -> values
    17:17:com.volmit.gloss.api.util.CC valueOf(java.lang.String) -> valueOf
    379:380:void <init>(java.lang.String,int,char,int) -> <init>
    383:389:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    393:393:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    403:403:char getChar() -> getChar
    409:409:java.lang.String toString() -> toString
    419:419:org.bukkit.DyeColor dye() -> dye
    424:424:java.lang.String hex() -> hex
    434:434:boolean isFormat() -> isFormat
    444:444:boolean isColor() -> isColor
    459:464:com.volmit.gloss.api.util.CC getByChar(char) -> eHBj
    480:488:com.volmit.gloss.api.util.CC getByChar(java.lang.String) -> HvSQ
    501:506:java.lang.String stripColor(java.lang.String) -> stripColor
    518:523:com.volmit.gloss.api.util.CC dyeToChat(org.bukkit.DyeColor) -> eHBj
    528:536:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> chatToDye
    542:547:java.lang.String chatToHex(org.bukkit.ChatColor) -> chatToHex
    552:557:java.lang.String dyeToHex(org.bukkit.DyeColor) -> dyeToHex
    562:583:org.bukkit.Color hexToColor(java.lang.String) -> hexToColor
    588:601:org.bukkit.Color rgbToColor(java.lang.String) -> rgbToColor
    606:624:java.lang.String generateColorTable() -> generateColorTable
    634:634:org.bukkit.ChatColor chatColor() -> chatColor
    651:660:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    665:673:com.volmit.gloss.api.util.CC fromItemMeta(byte) -> eHBj
    678:725:byte getItemMeta() -> getItemMeta
    738:763:java.lang.String getLastColors(java.lang.String) -> getLastColors
    17:17:void <init>(java.lang.String,int,char,int,com.volmit.gloss.api.util.CC$1) -> <init>
    17:17:void <init>(java.lang.String,int,char,int,boolean,com.volmit.gloss.api.util.CC$1) -> <init>
    17:773:void <clinit>() -> <clinit>
com.volmit.gloss.api.util.CC$1 -> com.volume.gloss.src.vHvO$1:
    22:22:void <init>(java.lang.String,int,char,int) -> <init>
    27:27:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$10 -> com.volume.gloss.src.vHvO$2:
    121:121:void <init>(java.lang.String,int,char,int) -> <init>
    126:126:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$11 -> com.volume.gloss.src.vHvO$3:
    132:132:void <init>(java.lang.String,int,char,int) -> <init>
    137:137:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$12 -> com.volume.gloss.src.vHvO$4:
    143:143:void <init>(java.lang.String,int,char,int) -> <init>
    148:148:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$13 -> com.volume.gloss.src.vHvO$5:
    154:154:void <init>(java.lang.String,int,char,int) -> <init>
    159:159:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$14 -> com.volume.gloss.src.vHvO$6:
    165:165:void <init>(java.lang.String,int,char,int) -> <init>
    170:170:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$15 -> com.volume.gloss.src.vHvO$7:
    176:176:void <init>(java.lang.String,int,char,int) -> <init>
    181:181:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$16 -> com.volume.gloss.src.vHvO$8:
    187:187:void <init>(java.lang.String,int,char,int) -> <init>
    192:192:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$17 -> com.volume.gloss.src.vHvO$9:
    198:198:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    203:203:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$18 -> com.volume.gloss.src.vHvO$10:
    209:209:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    214:214:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$19 -> com.volume.gloss.src.vHvO$11:
    220:220:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    225:225:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$2 -> com.volume.gloss.src.vHvO$12:
    33:33:void <init>(java.lang.String,int,char,int) -> <init>
    38:38:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$20 -> com.volume.gloss.src.vHvO$13:
    231:231:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    236:236:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$21 -> com.volume.gloss.src.vHvO$14:
    242:242:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    247:247:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$22 -> com.volume.gloss.src.vHvO$15:
    254:254:void <init>(java.lang.String,int,char,int) -> <init>
    259:259:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$23 -> com.volume.gloss.src.vHvO$16:
    263:263:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    268:268:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$24 -> com.volume.gloss.src.vHvO$17:
    272:272:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    277:277:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$25 -> com.volume.gloss.src.vHvO$18:
    281:281:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    286:286:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$26 -> com.volume.gloss.src.vHvO$19:
    290:290:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    295:295:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$27 -> com.volume.gloss.src.vHvO$20:
    299:299:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    304:304:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$28 -> com.volume.gloss.src.vHvO$21:
    int[] $SwitchMap$com$volmit$gloss$api$util$CC -> TEuq
    678:678:void <clinit>() -> <clinit>
com.volmit.gloss.api.util.CC$3 -> com.volume.gloss.src.vHvO$22:
    44:44:void <init>(java.lang.String,int,char,int) -> <init>
    49:49:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$4 -> com.volume.gloss.src.vHvO$23:
    55:55:void <init>(java.lang.String,int,char,int) -> <init>
    60:60:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$5 -> com.volume.gloss.src.vHvO$24:
    66:66:void <init>(java.lang.String,int,char,int) -> <init>
    71:71:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$6 -> com.volume.gloss.src.vHvO$25:
    77:77:void <init>(java.lang.String,int,char,int) -> <init>
    82:82:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$7 -> com.volume.gloss.src.vHvO$26:
    88:88:void <init>(java.lang.String,int,char,int) -> <init>
    93:93:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$8 -> com.volume.gloss.src.vHvO$27:
    99:99:void <init>(java.lang.String,int,char,int) -> <init>
    104:104:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.CC$9 -> com.volume.gloss.src.vHvO$28:
    110:110:void <init>(java.lang.String,int,char,int) -> <init>
    115:115:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.api.util.Cuboid -> com.volume.gloss.src.kYxV:
    java.lang.String worldName -> worldName
    int x1 -> x1
    int y1 -> y1
    int z1 -> z1
    int x2 -> x2
    int y2 -> y2
    int z2 -> z2
    int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Axis -> goqF
    int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Cuboid$CuboidDirection -> UIYm
    44:58:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    62:72:int depth(com.volmit.gloss.api.util.Axis) -> eHBj
    85:91:void set(org.bukkit.Location,org.bukkit.Location) -> set
    95:95:boolean hasPlayers() -> kYxV
    100:112:com.volmit.gloss.volume.lang.collections.GList getPlayers() -> getPlayers
    117:168:com.volmit.gloss.volume.lang.collections.GList getEntities() -> getEntities
    179:180:void <init>(org.bukkit.Location) -> <init>
    184:184:com.volmit.gloss.api.util.Cuboid e(com.volmit.gloss.api.util.Direction,int) -> eHBj
    189:189:com.volmit.gloss.api.util.Cuboid e(com.volmit.gloss.api.util.Axis,int) -> eHBj
    200:201:void <init>(com.volmit.gloss.api.util.Cuboid) -> <init>
    221:230:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    250:259:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    261:270:void <init>(java.util.Map) -> <init>
    275:283:java.util.Map serialize() -> serialize
    288:288:com.volmit.gloss.api.util.Cuboid flatten(int) -> RbNj
    299:299:org.bukkit.Location getLowerNE() -> getLowerNE
    310:310:org.bukkit.Location getUpperSW() -> getUpperSW
    320:323:org.bukkit.Location getCenter() -> getCenter
    335:340:org.bukkit.World getWorld() -> getWorld
    350:350:int getSizeX() -> getSizeX
    360:360:int getSizeY() -> getSizeY
    370:370:int getSizeZ() -> getSizeZ
    379:379:int getLowerX() -> getLowerX
    389:389:int getLowerY() -> getLowerY
    399:399:int getLowerZ() -> getLowerZ
    409:409:int getUpperX() -> getUpperX
    419:419:int getUpperY() -> getUpperY
    429:429:int getUpperZ() -> getUpperZ
    439:449:org.bukkit.block.Block[] corners() -> corners
    465:480:com.volmit.gloss.api.util.Cuboid expand(com.volmit.gloss.api.util.Cuboid$CuboidDirection,int) -> eHBj
    495:495:com.volmit.gloss.api.util.Cuboid shift(com.volmit.gloss.api.util.Cuboid$CuboidDirection,int) -> kHrl
    511:525:com.volmit.gloss.api.util.Cuboid outset(com.volmit.gloss.api.util.Cuboid$CuboidDirection,int) -> DYEw
    541:541:com.volmit.gloss.api.util.Cuboid inset(com.volmit.gloss.api.util.Cuboid$CuboidDirection,int) -> HvTN
    557:557:boolean contains(int,int,int) -> contains
    569:569:boolean contains(org.bukkit.block.Block) -> contains
    581:581:boolean contains(org.bukkit.Location) -> contains
    591:591:int volume() -> volume
    602:612:byte averageLightLevel() -> averageLightLevel
    623:623:com.volmit.gloss.api.util.Cuboid contract() -> HTTK
    637:677:com.volmit.gloss.api.util.Cuboid contract(com.volmit.gloss.api.util.Cuboid$CuboidDirection) -> eHBj
    691:706:com.volmit.gloss.api.util.Cuboid getFace(com.volmit.gloss.api.util.Cuboid$CuboidDirection) -> kHrl
    719:726:boolean containsOnly(org.bukkit.Material) -> containsOnly
    738:750:com.volmit.gloss.api.util.Cuboid getBoundingCuboid(com.volmit.gloss.api.util.Cuboid) -> eHBj
    766:766:org.bukkit.block.Block getRelativeBlock(int,int,int) -> getRelativeBlock
    786:786:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> getRelativeBlock
    797:811:java.util.List getChunks() -> getChunks
    826:830:void fill(int,byte) -> fill
    854:854:java.util.Iterator iterator() -> iterator
    865:865:com.volmit.gloss.api.util.Cuboid clone() -> XuDr
    876:876:java.lang.String toString() -> toString
    972:981:int hashCode() -> hashCode
    987:1047:boolean equals(java.lang.Object) -> equals
    1:1:java.lang.Object clone() -> clone
    29:29:int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Axis() -> Cffh
    29:29:int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Cuboid$CuboidDirection() -> YUcv
com.volmit.gloss.api.util.Cuboid$1 -> com.volume.gloss.src.kYxV$1:
    com.volmit.gloss.api.util.Cuboid this$0 -> dxJT
    1:100:void <init>(com.volmit.gloss.api.util.Cuboid) -> <init>
    105:110:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> onAdapt
    1:1:java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.api.util.Cuboid$2 -> com.volume.gloss.src.kYxV$2:
    int[] $SwitchMap$com$volmit$gloss$api$util$Axis -> qmMW
    int[] $SwitchMap$com$volmit$gloss$api$util$Cuboid$CuboidDirection -> kIXc
    62:465:void <clinit>() -> <clinit>
com.volmit.gloss.api.util.Cuboid$CuboidDirection -> com.volume.gloss.src.kYxV$eHBj:
    com.volmit.gloss.api.util.Cuboid$CuboidDirection North -> ssTB
    com.volmit.gloss.api.util.Cuboid$CuboidDirection East -> cRcI
    com.volmit.gloss.api.util.Cuboid$CuboidDirection South -> Suwp
    com.volmit.gloss.api.util.Cuboid$CuboidDirection West -> GPuL
    com.volmit.gloss.api.util.Cuboid$CuboidDirection Up -> sQTF
    com.volmit.gloss.api.util.Cuboid$CuboidDirection Down -> WPDX
    com.volmit.gloss.api.util.Cuboid$CuboidDirection Horizontal -> VMAY
    com.volmit.gloss.api.util.Cuboid$CuboidDirection Vertical -> OHMA
    com.volmit.gloss.api.util.Cuboid$CuboidDirection Both -> fmRE
    com.volmit.gloss.api.util.Cuboid$CuboidDirection Unknown -> mOaw
    int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Cuboid$CuboidDirection -> UIYm
    com.volmit.gloss.api.util.Cuboid$CuboidDirection[] ENUM$VALUES -> QpUb
    927:939:void <clinit>() -> <clinit>
    927:927:void <init>(java.lang.String,int) -> <init>
    943:964:com.volmit.gloss.api.util.Cuboid$CuboidDirection opposite() -> CVHM
    1:1:com.volmit.gloss.api.util.Cuboid$CuboidDirection[] values() -> values
    1:1:com.volmit.gloss.api.util.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    927:927:int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Cuboid$CuboidDirection() -> YUcv
com.volmit.gloss.api.util.Cuboid$CuboidIterator -> com.volume.gloss.src.kYxV$kHrl:
    org.bukkit.World w -> w
    int baseX -> baseX
    int baseY -> baseY
    int baseZ -> baseZ
    int x -> x
    int y -> y
    int z -> z
    int sizeX -> sizeX
    int sizeY -> sizeY
    int sizeZ -> sizeZ
    com.volmit.gloss.api.util.Cuboid this$0 -> dxJT
    886:896:void <init>(com.volmit.gloss.api.util.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    901:901:boolean hasNext() -> hasNext
    907:917:org.bukkit.block.Block next() -> next
    924:924:void remove() -> remove
    1:1:java.lang.Object next() -> next
com.volmit.gloss.api.util.DOP -> com.volume.gloss.src.HTTK:
    java.lang.String type -> type
    10:12:void <init>(java.lang.String) -> <init>
    org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
    18:18:java.lang.String getType() -> getType
com.volmit.gloss.api.util.Direction -> com.volume.gloss.src.XuDr:
    com.volmit.gloss.api.util.Direction U -> brEu
    com.volmit.gloss.api.util.Direction D -> xaDD
    com.volmit.gloss.api.util.Direction N -> CEHt
    com.volmit.gloss.api.util.Direction S -> mqeA
    com.volmit.gloss.api.util.Direction E -> iuxn
    com.volmit.gloss.api.util.Direction W -> iSvS
    com.volmit.gloss.volume.lang.collections.GMap permute -> Nwlu
    int x -> x
    int y -> y
    int z -> z
    com.volmit.gloss.api.util.Cuboid$CuboidDirection f -> LOeA
    int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Direction -> Xcgp
    com.volmit.gloss.api.util.Direction[] ENUM$VALUES -> yuGq
    17:24:void <clinit>() -> <clinit>
    33:33:boolean isVertical() -> isVertical
    38:53:com.volmit.gloss.api.util.Direction closest(org.bukkit.util.Vector,com.volmit.gloss.api.util.Direction[]) -> eHBj
    58:58:org.bukkit.util.Vector toVector() -> toVector
    63:73:boolean isCrooked(com.volmit.gloss.api.util.Direction) -> eHBj
    76:82:void <init>(java.lang.String,int,int,int,int,com.volmit.gloss.api.util.Cuboid$CuboidDirection) -> <init>
    86:96:org.bukkit.util.Vector angle(org.bukkit.util.Vector,com.volmit.gloss.api.util.Direction) -> eHBj
    101:119:com.volmit.gloss.api.util.Direction reverse() -> dUcY
    124:124:int x() -> x
    129:129:int y() -> y
    134:134:int z() -> z
    139:139:com.volmit.gloss.api.util.Cuboid$CuboidDirection f() -> NUdk
    144:144:com.volmit.gloss.volume.lang.collections.GList news() -> news
    149:159:com.volmit.gloss.api.util.Direction getDirection(org.bukkit.util.Vector) -> kHrl
    164:164:com.volmit.gloss.volume.lang.collections.GList udnews() -> udnews
    178:210:com.volmit.gloss.api.util.Direction fromByte(byte) -> kHrl
    221:239:byte byteValue() -> byteValue
    244:381:void calculatePermutations() -> fmMC
    385:401:com.volmit.gloss.api.util.Axis getAxis() -> fllC
    1:1:com.volmit.gloss.api.util.Direction[] values() -> values
    1:1:com.volmit.gloss.api.util.Direction valueOf(java.lang.String) -> valueOf
    15:15:int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Direction() -> DYJB
com.volmit.gloss.api.util.Direction$1 -> com.volume.gloss.src.XuDr$1:
    1:259:void <init>(java.lang.String) -> <init>
    264:264:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.Direction$10 -> com.volume.gloss.src.XuDr$2:
    1:370:void <init>(java.lang.String) -> <init>
    375:375:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.Direction$11 -> com.volume.gloss.src.XuDr$3:
    int[] $SwitchMap$com$volmit$gloss$api$util$Direction -> BBGf
    101:101:void <clinit>() -> <clinit>
com.volmit.gloss.api.util.Direction$2 -> com.volume.gloss.src.XuDr$4:
    1:273:void <init>(java.lang.String) -> <init>
    278:278:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.Direction$3 -> com.volume.gloss.src.XuDr$5:
    1:285:void <init>(java.lang.String) -> <init>
    290:290:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.Direction$4 -> com.volume.gloss.src.XuDr$6:
    1:298:void <init>(java.lang.String) -> <init>
    303:303:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.Direction$5 -> com.volume.gloss.src.XuDr$7:
    1:310:void <init>(java.lang.String) -> <init>
    315:315:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.Direction$6 -> com.volume.gloss.src.XuDr$8:
    1:322:void <init>(java.lang.String) -> <init>
    327:327:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.Direction$7 -> com.volume.gloss.src.XuDr$9:
    1:334:void <init>(java.lang.String) -> <init>
    339:339:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.Direction$8 -> com.volume.gloss.src.XuDr$10:
    1:346:void <init>(java.lang.String) -> <init>
    351:351:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.Direction$9 -> com.volume.gloss.src.XuDr$11:
    1:358:void <init>(java.lang.String) -> <init>
    363:363:org.bukkit.util.Vector op(org.bukkit.util.Vector) -> eHBj
com.volmit.gloss.api.util.IDD -> com.volume.gloss.src.Cffh:
    java.lang.String getId() -> getId
com.volmit.gloss.api.util.IJSON -> com.volume.gloss.src.YUcv:
    com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
    com.volmit.gloss.volume.lang.json.JSONObject toJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> eHBj
    void fromJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> kHrl
com.volmit.gloss.api.util.Named -> com.volume.gloss.src.CVHM:
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
com.volmit.gloss.api.util.PositionBinder -> com.volume.gloss.src.dUcY:
    org.bukkit.Location bind() -> bind
com.volmit.gloss.api.util.ScrollDirection -> com.volume.gloss.src.NUdk:
    com.volmit.gloss.api.util.ScrollDirection UP -> PKNY
    com.volmit.gloss.api.util.ScrollDirection DOWN -> MtiJ
    com.volmit.gloss.api.util.ScrollDirection[] $VALUES -> Yfiv
    3:3:com.volmit.gloss.api.util.ScrollDirection[] values() -> values
    3:3:com.volmit.gloss.api.util.ScrollDirection valueOf(java.lang.String) -> valueOf
    3:3:void <init>(java.lang.String,int) -> <init>
    3:6:void <clinit>() -> <clinit>
com.volmit.gloss.api.util.ScrollGate -> com.volume.gloss.src.fmMC:
    int current -> hQRj
    8:10:void <init>(int) -> <init>
    14:39:com.volmit.gloss.api.util.ScrollResult scroll(int) -> HeRd
    45:45:int getCurrent() -> ssQW
    51:54:int hashCode() -> hashCode
    60:77:boolean equals(java.lang.Object) -> equals
com.volmit.gloss.api.util.ScrollResult -> com.volume.gloss.src.fllC:
    int amount -> amount
    com.volmit.gloss.api.util.ScrollDirection direction -> GavQ
    9:12:void <init>(int,com.volmit.gloss.api.util.ScrollDirection) -> <init>
    16:16:int getAmount() -> getAmount
    21:22:void setAmount(int) -> setAmount
    26:26:com.volmit.gloss.api.util.ScrollDirection getDirection() -> uxux
    31:32:void setDirection(com.volmit.gloss.api.util.ScrollDirection) -> eHBj
    37:41:int hashCode() -> hashCode
    47:68:boolean equals(java.lang.Object) -> equals
com.volmit.gloss.api.util.Updateable -> com.volume.gloss.src.DYJB:
    boolean sync() -> CgHX
    void update(com.volmit.gloss.api.context.Context) -> RbNj
    int rate() -> WrBc
com.volmit.gloss.api.util.VectorMath -> com.volume.gloss.src.ssQW:
    int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Axis -> goqF
    int[] $SWITCH_TABLE$org$bukkit$block$BlockFace -> $SWITCH_TABLE$org$bukkit$block$BlockFace
    19:19:void <init>() -> <init>
    23:33:org.bukkit.util.Vector scaleStatic(com.volmit.gloss.api.util.Axis,org.bukkit.util.Vector,double) -> eHBj
    38:43:org.bukkit.util.Vector scaleX(org.bukkit.util.Vector,double) -> eHBj
    48:53:org.bukkit.util.Vector scaleY(org.bukkit.util.Vector,double) -> kHrl
    58:63:org.bukkit.util.Vector scaleZ(org.bukkit.util.Vector,double) -> DYEw
    68:70:org.bukkit.util.Vector reverseXZ(org.bukkit.util.Vector) -> DYEw
    75:78:boolean isLookingNear(org.bukkit.Location,org.bukkit.Location,double) -> eHBj
    83:136:org.bukkit.util.Vector rotate(com.volmit.gloss.api.util.Direction,com.volmit.gloss.api.util.Direction,org.bukkit.util.Vector) -> eHBj
    141:141:org.bukkit.util.Vector rotate90CX(org.bukkit.util.Vector) -> HvTN
    146:146:org.bukkit.util.Vector rotate90CCX(org.bukkit.util.Vector) -> RbNj
    151:151:org.bukkit.util.Vector rotate90CY(org.bukkit.util.Vector) -> HeRd
    156:156:org.bukkit.util.Vector rotate90CCY(org.bukkit.util.Vector) -> Cwed
    161:161:org.bukkit.util.Vector rotate90CZ(org.bukkit.util.Vector) -> uEoN
    166:166:org.bukkit.util.Vector rotate90CCZ(org.bukkit.util.Vector) -> XdAH
    171:192:org.bukkit.util.Vector getAxis(com.volmit.gloss.api.util.Direction,com.volmit.gloss.api.util.Direction) -> eHBj
    197:197:double round(double,int) -> eHBj
    202:205:org.bukkit.util.Vector clip(org.bukkit.util.Vector,int) -> eHBj
    210:223:org.bukkit.util.Vector rotateVectorCC(org.bukkit.util.Vector,org.bukkit.util.Vector,double) -> eHBj
    236:321:com.volmit.gloss.volume.lang.collections.GList split(org.bukkit.block.BlockFace) -> split
    335:335:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> direction
    340:340:org.bukkit.util.Vector directionNoNormal(org.bukkit.Location,org.bukkit.Location) -> eHBj
    354:354:org.bukkit.util.Vector toVector(float,float) -> toVector
    367:368:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector) -> eHBj
    382:385:void impulse(org.bukkit.entity.Entity,org.bukkit.util.Vector,double) -> eHBj
    396:411:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> reverse
    423:426:double getSpeed(org.bukkit.util.Vector) -> getSpeed
    440:447:com.volmit.gloss.volume.lang.collections.GList shift(org.bukkit.util.Vector,com.volmit.gloss.volume.lang.collections.GList) -> shift
    459:501:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> getBlockFace
    515:527:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> angleLeft
    541:553:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> angleRight
    567:576:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> angleUp
    590:599:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> angleDown
    613:661:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> triNormalize
    19:19:int[] $SWITCH_TABLE$com$volmit$gloss$api$util$Axis() -> Cffh
    19:19:int[] $SWITCH_TABLE$org$bukkit$block$BlockFace() -> $SWITCH_TABLE$org$bukkit$block$BlockFace
com.volmit.gloss.api.util.VectorMath$1 -> com.volume.gloss.src.ssQW$1:
    org.bukkit.util.Vector val$vector -> val$vector
    1:440:void <init>(org.bukkit.util.Vector) -> <init>
    445:445:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> onAdapt
    1:1:java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.api.util.VectorMath$2 -> com.volume.gloss.src.ssQW$2:
    int[] $SwitchMap$com$volmit$gloss$api$util$Axis -> qmMW
    int[] $SwitchMap$org$bukkit$block$BlockFace -> cuHq
    23:238:void <clinit>() -> <clinit>
com.volmit.gloss.board.GlossBoard -> com.volume.gloss.src.uxux:
    com.volmit.gloss.api.capture.Watcher title -> teWT
    com.volmit.gloss.api.capture.Watcher size -> nuHL
    com.volmit.gloss.api.capture.Watcher visible -> Xcfl
    com.volmit.gloss.volume.lang.collections.GList content -> dDey
    org.bukkit.entity.Player player -> player
    java.lang.String id -> id
    23:30:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    35:35:java.lang.String getTitle() -> getTitle
    41:42:void setTitle(java.lang.String) -> setTitle
    47:47:java.lang.String getId() -> getId
    52:52:java.lang.String clip(java.lang.String) -> IEpg
    58:65:com.volmit.gloss.volume.lang.collections.GList getContent() -> jhRg
    71:81:void setLine(int,java.lang.String) -> setLine
    86:91:void removeLine(int) -> eHBj
    96:101:java.lang.String getLine(int) -> getLine
    107:109:void clear() -> clear
    114:114:org.bukkit.entity.Player getPlayer() -> getPlayer
    120:121:void hide() -> hide
    126:127:void show() -> show
    131:135:void markAllContent() -> vHuF
    140:200:void update() -> update
    205:205:boolean isVisible() -> isVisible
    211:212:void setVisible(boolean) -> setVisible
    217:219:void addLine(java.lang.String) -> eHBj
    224:245:void setFromMeta(com.volmit.gloss.api.board.BoardMeta) -> eHBj
    250:256:void forceUpdate() -> srmC
com.volmit.gloss.board.GlossBoardContext -> com.volume.gloss.src.CgHX:
    com.volmit.gloss.api.board.Board board -> ctgi
    com.volmit.gloss.api.board.BoardMeta boardMeta -> iSuW
    org.bukkit.entity.Player player -> player
    com.volmit.gloss.api.source.Source source -> Bchh
    28:31:void <init>(org.bukkit.entity.Player) -> <init>
    37:37:void unbind() -> HdqT
    43:43:void target(org.bukkit.Location) -> eHBj
    49:49:void push(com.volmit.gloss.volume.lang.collections.GList) -> eHBj
    54:54:com.volmit.gloss.api.source.Source getSource() -> vjtI
    60:60:boolean onScroll(com.volmit.gloss.api.util.ScrollResult) -> eHBj
    66:66:org.bukkit.Location getTarget() -> qKGa
    72:72:org.bukkit.entity.Player getPlayer() -> getPlayer
    78:78:com.volmit.gloss.api.display.Display getDisplay() -> jWTX
    84:84:com.volmit.gloss.api.util.ScrollGate getScrollGate() -> ugtU
    90:90:boolean isSneaking() -> isSneaking
    97:97:void setSneaking(boolean) -> setSneaking
    102:102:org.bukkit.util.Vector getDirection() -> getDirection
    109:109:void setDirection(org.bukkit.util.Vector) -> setDirection
    114:114:boolean isActive() -> isActive
    120:120:boolean isBound() -> isBound
    127:127:void bind(com.volmit.gloss.api.source.Source,com.volmit.gloss.volume.lang.collections.GList) -> eHBj
    133:133:void setActive(boolean) -> setActive
    139:139:void fireAction(com.volmit.gloss.api.util.ActionType) -> eHBj
    145:145:void destroy() -> destroy
    150:150:boolean sync() -> CgHX
    157:157:void update(com.volmit.gloss.api.context.Context) -> RbNj
    162:162:int rate() -> WrBc
    168:168:com.volmit.gloss.api.board.Board getBoard() -> Oidv
    174:174:com.volmit.gloss.api.board.BoardMeta getMeta() -> OjFW
    180:181:void setBoard(com.volmit.gloss.api.board.Board) -> eHBj
    186:187:void setMeta(com.volmit.gloss.api.board.BoardMeta) -> kHrl
com.volmit.gloss.board.GlossBoardMeta -> com.volume.gloss.src.WrBc:
    java.lang.String name -> name
    java.lang.String id -> id
    com.volmit.gloss.volume.lang.collections.GList content -> dDey
    com.volmit.gloss.volume.lang.collections.GList filters -> XBGf
    org.bukkit.entity.Player p -> jyXx
    java.lang.String primaryWorld -> xrHJ
    22:29:void <init>(java.lang.String) -> <init>
    33:35:void <init>(java.lang.String,com.volmit.gloss.volume.lang.json.JSONObject) -> <init>
    40:40:java.lang.String getName() -> getName
    46:47:void setName(java.lang.String) -> setName
    52:52:java.lang.String getId() -> getId
    58:60:com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
    66:78:com.volmit.gloss.volume.lang.json.JSONObject toJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> eHBj
    84:93:void fromJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> kHrl
    98:98:com.volmit.gloss.volume.lang.collections.GList getLines() -> uySi
    104:105:void addLine(java.lang.String) -> eHBj
    110:111:void removeLine(int) -> eHBj
    116:117:void removeLine(java.lang.String) -> DYEw
    122:123:void insertLine(java.lang.String,int) -> eHBj
    128:129:void setLine(java.lang.String,int) -> kHrl
    134:135:void clearLines() -> IEpg
    140:145:java.lang.String filter(java.lang.String) -> HTOe
    151:151:com.volmit.gloss.volume.lang.collections.GList getFilters() -> QonB
    157:158:void addFilter(com.volmit.gloss.api.display.TextFilter) -> eHBj
    163:164:void removeFilter(com.volmit.gloss.api.display.TextFilter) -> kHrl
    169:170:void clearFilters() -> Ranp
    175:176:void setTempPlayer(org.bukkit.entity.Player) -> DYEw
    181:181:java.lang.String getPrimaryWorld() -> HvSQ
    187:188:void setPrimaryWorld(java.lang.String) -> kHrl
com.volmit.gloss.board.GlossMutexBoard -> com.volume.gloss.src.vHuF:
    com.volmit.gloss.volume.lang.collections.GList teamAllocation -> DjQu
    com.volmit.gloss.api.capture.Watcher contentWatcher -> VoEn
    19:23:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    27:27:java.lang.String clip(java.lang.String,int) -> DYEw
    32:32:int score(int) -> Cwed
    38:195:void update() -> update
com.volmit.gloss.board.GlossTeamBoard -> com.volume.gloss.src.dxHI:
    java.lang.String tid -> QpXC
    18:20:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    24:24:java.lang.String clip(java.lang.String) -> IEpg
    30:110:void update() -> update
com.volmit.gloss.command.CommandBoard -> com.volume.gloss.src.jhVe:
    com.volmit.gloss.command.CommandCreateBoard cmdCreateBoard -> nSIB
    com.volmit.gloss.command.CommandShowBoard cmdShowBoard -> dfmJ
    com.volmit.gloss.command.CommandHideBoard cmdHideBoard -> FNVC
    com.volmit.gloss.command.CommandDeleteBoard cmdDeleteBoard -> aoFM
    com.volmit.gloss.command.CommandPrimaryBoard cmdPrimaryBoard -> cSHo
    30:31:void <init>() -> <init>
    36:72:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandClearHologram -> com.volume.gloss.src.eYHF:
    16:17:void <init>() -> <init>
    23:43:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandCreateBoard -> com.volume.gloss.src.qliy:
    14:15:void <init>() -> <init>
    20:38:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandCreateHologram -> com.volume.gloss.src.dDbS:
    14:15:void <init>() -> <init>
    20:38:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandDeleteBoard -> com.volume.gloss.src.yRcC:
    21:22:void <init>() -> <init>
    27:72:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandDeleteHologram -> com.volume.gloss.src.ydDt:
    16:17:void <init>() -> <init>
    22:41:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandEditHologram -> com.volume.gloss.src.VnaT:
    20:21:void <init>() -> <init>
    27:64:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandEmoji -> com.volume.gloss.src.tCSU:
    13:14:void <init>() -> <init>
    19:27:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandGloss -> com.volume.gloss.src.SvXv:
    com.volmit.gloss.command.CommandEmoji cmdEmoji -> Nwoe
    14:15:void <init>() -> <init>
    20:24:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandHideBoard -> com.volume.gloss.src.hasT:
    14:15:void <init>() -> <init>
    20:44:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandHologram -> com.volume.gloss.src.MuIP:
    com.volmit.gloss.command.CommandCreateHologram cmdCreateHologram -> xPCw
    com.volmit.gloss.command.CommandEditHologram cmdEditHologram -> PKQn
    com.volmit.gloss.command.CommandDeleteHologram cmdDeleteHologram -> CgPI
    com.volmit.gloss.command.CommandMoveHologram cmdMoveHologram -> yRfF
    com.volmit.gloss.command.CommandClearHologram cmdClearHologram -> SBwM
    31:32:void <init>() -> <init>
    37:75:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandMoveHologram -> com.volume.gloss.src.nceN:
    38:39:void <init>() -> <init>
    44:128:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
    133:167:void hit(org.bukkit.entity.Player,org.bukkit.ChatColor,double,double,double,org.bukkit.Location) -> eHBj
    71:78:void lambda$handle$1(com.volmit.gloss.volume.bukkit.command.VolumeSender,com.volmit.gloss.volume.lang.collections.FinalBoolean,com.volmit.gloss.api.event.GlossPlayerInteractEvent) -> eHBj
    64:68:void lambda$handle$0(com.volmit.gloss.volume.bukkit.command.VolumeSender,com.volmit.gloss.volume.lang.collections.GList,com.volmit.gloss.api.event.GlossPlayerScrollEvent) -> eHBj
com.volmit.gloss.command.CommandMoveHologram$1 -> com.volume.gloss.src.nceN$1:
    com.volmit.gloss.volume.bukkit.util.event.EventBuffer val$scrollBuffer -> KLbH
    com.volmit.gloss.volume.bukkit.util.event.EventBuffer val$interactBuffer -> tTWv
    com.volmit.gloss.volume.lang.collections.GList val$results -> maFP
    com.volmit.gloss.volume.lang.collections.FinalDouble val$distance -> Aqig
    com.volmit.gloss.volume.bukkit.command.VolumeSender val$sender -> ofjX
    long val$ms -> aoDp
    com.volmit.gloss.api.intent.Descriptor val$d -> brGm
    com.volmit.gloss.volume.lang.collections.FinalBoolean val$b -> oVIm
    com.volmit.gloss.command.CommandMoveHologram this$0 -> haue
    86:86:void <init>(com.volmit.gloss.command.CommandMoveHologram,int,int,com.volmit.gloss.volume.bukkit.util.event.EventBuffer,com.volmit.gloss.volume.bukkit.util.event.EventBuffer,com.volmit.gloss.volume.lang.collections.GList,com.volmit.gloss.volume.lang.collections.FinalDouble,com.volmit.gloss.volume.bukkit.command.VolumeSender,long,com.volmit.gloss.api.intent.Descriptor,com.volmit.gloss.volume.lang.collections.FinalBoolean) -> <init>
    90:125:void run() -> run
com.volmit.gloss.command.CommandMoveHologram$2 -> com.volume.gloss.src.nceN$2:
    com.volmit.gloss.glowblock.GlowingBlock val$gb -> cBEx
    org.bukkit.entity.Player val$p -> val$p
    org.bukkit.block.Block val$b -> YEIs
    com.volmit.gloss.command.CommandMoveHologram this$0 -> haue
    157:157:void <init>(com.volmit.gloss.command.CommandMoveHologram,long,com.volmit.gloss.glowblock.GlowingBlock,org.bukkit.entity.Player,org.bukkit.block.Block) -> <init>
    162:164:void run() -> run
com.volmit.gloss.command.CommandPrimaryBoard -> com.volume.gloss.src.dDeH:
    18:19:void <init>() -> <init>
    24:69:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandShowBoard -> com.volume.gloss.src.BdFr:
    18:19:void <init>() -> <init>
    24:73:boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.command.CommandShowBoard$1 -> com.volume.gloss.src.BdFr$1:
    com.volmit.gloss.volume.bukkit.command.VolumeSender val$sender -> ofjX
    com.volmit.gloss.api.board.BoardMeta val$bm -> mPCm
    java.lang.String val$dfm -> yuMJ
    com.volmit.gloss.command.CommandShowBoard this$0 -> YfoJ
    58:58:void <init>(com.volmit.gloss.command.CommandShowBoard,long,com.volmit.gloss.volume.bukkit.command.VolumeSender,com.volmit.gloss.api.board.BoardMeta,java.lang.String) -> <init>
    62:64:void run() -> run
com.volmit.gloss.context.GlossBlockSource -> com.volume.gloss.src.BReB:
    org.bukkit.block.Block block -> block
    17:19:void <init>(org.bukkit.block.Block,com.volmit.gloss.api.context.Context) -> <init>
    24:24:org.bukkit.block.Block getBlock() -> getBlock
    30:30:org.bukkit.Material getBlockType() -> eYIR
    36:36:org.bukkit.Location getLocation() -> getLocation
com.volmit.gloss.context.GlossContext -> com.volume.gloss.src.STWJ:
    com.volmit.gloss.api.source.Source source -> Bchh
    com.volmit.gloss.api.util.ScrollGate gate -> gNVE
    org.bukkit.entity.Player player -> player
    com.volmit.gloss.api.display.Display display -> xOei
    boolean active -> active
    boolean sneaking -> QNVa
    org.bukkit.util.Vector direction -> direction
    org.bukkit.util.Vector lastDirection -> WaJY
    org.bukkit.Location target -> IiBx
    com.volmit.gloss.volume.bukkit.task.SR r -> r
    com.volmit.gloss.volume.lang.collections.GMap hotspots -> YwqQ
    51:61:void <init>(org.bukkit.entity.Player) -> <init>
    66:66:com.volmit.gloss.api.source.Source getSource() -> vjtI
    72:72:org.bukkit.entity.Player getPlayer() -> getPlayer
    78:78:com.volmit.gloss.api.display.Display getDisplay() -> jWTX
    84:84:boolean isActive() -> isActive
    90:90:boolean isBound() -> isBound
    96:134:void bind(com.volmit.gloss.api.source.Source,com.volmit.gloss.volume.lang.collections.GList) -> eHBj
    139:140:void setActive(boolean) -> setActive
    145:145:boolean sync() -> CgHX
    151:180:void push(com.volmit.gloss.volume.lang.collections.GList) -> eHBj
    184:205:boolean shouldTarget(org.bukkit.entity.Entity) -> eHBj
    210:232:boolean shouldTarget(org.bukkit.block.Block) -> eHBj
    237:282:void findTarget() -> dxHI
    286:318:int fondHotspot() -> jhVe
    324:326:void unbind() -> HdqT
    331:360:void update(com.volmit.gloss.api.context.Context) -> RbNj
    365:365:int rate() -> WrBc
    371:371:com.volmit.gloss.api.util.ScrollGate getScrollGate() -> ugtU
    377:386:boolean onScroll(com.volmit.gloss.api.util.ScrollResult) -> eHBj
    392:392:boolean isSneaking() -> isSneaking
    398:399:void setSneaking(boolean) -> setSneaking
    404:407:org.bukkit.util.Vector getDirection() -> getDirection
    413:415:void setDirection(org.bukkit.util.Vector) -> setDirection
    420:420:org.bukkit.Location getTarget() -> qKGa
    426:430:void fireAction(com.volmit.gloss.api.util.ActionType) -> eHBj
    435:436:void target(org.bukkit.Location) -> eHBj
    441:442:void destroy() -> destroy
    36:36:boolean access$000(com.volmit.gloss.context.GlossContext,org.bukkit.entity.Entity) -> eHBj
    36:36:boolean access$100(com.volmit.gloss.context.GlossContext,org.bukkit.block.Block) -> eHBj
    36:36:com.volmit.gloss.volume.lang.collections.GMap access$200(com.volmit.gloss.context.GlossContext) -> eHBj
com.volmit.gloss.context.GlossContext$1 -> com.volume.gloss.src.STWJ$1:
    com.volmit.gloss.context.GlossContext this$0 -> hayE
    118:118:void <init>(com.volmit.gloss.context.GlossContext,int) -> <init>
    122:131:void run() -> run
com.volmit.gloss.context.GlossContext$2 -> com.volume.gloss.src.STWJ$2:
    org.bukkit.Location val$c -> gpWu
    com.volmit.gloss.volume.lang.collections.FinalBoolean val$hit -> JJDB
    com.volmit.gloss.context.GlossContext this$0 -> hayE
    240:240:void <init>(com.volmit.gloss.context.GlossContext,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,org.bukkit.Location,com.volmit.gloss.volume.lang.collections.FinalBoolean) -> <init>
    244:278:void onTrace(org.bukkit.Location) -> onTrace
com.volmit.gloss.context.GlossContext$3 -> com.volume.gloss.src.STWJ$3:
    com.volmit.gloss.volume.lang.collections.FinalDouble val$distance -> Aqig
    com.volmit.gloss.volume.lang.collections.FinalInteger val$hit -> ytjt
    com.volmit.gloss.context.GlossContext this$0 -> hayE
    295:295:void <init>(com.volmit.gloss.context.GlossContext,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,com.volmit.gloss.volume.lang.collections.FinalDouble,com.volmit.gloss.volume.lang.collections.FinalInteger) -> <init>
    299:310:void onTrace(org.bukkit.Location) -> onTrace
com.volmit.gloss.context.GlossContextualView -> com.volume.gloss.src.Ploo:
    int b -> b
    com.volmit.gloss.api.board.Board board -> ctgi
    com.volmit.gloss.api.board.BoardContext boardContext -> xqhU
    com.volmit.gloss.api.board.BoardMeta boardMeta -> iSuW
    com.volmit.gloss.api.context.Context hand -> yBFw
    org.bukkit.entity.Player player -> player
    com.volmit.gloss.volume.lang.collections.GList statics -> WOey
    37:43:void <init>(org.bukkit.entity.Player) -> <init>
    48:48:com.volmit.gloss.api.context.Context getHandContext() -> CDam
    54:54:com.volmit.gloss.volume.lang.collections.GList getStaticContexts() -> YEBp
    60:61:void addStaticContext(com.volmit.gloss.api.context.StaticContext) -> eHBj
    66:67:void removeStaticContext(com.volmit.gloss.api.context.StaticContext) -> kHrl
    72:79:void removeStaticContext(java.lang.String) -> HeRd
    84:191:void update(java.util.concurrent.ExecutorService) -> eHBj
    195:217:void updateBoard() -> eYHF
    222:222:org.bukkit.entity.Player getPlayer() -> getPlayer
    228:236:com.volmit.gloss.api.context.StaticContext getStaticContext(java.lang.String) -> RbNj
    242:242:boolean hasStaticContext(java.lang.String) -> Cwed
    248:270:com.volmit.gloss.api.context.StaticContext getStaticContextLooking() -> JIWi
    276:288:void destroy() -> destroy
    293:302:void justClicked() -> ytaS
    307:307:int getTrackedBubbles() -> dVBp
    313:314:void setTrackedBubbles(int) -> kHrl
    319:319:com.volmit.gloss.api.board.Board getBoard() -> Oidv
    325:325:boolean hasBoard() -> pXeV
    331:339:void setBoardMeta(com.volmit.gloss.api.board.BoardMeta) -> HvTN
    344:344:com.volmit.gloss.api.board.BoardMeta getBoardMeta() -> Ujxg
    350:350:com.volmit.gloss.api.board.BoardContext getBoardContext() -> rMjM
    183:183:void lambda$update$2(com.volmit.gloss.api.context.StaticContext) -> DYEw
    171:171:void lambda$update$1() -> qliy
    161:161:void lambda$update$0() -> dDbS
com.volmit.gloss.context.GlossContextualView$1 -> com.volume.gloss.src.Ploo$1:
    com.volmit.gloss.api.context.StaticContext[] val$ctx -> eiou
    com.volmit.gloss.context.GlossContextualView this$0 -> NwpJ
    251:251:void <init>(com.volmit.gloss.context.GlossContextualView,org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,com.volmit.gloss.api.context.StaticContext[]) -> <init>
    255:267:void onTrace(org.bukkit.Location) -> onTrace
com.volmit.gloss.context.GlossDescriptor -> com.volume.gloss.src.Gatt:
    java.lang.String id -> id
    java.lang.String name -> name
    org.bukkit.Location location -> location
    com.volmit.gloss.volume.lang.collections.GList lines -> RayJ
    31:35:void <init>(com.volmit.gloss.volume.lang.json.JSONObject) -> <init>
    38:43:void <init>(java.lang.String,org.bukkit.Location) -> <init>
    48:48:java.lang.String getName() -> getName
    54:55:void setName(java.lang.String) -> setName
    60:60:java.lang.String getId() -> getId
    66:66:org.bukkit.Location getLocation() -> getLocation
    72:73:void setLocation(org.bukkit.Location) -> setLocation
    78:78:com.volmit.gloss.volume.lang.collections.GList getLines() -> uySi
    84:85:void addLine(java.lang.String) -> eHBj
    90:94:void removeLine(int) -> eHBj
    99:100:void removeLine(java.lang.String) -> DYEw
    105:106:void insertLine(java.lang.String,int) -> eHBj
    111:112:void clearLines() -> IEpg
    117:117:com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
    123:138:com.volmit.gloss.volume.lang.json.JSONObject toJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> eHBj
    144:159:void fromJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> kHrl
    165:184:com.volmit.gloss.api.intent.Intent createIntent() -> QMnA
    190:198:org.bukkit.inventory.ItemStack toBook() -> tutm
    204:216:void fromBook(org.bukkit.inventory.ItemStack) -> eHBj
    177:177:java.lang.String lambda$createIntent$1(int,com.volmit.gloss.api.context.Context,com.volmit.gloss.api.source.Source) -> eHBj
    176:176:java.lang.String lambda$createIntent$0(int,com.volmit.gloss.api.display.DisplayState,com.volmit.gloss.api.source.Source) -> eHBj
com.volmit.gloss.context.GlossEntitySource -> com.volume.gloss.src.XBCo:
    org.bukkit.entity.Entity entity -> entity
    boolean m -> m
    19:22:void <init>(org.bukkit.entity.Entity,com.volmit.gloss.api.context.Context) -> <init>
    27:27:org.bukkit.entity.Entity getEntity() -> getEntity
    33:33:org.bukkit.entity.EntityType getEntityType() -> getEntityType
    39:39:org.bukkit.Location getLocation() -> getLocation
    45:45:boolean isMountable() -> Plmf
    51:52:void setMountable(boolean) -> kHrl
com.volmit.gloss.context.GlossPositionalSource -> com.volume.gloss.src.ArFt:
    org.bukkit.Location location -> location
    15:17:void <init>(org.bukkit.Location,com.volmit.gloss.api.context.Context) -> <init>
    22:22:org.bukkit.Location getLocation() -> getLocation
    28:33:void setLocation(org.bukkit.Location) -> setLocation
com.volmit.gloss.context.GlossSource -> com.volume.gloss.src.goox:
    com.volmit.gloss.volume.lang.collections.GMap captures -> flhp
    com.volmit.gloss.api.source.SourceType type -> VLbp
    com.volmit.gloss.api.context.Context ctx -> QMtb
    17:21:void <init>(com.volmit.gloss.api.source.SourceType,com.volmit.gloss.api.context.Context) -> <init>
    25:32:void capture(com.volmit.gloss.api.context.Context) -> HeRd
    37:38:void assign(java.lang.String,com.volmit.gloss.api.capture.VC) -> eHBj
    43:44:void unassign(java.lang.String) -> srmC
    49:49:com.volmit.gloss.volume.lang.collections.GList getNodes() -> getNodes
    55:55:com.volmit.gloss.api.capture.VC getCapture(java.lang.String) -> HvTN
    61:61:com.volmit.gloss.api.source.SourceType getType() -> ejKA
    67:67:boolean sync() -> CgHX
    73:74:void update(com.volmit.gloss.api.context.Context) -> RbNj
    79:79:int rate() -> WrBc
    85:85:com.volmit.gloss.api.context.Context getRelatedContext() -> Xcch
com.volmit.gloss.context.GlossStaticContext -> com.volume.gloss.src.FMoH:
    java.lang.String id -> id
    20:22:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    27:27:java.lang.String getId() -> getId
    33:33:boolean isSneaking() -> isSneaking
    39:72:void bind(com.volmit.gloss.api.source.Source,com.volmit.gloss.volume.lang.collections.GList) -> eHBj
    77:85:void update(com.volmit.gloss.api.context.Context) -> RbNj
com.volmit.gloss.context.GlossStaticContext$1 -> com.volume.gloss.src.FMoH$1:
    com.volmit.gloss.context.GlossStaticContext this$0 -> piny
    56:56:void <init>(com.volmit.gloss.context.GlossStaticContext,int) -> <init>
    60:69:void run() -> run
com.volmit.gloss.context.GlossStaticSource -> com.volume.gloss.src.uWVf:
    java.lang.String name -> name
    java.lang.String id -> id
    15:18:void <init>(org.bukkit.Location,com.volmit.gloss.api.context.StaticContext,java.lang.String,java.lang.String) -> <init>
    22:23:void <init>(org.bukkit.Location,com.volmit.gloss.api.context.StaticContext,java.lang.String) -> <init>
    28:28:java.lang.String getName() -> getName
    34:35:void setName(java.lang.String) -> setName
    40:40:java.lang.String getId() -> getId
com.volmit.gloss.context.GlossTemporaryContext -> com.volume.gloss.src.pYHo:
    12:13:void <init>(org.bukkit.entity.Player,java.lang.String) -> <init>
    18:26:void update(com.volmit.gloss.api.context.Context) -> RbNj
com.volmit.gloss.context.GlossTemporaryDescriptor -> com.volume.gloss.src.wKyw:
    long health -> yuKX
    long start -> qlqw
    com.volmit.gloss.api.util.PositionBinder b -> oVLJ
    17:20:void <init>(java.lang.String,org.bukkit.Location,long) -> <init>
    25:26:void setHealth(long) -> eHBj
    31:31:long getHealth() -> ArCc
    37:37:boolean hasHealth() -> qlkj
    43:43:boolean shouldDestroy() -> IhYm
    49:50:void bindPosition(com.volmit.gloss.api.util.PositionBinder) -> eHBj
    55:59:void update() -> update
com.volmit.gloss.context.GlossTemporarySource -> com.volume.gloss.src.AOcL:
    11:12:void <init>(org.bukkit.Location,com.volmit.gloss.api.context.StaticContext,java.lang.String) -> <init>
com.volmit.gloss.context.VoidSource -> com.volume.gloss.src.TEuq:
    com.volmit.gloss.api.context.Context ctx -> QMtb
    16:18:void <init>(com.volmit.gloss.api.context.Context) -> <init>
    23:23:boolean sync() -> CgHX
    29:30:void update(com.volmit.gloss.api.context.Context) -> RbNj
    35:35:int rate() -> WrBc
    42:42:void assign(java.lang.String,com.volmit.gloss.api.capture.VC) -> eHBj
    48:48:void unassign(java.lang.String) -> srmC
    53:53:com.volmit.gloss.volume.lang.collections.GList getNodes() -> getNodes
    59:59:com.volmit.gloss.api.capture.VC getCapture(java.lang.String) -> HvTN
    65:65:com.volmit.gloss.api.source.SourceType getType() -> ejKA
    71:71:com.volmit.gloss.api.context.Context getRelatedContext() -> Xcch
    77:77:org.bukkit.Location getLocation() -> getLocation
com.volmit.gloss.display.GlossDisplay -> com.volume.gloss.src.goqF:
    int ut -> kkal
    com.volmit.gloss.volume.lang.collections.GList nodecache -> oUjm
    com.volmit.gloss.api.display.UpdateTracker tracker -> tCXW
    com.volmit.gloss.volume.lang.collections.GMap components -> bOej
    org.bukkit.Location target -> IiBx
    18:30:void <init>(org.bukkit.Location) -> <init>
    35:35:int getSize() -> getSize
    41:50:void clear() -> clear
    55:55:com.volmit.gloss.volume.lang.collections.GList getComponents() -> lKwR
    61:94:com.volmit.gloss.volume.lang.collections.GList getNodes() -> getNodes
    100:101:void add(com.volmit.gloss.api.context.Node,com.volmit.gloss.api.display.DisplayComponent) -> eHBj
    105:105:com.volmit.gloss.api.display.DisplayState getState(int) -> uEoN
    111:135:void update(double,org.bukkit.Location,com.volmit.gloss.api.source.Source) -> eHBj
    140:140:org.bukkit.Location getTarget() -> qKGa
    146:147:void setTarget(org.bukkit.Location) -> kHrl
    152:158:void destroy() -> destroy
    163:167:void justClicked() -> ytaS
    172:172:com.volmit.gloss.api.display.UpdateTracker getTracker() -> uVqa
com.volmit.gloss.display.GlossDisplayComponent -> com.volume.gloss.src.UIYm:
    com.volmit.gloss.util.PacketGate gate -> XtmG
    int idd -> TyeH
    int id -> id
    java.util.UUID uid -> jhbT
    org.bukkit.Location location -> location
    org.bukkit.Location current -> ySKk
    org.bukkit.entity.Player player -> player
    double factor -> factor
    org.bukkit.util.Vector velocity -> xrKm
    boolean active -> active
    java.lang.String content -> JIWi
    com.volmit.gloss.volume.lang.collections.GList filters -> XBGf
    com.volmit.gloss.api.display.DisplayRenderer renderer -> JIVp
    boolean clicked -> jhaw
    long mv -> LaLY
    43:64:void <init>(org.bukkit.entity.Player,org.bukkit.Location,com.volmit.gloss.api.display.DisplayRenderer) -> <init>
    68:68:int getId() -> getId
    74:124:void update() -> update
    129:129:org.bukkit.Location getPosition() -> jgsn
    135:136:void setPosition(org.bukkit.Location) -> DYEw
    143:157:void setDisplay(java.lang.String) -> setDisplay
    162:162:java.lang.String getDisplay(java.lang.String) -> gpLR
    168:168:org.bukkit.entity.Player getPlayer() -> getPlayer
    174:175:void destroy() -> destroy
    180:181:void create() -> create
    186:186:boolean isActive() -> isActive
    192:208:void update(com.volmit.gloss.api.display.DisplayState,com.volmit.gloss.api.source.Source) -> eHBj
    213:213:com.volmit.gloss.api.display.DisplayRenderer getRenderer() -> tvPU
    218:219:void setFactor(int) -> XdAH
    223:230:void sendInvisible() -> yRcC
    234:242:void sendName(java.lang.String) -> tvPU
    246:247:void sendTeleport(org.bukkit.Location) -> HvTN
    251:252:void sendMove(double,double,double) -> eHBj
    256:258:void sendDestroy() -> ydDt
    262:265:void sendSpawn() -> VnaT
    270:270:com.volmit.gloss.volume.lang.collections.GList getFilters() -> QonB
    276:277:void addFilter(com.volmit.gloss.api.display.TextFilter) -> eHBj
    282:283:void removeFilter(com.volmit.gloss.api.display.TextFilter) -> kHrl
    288:289:void clearFilters() -> Ranp
    294:308:java.lang.String filter(java.lang.String) -> HTOe
    314:314:java.lang.String getText() -> getText
    320:321:void justClicked() -> ytaS
    30:30:void <clinit>() -> <clinit>
com.volmit.gloss.display.GlossEmoji -> com.volume.gloss.src.dxJT:
    java.lang.String id -> id
    java.lang.String trigger -> aoIf
    java.lang.String emoji -> ctoE
    13:17:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    20:24:void <init>(java.lang.String,java.lang.String) -> <init>
    28:30:void <init>(java.lang.String,com.volmit.gloss.volume.lang.json.JSONObject) -> <init>
    35:35:java.lang.String getId() -> getId
    41:44:com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
    50:53:com.volmit.gloss.volume.lang.json.JSONObject toJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> eHBj
    59:61:void fromJSON(com.volmit.gloss.volume.lang.json.JSONObject) -> kHrl
    66:66:java.lang.String getTrigger() -> KKxf
    72:72:java.lang.String getEmoji() -> ssOU
com.volmit.gloss.display.GlossSelectionDisplay -> com.volume.gloss.src.qmMW:
    int selection -> OGrC
    com.volmit.gloss.filters.TextFilterSelect select -> qKSr
    18:25:void <init>(org.bukkit.Location,com.volmit.gloss.api.source.Source) -> <init>
    30:30:com.volmit.gloss.api.display.DisplayState getState(int) -> uEoN
    36:36:int getSelection() -> QonO
    42:43:void clear() -> clear
    48:49:void destroy() -> destroy
    54:72:void setSelection(int,com.volmit.gloss.api.source.Source) -> eHBj
    77:137:void scroll(com.volmit.gloss.api.util.ScrollResult,com.volmit.gloss.api.source.Source) -> eHBj
    142:142:boolean isFocusTraversable(int) -> HvTN
    148:148:boolean hasSelection() -> pXdJ
    154:162:int getMinFocus() -> jhUA
    168:176:int getMaxFocus() -> flhp
    182:190:boolean hasAnyFocus() -> DYGi
    196:201:com.volmit.gloss.api.context.Node getSelectedNode() -> JIVp
    207:220:com.volmit.gloss.volume.lang.collections.GMap computeHotspots() -> RbRi
    19:19:void <clinit>() -> <clinit>
com.volmit.gloss.filters.TextFilterColor -> com.volume.gloss.src.kIXc:
    10:10:void <init>() -> <init>
    15:16:java.lang.String filter(org.bukkit.entity.Player,boolean,org.bukkit.Location,com.volmit.gloss.api.display.TextComponent[]) -> eHBj
com.volmit.gloss.filters.TextFilterColorSpecial -> com.volume.gloss.src.ssTB:
    long ms -> yclJ
    int clock -> ydMK
    int SHINETICK -> wMEU
    com.volmit.gloss.api.util.CC[] COLORS -> VMGn
    int looking -> vkcn
    23:28:void <init>() -> <init>
    33:202:java.lang.String filter(org.bukkit.entity.Player,boolean,org.bukkit.Location,com.volmit.gloss.api.display.TextComponent[]) -> eHBj
    207:227:org.bukkit.Location getCharLocation(org.bukkit.entity.Player,org.bukkit.Location,double,double,boolean) -> eHBj
    21:22:void <clinit>() -> <clinit>
com.volmit.gloss.filters.TextFilterEmoji -> com.volume.gloss.src.cRcI:
    11:11:void <init>() -> <init>
    16:28:java.lang.String filter(org.bukkit.entity.Player,boolean,org.bukkit.Location,com.volmit.gloss.api.display.TextComponent[]) -> eHBj
com.volmit.gloss.filters.TextFilterFunction -> com.volume.gloss.src.Suwp:
    11:11:void <init>() -> <init>
    16:26:java.lang.String filter(org.bukkit.entity.Player,boolean,org.bukkit.Location,com.volmit.gloss.api.display.TextComponent[]) -> eHBj
com.volmit.gloss.filters.TextFilterPlaceholders -> com.volume.gloss.src.GPuL:
    10:10:void <init>() -> <init>
    15:16:java.lang.String filter(org.bukkit.entity.Player,boolean,org.bukkit.Location,com.volmit.gloss.api.display.TextComponent[]) -> eHBj
com.volmit.gloss.filters.TextFilterSelect -> com.volume.gloss.src.sQTF:
    10:10:void <init>() -> <init>
    15:30:java.lang.String filter(org.bukkit.entity.Player,boolean,org.bukkit.Location,com.volmit.gloss.api.display.TextComponent[]) -> eHBj
com.volmit.gloss.filters.TextFilterUnicode -> com.volume.gloss.src.WPDX:
    9:9:void <init>() -> <init>
    14:63:java.lang.String filter(org.bukkit.entity.Player,boolean,org.bukkit.Location,com.volmit.gloss.api.display.TextComponent[]) -> eHBj
com.volmit.gloss.filters.TextFilters -> com.volume.gloss.src.VMAY:
    5:5:void <init>() -> <init>
    9:15:void addStandard(com.volmit.gloss.api.display.FilterChain) -> eHBj
com.volmit.gloss.function.GlossFunction -> com.volume.gloss.src.OHMA:
    java.lang.String id -> id
    com.volmit.gloss.api.function.Function function -> mOhQ
    14:17:void <init>(java.lang.String,com.volmit.gloss.api.function.Function) -> <init>
    22:22:java.lang.String getId() -> getId
    28:29:void setFunction(com.volmit.gloss.api.function.Function) -> eHBj
    34:34:com.volmit.gloss.api.function.Function getFunction() -> HeWD
    40:40:java.lang.String parse(org.bukkit.entity.Player) -> HvTN
com.volmit.gloss.glowblock.GlowingBlock -> com.volume.gloss.src.fmRE:
    com.volmit.gloss.util.PacketGate gate -> XtmG
    int idd -> TyeH
    int id -> id
    java.util.UUID uid -> jhbT
    org.bukkit.Location location -> location
    org.bukkit.Location current -> ySKk
    org.bukkit.entity.Player player -> player
    double factor -> factor
    org.bukkit.util.Vector velocity -> xrKm
    boolean active -> active
    long mv -> LaLY
    com.volmit.gloss.volume.bukkit.util.world.MaterialBlock mb -> IGCC
    org.bukkit.ChatColor c -> ntmv
    34:55:void <init>(org.bukkit.entity.Player,org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,org.bukkit.ChatColor) -> <init>
    59:59:int getId() -> getId
    64:71:void sendMetadata(boolean) -> DYEw
    75:76:void sendMetadata(org.bukkit.ChatColor) -> eHBj
    80:130:void update() -> update
    134:134:org.bukkit.Location getPosition() -> jgsn
    139:140:void setPosition(org.bukkit.Location) -> DYEw
    144:144:org.bukkit.entity.Player getPlayer() -> getPlayer
    149:150:void destroy() -> destroy
    154:155:void create() -> create
    159:159:boolean isActive() -> isActive
    164:165:void setFactor(int) -> XdAH
    169:170:void sendTeleport(org.bukkit.Location) -> HvTN
    174:175:void sendMove(double,double,double) -> eHBj
    179:183:void sendDestroy() -> ydDt
    187:191:void sendSpawn() -> VnaT
    25:25:void <clinit>() -> <clinit>
com.volmit.gloss.inject.PlaceholderAPIViolator -> com.volume.gloss.src.mOaw:
    boolean safe -> safe
    10:12:void <init>() -> <init>
    17:17:java.lang.String getTargetName() -> uWUr
    22:27:java.lang.String parsePlaceholder(java.lang.String,org.bukkit.entity.Player) -> eHBj
    33:34:void engage(org.bukkit.plugin.Plugin) -> eHBj
    39:40:void disengage(org.bukkit.plugin.Plugin) -> kHrl
com.volmit.gloss.net.AbstractPacket -> com.volume.gloss.src.QpUb:
    com.comphenix.protocol.events.PacketContainer handle -> klFT
    26:34:void <init>(com.comphenix.protocol.events.PacketContainer,com.comphenix.protocol.PacketType) -> <init>
    43:43:com.comphenix.protocol.events.PacketContainer getHandle() -> tCSU
    58:64:void sendPacket(org.bukkit.entity.Player) -> RbNj
    71:72:void broadcastPacket() -> SvXv
    89:95:void recievePacket(org.bukkit.entity.Player) -> HeRd
    109:115:void receivePacket(org.bukkit.entity.Player) -> Cwed
com.volmit.gloss.net.WrapperPlayServerEntityMetadata -> com.volume.gloss.src.brEu:
    com.comphenix.protocol.PacketType TYPE -> xOfx
    19:21:void <init>() -> <init>
    25:26:void <init>(com.comphenix.protocol.events.PacketContainer) -> <init>
    37:37:int getEntityID() -> hasT
    48:49:void setEntityID(int) -> gpLR
    60:60:org.bukkit.entity.Entity getEntity(org.bukkit.World) -> eHBj
    72:72:org.bukkit.entity.Entity getEntity(com.comphenix.protocol.events.PacketEvent) -> eHBj
    82:82:java.util.List getMetadata() -> getMetadata
    93:94:void setMetadata(java.util.List) -> setMetadata
    15:15:void <clinit>() -> <clinit>
com.volmit.gloss.services.AnimationSVC -> com.volume.gloss.src.xaDD:
    com.volmit.gloss.volume.lang.collections.GList animations -> ytlw
    27:27:void <init>() -> <init>
    34:37:void start() -> start
    42:42:com.volmit.gloss.volume.lang.collections.GList getRegistries() -> uFSf
    49:83:void load() -> load
    87:104:void save() -> save
    108:111:java.io.File getAnimationFolder() -> MuIP
    116:124:java.io.File getAnimationFile(java.lang.String) -> OjGB
    130:133:void register(com.volmit.gloss.api.animation.Animation) -> eHBj
    137:149:com.volmit.gloss.api.animation.Animator getAnimatorFor(com.volmit.gloss.api.animation.AnimationType) -> kHrl
    155:163:com.volmit.gloss.api.animation.Animation get(java.lang.String) -> TFQS
    169:169:void createDefaults() -> nceN
    27:27:java.lang.Object get(java.lang.String) -> get
    27:27:void register(java.lang.Object) -> register
    131:131:java.lang.Object lambda$register$0(com.volmit.gloss.api.animation.Animation,org.bukkit.entity.Player) -> eHBj
com.volmit.gloss.services.AnimationSVC$1 -> com.volume.gloss.src.xaDD$1:
    int[] $SwitchMap$com$volmit$gloss$api$animation$AnimationType -> UlGg
    137:137:void <clinit>() -> <clinit>
com.volmit.gloss.services.BoardSVC -> com.volume.gloss.src.CEHt:
    com.volmit.gloss.volume.lang.collections.GList meta -> bPIH
    30:30:void <init>() -> <init>
    36:44:java.io.File getBoardFile(java.lang.String) -> Sdoq
    50:65:void on(org.bukkit.event.player.PlayerChangedWorldEvent) -> eHBj
    70:85:void on(org.bukkit.event.player.PlayerJoinEvent) -> eHBj
    89:92:java.io.File getBoardFolder() -> dDeH
    99:115:void save() -> save
    119:147:boolean reload(java.io.File) -> eHBj
    154:194:void load(java.io.File) -> load
    198:212:void load() -> load
    217:231:void start() -> start
    237:237:void stop() -> stop
    241:253:void createNewBoard(java.lang.String,org.bukkit.entity.Player) -> kHrl
    258:259:void registerBoard(com.volmit.gloss.api.board.BoardMeta) -> DYEw
    264:265:void setBoard(org.bukkit.entity.Player,com.volmit.gloss.api.board.BoardMeta) -> eHBj
    270:271:void removeBoard(org.bukkit.entity.Player) -> kHrl
    276:276:com.volmit.gloss.api.board.BoardMeta getBoard(org.bukkit.entity.Player) -> eHBj
    282:282:com.volmit.gloss.volume.lang.collections.GList getRegistries() -> uFSf
    289:301:void delete(java.lang.String) -> delete
    306:307:void register(com.volmit.gloss.api.board.BoardMeta) -> RbNj
    312:320:com.volmit.gloss.api.board.BoardMeta get(java.lang.String) -> ivPg
    30:30:java.lang.Object get(java.lang.String) -> get
    30:30:void register(java.lang.Object) -> register
    107:107:java.lang.Boolean lambda$save$0(java.io.File) -> kHrl
    30:30:com.volmit.gloss.volume.lang.collections.GList access$000(com.volmit.gloss.services.BoardSVC) -> eHBj
com.volmit.gloss.services.BoardSVC$1 -> com.volume.gloss.src.CEHt$1:
    org.bukkit.event.player.PlayerJoinEvent val$e -> MRlS
    com.volmit.gloss.services.BoardSVC this$0 -> Plvi
    71:71:void <init>(com.volmit.gloss.services.BoardSVC,long,org.bukkit.event.player.PlayerJoinEvent) -> <init>
    75:83:void run() -> run
com.volmit.gloss.services.CaptureSVC -> com.volume.gloss.src.mqeA:
    com.volmit.gloss.volume.lang.collections.GList captures -> ntma
    9:9:void <init>() -> <init>
    16:17:void start() -> start
    22:22:com.volmit.gloss.volume.lang.collections.GList getRegistries() -> uFSf
    28:29:void register(com.volmit.gloss.api.capture.VC) -> kHrl
    35:43:com.volmit.gloss.api.capture.VC getCapture(java.lang.String) -> HvTN
    49:49:com.volmit.gloss.api.capture.VC get(java.lang.String) -> HdqT
    9:9:java.lang.Object get(java.lang.String) -> get
    9:9:void register(java.lang.Object) -> register
com.volmit.gloss.services.ContextSVC -> com.volume.gloss.src.iuxn:
    com.volmit.gloss.services.ExecSVC s -> VLeQ
    com.volmit.gloss.volume.lang.collections.GMap contexts -> xPGk
    38:38:void <init>() -> <init>
    46:54:void on(org.bukkit.event.player.PlayerSwapHandItemsEvent) -> eHBj
    59:61:void on(com.volmit.gloss.api.event.GlossPlayerInteractEvent) -> eHBj
    66:74:void on(org.bukkit.event.player.PlayerInteractAtEntityEvent) -> eHBj
    79:94:void on(org.bukkit.event.player.PlayerInteractEvent) -> eHBj
    99:107:void start() -> start
    112:116:void stop() -> stop
    120:126:void sendGlowing(org.bukkit.entity.Player,org.bukkit.entity.Entity,boolean) -> eHBj
    131:150:void on(org.bukkit.event.player.AsyncPlayerChatEvent) -> eHBj
    154:186:void bubble(java.lang.String,org.bukkit.entity.Player) -> DYEw
    190:195:void update() -> update
    199:204:com.volmit.gloss.api.context.ContextualView getView(org.bukkit.entity.Player) -> uEoN
    209:209:com.volmit.gloss.api.context.Context getContext(org.bukkit.entity.Player) -> XdAH
    215:216:void on(org.bukkit.event.player.PlayerQuitEvent) -> eHBj
    221:222:void on(org.bukkit.event.player.PlayerJoinEvent) -> eHBj
    160:169:org.bukkit.Location lambda$bubble$0(org.bukkit.entity.Player,int,com.volmit.gloss.api.intent.TemporaryDescriptor) -> eHBj
    38:38:void access$000(com.volmit.gloss.services.ContextSVC,java.lang.String,org.bukkit.entity.Player) -> eHBj
com.volmit.gloss.services.ContextSVC$1 -> com.volume.gloss.src.iuxn$1:
    java.lang.String val$i -> UlFh
    org.bukkit.event.player.AsyncPlayerChatEvent val$e -> yRiY
    com.volmit.gloss.services.ContextSVC this$0 -> HvbK
    141:141:void <init>(com.volmit.gloss.services.ContextSVC,long,java.lang.String,org.bukkit.event.player.AsyncPlayerChatEvent) -> <init>
    145:146:void run() -> run
com.volmit.gloss.services.ContextSVC$2 -> com.volume.gloss.src.iuxn$2:
    org.bukkit.entity.Player val$p -> val$p
    com.volmit.gloss.services.ContextSVC this$0 -> HvbK
    177:177:void <init>(com.volmit.gloss.services.ContextSVC,long,org.bukkit.entity.Player) -> <init>
    181:182:void run() -> run
com.volmit.gloss.services.EmojiSVC -> com.volume.gloss.src.iSvS:
    com.volmit.gloss.volume.lang.collections.GList emoji -> VoJA
    18:18:void <init>() -> <init>
    25:28:void onStart() -> onStart
    32:71:void showEmoji(org.bukkit.entity.Player,int) -> eHBj
    75:142:void createDefaults() -> nceN
    147:147:void load() -> load
    152:152:com.volmit.gloss.volume.lang.collections.GList getRegistries() -> uFSf
    158:159:void register(com.volmit.gloss.api.display.Emoji) -> eHBj
    164:172:com.volmit.gloss.api.display.Emoji get(java.lang.String) -> vjtI
    18:18:java.lang.Object get(java.lang.String) -> get
    18:18:void register(java.lang.Object) -> register
com.volmit.gloss.services.ExecSVC -> com.volume.gloss.src.Nwlu:
    java.lang.Thread executorThread -> mrJp
    java.util.concurrent.ExecutorService executorService -> UkfA
    19:19:void <init>() -> <init>
    26:26:java.util.concurrent.ExecutorService getSVC() -> BdFr
    32:93:void start() -> start
    98:99:void stop() -> stop
com.volmit.gloss.services.ExecSVC$1 -> com.volume.gloss.src.Nwlu$1:
    com.volmit.gloss.services.ExecSVC this$0 -> nuMp
    33:33:void <init>(com.volmit.gloss.services.ExecSVC,long) -> <init>
    37:47:void run() -> run
com.volmit.gloss.services.ExecSVC$2 -> com.volume.gloss.src.Nwlu$2:
    com.volmit.gloss.services.ExecSVC this$0 -> nuMp
    51:51:void <init>(com.volmit.gloss.services.ExecSVC) -> <init>
    55:57:java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool) -> newThread
com.volmit.gloss.services.ExecSVC$3 -> com.volume.gloss.src.Nwlu$3:
    com.volmit.gloss.services.ExecSVC this$0 -> nuMp
    60:60:void <init>(com.volmit.gloss.services.ExecSVC) -> <init>
    64:65:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.volmit.gloss.services.ExecSVC$4 -> com.volume.gloss.src.Nwlu$4:
    com.volmit.gloss.services.ExecSVC this$0 -> nuMp
    69:69:void <init>(com.volmit.gloss.services.ExecSVC) -> <init>
    73:88:void run() -> run
com.volmit.gloss.services.FunctionSVC -> com.volume.gloss.src.LOeA:
    com.volmit.gloss.volume.lang.collections.GMap functions -> DiuL
    13:13:void <init>() -> <init>
    20:22:void start() -> start
    27:27:com.volmit.gloss.volume.lang.collections.GList getRegistries() -> uFSf
    33:35:void register(com.volmit.gloss.api.function.CachedFunction) -> eHBj
    40:40:com.volmit.gloss.api.function.CachedFunction get(java.lang.String) -> qKGa
    45:48:void createDefaults() -> nceN
    13:13:java.lang.Object get(java.lang.String) -> get
    13:13:void register(java.lang.Object) -> register
    47:47:java.lang.Object lambda$createDefaults$2(org.bukkit.entity.Player) -> gpLR
    46:46:java.lang.Object lambda$createDefaults$1(org.bukkit.entity.Player) -> HTOe
    45:45:java.lang.Object lambda$createDefaults$0(org.bukkit.entity.Player) -> SBmD
com.volmit.gloss.services.IntentSVC -> com.volume.gloss.src.Xcgp:
    com.volmit.gloss.volume.lang.collections.GList intents -> aMEl
    22:22:void <init>() -> <init>
    29:30:void start() -> start
    35:35:com.volmit.gloss.volume.lang.collections.GList getRegistries() -> uFSf
    41:42:void register(com.volmit.gloss.api.intent.Intent) -> eHBj
    47:57:com.volmit.gloss.volume.lang.collections.GList getIntents(org.bukkit.Material) -> RbNj
    63:73:com.volmit.gloss.volume.lang.collections.GList getIntents(org.bukkit.entity.EntityType) -> RbNj
    79:87:com.volmit.gloss.api.intent.Intent get(java.lang.String) -> jWTX
    93:123:void register(org.bukkit.plugin.Plugin,java.lang.String) -> kHrl
    22:22:java.lang.Object get(java.lang.String) -> get
    22:22:void register(java.lang.Object) -> register
com.volmit.gloss.services.LoaderSVC -> com.volume.gloss.src.yuGq:
    10:10:void <init>() -> <init>
    16:16:void start() -> start
    20:28:java.io.File getSourceFile(java.lang.String) -> ugtU
    33:36:java.io.File getSourceFolder() -> BReB
com.volmit.gloss.services.NodeSVC -> com.volume.gloss.src.BBGf:
    com.volmit.gloss.volume.lang.collections.GList captures -> ntma
    9:9:void <init>() -> <init>
    16:17:void start() -> start
    22:22:com.volmit.gloss.volume.lang.collections.GList getRegistries() -> uFSf
    28:29:void register(com.volmit.gloss.api.context.Node) -> kHrl
    34:42:com.volmit.gloss.api.context.Node get(java.lang.String) -> rMjM
    9:9:java.lang.Object get(java.lang.String) -> get
    9:9:void register(java.lang.Object) -> register
com.volmit.gloss.services.PacketSVC -> com.volume.gloss.src.PKNY:
    com.volmit.gloss.volume.bukkit.nms.IPacketHandler handle -> XtoI
    19:21:void <init>() -> <init>
    75:92:void report(java.lang.Object,java.lang.String) -> eHBj
    97:97:void update() -> update
    102:103:void start() -> start
    108:109:void stop() -> stop
com.volmit.gloss.services.PacketSVC$1 -> com.volume.gloss.src.PKNY$1:
    com.volmit.gloss.services.PacketSVC this$0 -> qlxS
    22:22:void <init>(com.volmit.gloss.services.PacketSVC) -> <init>
    28:28:java.lang.Object onPacketOutAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketOutAsync
    34:69:java.lang.Object onPacketInAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketInAsync
com.volmit.gloss.services.SourceSVC -> com.volume.gloss.src.MtiJ:
    com.volmit.gloss.volume.lang.collections.GList descriptors -> KoLm
    com.volmit.gloss.volume.lang.collections.GList temporaryDescriptors -> MuSX
    23:23:void <init>() -> <init>
    30:38:java.io.File getSourceFile(java.lang.String) -> ugtU
    43:46:java.io.File getSourceFolder() -> BReB
    51:61:void createNewSource(java.lang.String,org.bukkit.Location) -> eHBj
    65:75:java.lang.String idForName(java.lang.String) -> Ujxg
    82:95:void save() -> save
    99:143:void load() -> load
    148:151:void start() -> start
    156:157:void stop() -> stop
    161:162:void add(com.volmit.gloss.api.intent.TemporaryDescriptor) -> eHBj
    166:175:void update() -> update
    179:192:void remove(com.volmit.gloss.api.intent.Descriptor) -> eHBj
    196:197:void clearTemporaryDescriptors() -> STWJ
    201:209:com.volmit.gloss.api.intent.TemporaryDescriptor getTemporary(java.lang.String) -> pXeV
    214:222:com.volmit.gloss.api.intent.Descriptor getDescriptor(com.volmit.gloss.api.context.StaticContext) -> HvTN
    227:227:com.volmit.gloss.volume.lang.collections.GList getDescriptors() -> Ploo
    232:235:com.volmit.gloss.volume.lang.collections.GList getAllDescriptors() -> Gatt
com.volmit.gloss.services.ViolatingSVC -> com.volume.gloss.src.Yfiv:
    com.volmit.gloss.volume.lang.collections.GList violators -> NftJ
    12:14:void <init>() -> <init>
    18:19:void registerViolator(com.volmit.gloss.api.inject.PluginViolator) -> eHBj
    23:33:void engage() -> XBCo
    37:47:void disengage() -> disengage
    52:53:void onStart() -> onStart
    58:59:void onStop() -> onStop
com.volmit.gloss.util.ColoredString -> com.volume.gloss.src.hQRj:
    com.volmit.gloss.volume.bukkit.util.text.C c -> MAma
    java.lang.String s -> s
    24:27:void <init>(com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> <init>
    32:32:java.lang.String toString() -> toString
    37:37:com.volmit.gloss.volume.bukkit.util.text.C getC() -> ArFt
    42:43:void setC(com.volmit.gloss.volume.bukkit.util.text.C) -> eHBj
    47:47:java.lang.String getS() -> goox
    52:53:void setS(java.lang.String) -> dVBp
com.volmit.gloss.util.GameFont -> com.volume.gloss.src.GavQ:
    int spaceSize -> spaceSize
    java.lang.String fontChars -> fontChars
    int[][] fontData -> fontData
    com.volmit.gloss.util.GameFont Font -> jGBa
    283:284:void <init>() -> <init>
    287:329:void <init>(boolean) -> <init>
    12:276:void <clinit>() -> <clinit>
com.volmit.gloss.util.GlossGlower -> com.volume.gloss.src.cuHq:
    org.bukkit.entity.Player observer -> LaOC
    org.bukkit.entity.Entity entity -> entity
    org.bukkit.ChatColor color -> WPKy
    boolean sentTeam -> Xtqm
    24:29:void <init>(org.bukkit.entity.Entity,org.bukkit.entity.Player) -> <init>
    34:34:org.bukkit.entity.Entity getEntity() -> getEntity
    40:40:org.bukkit.ChatColor getColor() -> getColor
    46:53:void setColor(org.bukkit.ChatColor) -> setColor
    58:64:void setGlowing(boolean) -> setGlowing
    69:75:void destroy() -> destroy
    80:80:org.bukkit.entity.Player getObserver() -> Txxu
com.volmit.gloss.util.JarScannerSpecial -> com.volume.gloss.src.teWT:
    com.volmit.gloss.volume.lang.collections.GSet classes -> classes
    java.io.File jar -> jar
    java.lang.String superPackage -> ivbX
    24:28:void <init>(java.io.File,java.lang.String) -> <init>
    38:70:void scan() -> scan
    79:79:com.volmit.gloss.volume.lang.collections.GSet getClasses() -> getClasses
    89:89:java.io.File getJar() -> getJar
com.volmit.gloss.util.PacketGate -> com.volume.gloss.src.nuHL:
    int maxpps -> woJW
    int psf -> cAmL
    int psd -> mOip
    long mark -> eiue
    int pps -> DGtp
    int pdps -> xPIh
    15:22:void <init>(int) -> <init>
    26:35:boolean shouldSend() -> FMoH
    40:48:void updateTimeBlock() -> uWVf
com.volmit.gloss.util.RTEX -> com.volume.gloss.src.Xcfl:
    com.volmit.gloss.volume.lang.collections.GList extras -> ndOL
    23:25:void <init>(com.volmit.gloss.util.ColoredString[]) -> <init>
    28:30:void <init>() -> <init>
    34:34:com.volmit.gloss.volume.lang.collections.GList getExtras() -> pYHo
    44:58:com.volmit.gloss.volume.lang.json.JSONObject toJSON() -> eHBj
com.volmit.gloss.util.RTX -> com.volume.gloss.src.dDey:
    com.volmit.gloss.volume.lang.json.JSONArray base -> CDqo
    23:26:void <init>() -> <init>
    36:37:void add(com.volmit.gloss.volume.lang.json.JSONObject) -> DYEw
    47:51:void addText(java.lang.String) -> addText
    63:67:void addText(java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> eHBj
    81:90:void addTextHover(java.lang.String,com.volmit.gloss.util.RTEX,com.volmit.gloss.volume.bukkit.util.text.C) -> eHBj
    104:114:void addTextSuggestedCommand(java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> eHBj
    128:138:void addTextOpenURL(java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> kHrl
    154:164:void addTextFireCommand(java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> DYEw
    182:196:void addTextSuggestedHoverCommand(java.lang.String,com.volmit.gloss.util.RTEX,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> eHBj
    212:226:void addTextOpenHoverURL(java.lang.String,com.volmit.gloss.util.RTEX,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> kHrl
    242:256:void addTextFireHoverCommand(java.lang.String,com.volmit.gloss.util.RTEX,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> DYEw
    265:265:com.volmit.gloss.volume.lang.json.JSONArray toJSON() -> wKyw
    276:277:void tellRawTo(org.bukkit.entity.Player) -> gpKR
com.volmit.gloss.volume.bukkit.L -> com.volmit.gloss.volume.bukkit.L:
    5:5:void <init>() -> <init>
    9:10:void l(java.lang.String) -> l
com.volmit.gloss.volume.bukkit.U -> com.volmit.gloss.volume.bukkit.U:
    20:20:void <init>() -> <init>
    24:25:void register(org.bukkit.event.Listener) -> register
    29:30:void unregister(org.bukkit.event.Listener) -> unregister
    34:35:void startService(java.lang.Class) -> startService
    39:39:com.volmit.gloss.volume.bukkit.service.IService getService(java.lang.Class) -> getService
    44:63:com.volmit.gloss.volume.lang.collections.GList getChildren(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> getChildren
    68:102:void read(java.io.File,com.volmit.gloss.volume.bukkit.pawn.IPawn) -> read
    106:106:com.volmit.gloss.volume.bukkit.pawn.PawnObject getPawnObject(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> getPawnObject
    111:142:com.volmit.gloss.volume.bukkit.pawn.PawnObject getPawnObject(com.volmit.gloss.volume.bukkit.pawn.PawnObject,com.volmit.gloss.volume.bukkit.pawn.IPawn) -> getPawnObject
    147:153:void writeYML(com.volmit.gloss.volume.bukkit.pawn.IPawn,java.io.File) -> writeYML
    157:157:com.volmit.gloss.volume.cluster.DataCluster toDataCluster(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> toDataCluster
    162:165:void readYML(com.volmit.gloss.volume.bukkit.pawn.IPawn,java.io.File) -> readYML
    169:170:void fromDataCluster(com.volmit.gloss.volume.bukkit.pawn.IPawn,com.volmit.gloss.volume.cluster.DataCluster) -> fromDataCluster
com.volmit.gloss.volume.bukkit.VolumePlugin -> com.volmit.gloss.volume.bukkit.VolumePlugin:
    com.volmit.gloss.volume.bukkit.task.TaskManager taskManager -> taskManager
    com.volmit.gloss.volume.bukkit.pawn.PawnManager pawnManager -> pawnManager
    com.volmit.gloss.volume.bukkit.service.ServiceManager serviceManager -> serviceManager
    com.volmit.gloss.volume.bukkit.VolumePlugin vpi -> vpi
    java.io.File f -> f
    15:15:void <init>() -> <init>
    26:26:java.io.File getFile() -> getFile
    32:47:void onEnable() -> onEnable
    54:61:void onDisable() -> onDisable
    65:67:java.io.File getDataFile(java.lang.String[]) -> getDataFile
    72:74:java.io.File getDataFolder(java.lang.String[]) -> getDataFolder
    79:79:com.volmit.gloss.volume.bukkit.task.TaskManager getTaskManager() -> getTaskManager
    84:84:com.volmit.gloss.volume.bukkit.pawn.PawnManager getPawnManager() -> getPawnManager
    89:89:com.volmit.gloss.volume.bukkit.service.IService getService(java.lang.Class) -> getService
    94:94:com.volmit.gloss.volume.bukkit.service.ServiceManager getServiceManager() -> getServiceManager
    101:101:void tagify(com.volmit.gloss.volume.bukkit.command.VolumeSender) -> tagify
com.volmit.gloss.volume.bukkit.command.Command -> com.volmit.gloss.volume.bukkit.command.Command:
    java.lang.String value() -> value
com.volmit.gloss.volume.bukkit.command.CommandTag -> com.volmit.gloss.volume.bukkit.command.CommandTag:
    java.lang.String value() -> value
com.volmit.gloss.volume.bukkit.command.ICommand -> com.volmit.gloss.volume.bukkit.command.ICommand:
    java.lang.String getNode() -> getNode
    com.volmit.gloss.volume.lang.collections.GList getNodes() -> getNodes
    com.volmit.gloss.volume.lang.collections.GList getAllNodes() -> getAllNodes
    void addNode(java.lang.String) -> addNode
    boolean handle(com.volmit.gloss.volume.bukkit.command.VolumeSender,java.lang.String[]) -> handle
com.volmit.gloss.volume.bukkit.command.PawnCommand -> com.volmit.gloss.volume.bukkit.command.PawnCommand:
    com.volmit.gloss.volume.lang.collections.GList nodes -> nodes
    java.lang.String node -> node
    10:14:void <init>(java.lang.String,java.lang.String[]) -> <init>
    19:19:java.lang.String getNode() -> getNode
    25:25:com.volmit.gloss.volume.lang.collections.GList getNodes() -> getNodes
    31:31:com.volmit.gloss.volume.lang.collections.GList getAllNodes() -> getAllNodes
    38:39:void addNode(java.lang.String) -> addNode
com.volmit.gloss.volume.bukkit.command.RouterCommand -> com.volmit.gloss.volume.bukkit.command.RouterCommand:
    org.bukkit.command.CommandExecutor ex -> ex
    12:16:void <init>(com.volmit.gloss.volume.bukkit.command.ICommand,org.bukkit.command.CommandExecutor) -> <init>
    21:21:boolean execute(org.bukkit.command.CommandSender,java.lang.String,java.lang.String[]) -> execute
com.volmit.gloss.volume.bukkit.command.VirtualCommand -> com.volmit.gloss.volume.bukkit.command.VirtualCommand:
    com.volmit.gloss.volume.bukkit.command.ICommand command -> command
    java.lang.String tag -> tag
    com.volmit.gloss.volume.lang.collections.GMap children -> children
    20:21:void <init>(com.volmit.gloss.volume.bukkit.command.ICommand) -> <init>
    23:51:void <init>(com.volmit.gloss.volume.bukkit.command.ICommand,java.lang.String) -> <init>
    55:55:com.volmit.gloss.volume.bukkit.command.ICommand getCommand() -> getCommand
    60:60:com.volmit.gloss.volume.lang.collections.GMap getChildren() -> getChildren
    65:92:boolean hit(org.bukkit.command.CommandSender,com.volmit.gloss.volume.lang.collections.GList) -> hit
com.volmit.gloss.volume.bukkit.command.VolumeSender -> com.volmit.gloss.volume.bukkit.command.VolumeSender:
    org.bukkit.command.CommandSender s -> s
    java.lang.String tag -> tag
    20:24:void <init>(org.bukkit.command.CommandSender) -> <init>
    28:29:void setTag(java.lang.String) -> setTag
    33:33:java.lang.String getTag() -> getTag
    38:38:org.bukkit.entity.Player player() -> player
    43:43:org.bukkit.command.CommandSender getS() -> getS
    49:49:boolean isPermissionSet(java.lang.String) -> isPermissionSet
    55:55:boolean isPermissionSet(org.bukkit.permissions.Permission) -> isPermissionSet
    61:61:boolean hasPermission(java.lang.String) -> hasPermission
    67:67:boolean hasPermission(org.bukkit.permissions.Permission) -> hasPermission
    73:73:org.bukkit.permissions.PermissionAttachment addAttachment(org.bukkit.plugin.Plugin,java.lang.String,boolean) -> addAttachment
    79:79:org.bukkit.permissions.PermissionAttachment addAttachment(org.bukkit.plugin.Plugin) -> addAttachment
    85:85:org.bukkit.permissions.PermissionAttachment addAttachment(org.bukkit.plugin.Plugin,java.lang.String,boolean,int) -> addAttachment
    91:91:org.bukkit.permissions.PermissionAttachment addAttachment(org.bukkit.plugin.Plugin,int) -> addAttachment
    97:98:void removeAttachment(org.bukkit.permissions.PermissionAttachment) -> removeAttachment
    103:104:void recalculatePermissions() -> recalculatePermissions
    109:109:java.util.Set getEffectivePermissions() -> getEffectivePermissions
    115:115:boolean isOp() -> isOp
    121:122:void setOp(boolean) -> setOp
    128:129:void sendMessage(java.lang.String) -> sendMessage
    134:135:void sendMessage(java.lang.String[]) -> sendMessage
    140:140:org.bukkit.Server getServer() -> getServer
    146:146:java.lang.String getName() -> getName
    152:152:org.bukkit.command.CommandSender$Spigot spigot() -> spigot
com.volmit.gloss.volume.bukkit.coretick.BlockInjection -> com.volmit.gloss.volume.bukkit.coretick.BlockInjection:
com.volmit.gloss.volume.bukkit.coretick.CoreInstance -> com.volmit.gloss.volume.bukkit.coretick.CoreInstance:
    com.volmit.gloss.volume.lang.collections.GMap swap -> swap
    com.volmit.gloss.volume.lang.collections.GMap ids -> ids
    com.volmit.gloss.volume.lang.collections.GMap enumKeys -> enumKeys
    11:16:void <init>() -> <init>
    20:23:void putSwap(java.lang.String,java.lang.String,int,java.lang.Class) -> putSwap
    28:28:void inject() -> inject
    32:32:com.volmit.gloss.volume.lang.collections.GMap getSwap() -> getSwap
    37:37:com.volmit.gloss.volume.lang.collections.GMap getIds() -> getIds
    42:42:com.volmit.gloss.volume.lang.collections.GMap getEnumKeys() -> getEnumKeys
com.volmit.gloss.volume.bukkit.dungeon.IRoom -> com.volmit.gloss.volume.bukkit.dungeon.IRoom:
    boolean canConnect(com.volmit.gloss.volume.bukkit.util.world.Direction) -> canConnect
com.volmit.gloss.volume.bukkit.nms.IAdapter -> com.volmit.gloss.volume.bukkit.nms.IAdapter:
    void spawnFallingBlock(int,java.util.UUID,org.bukkit.Location,org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> spawnFallingBlock
    void sendBrand(org.bukkit.entity.Player,java.lang.String) -> sendBrand
    void sendRemoveGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sendRemoveGlowingColorMeta
    void sendRemoveGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID) -> sendRemoveGlowingColorMetaEntity
    void sendRemoveGlowingColorMetaPlayer(org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> sendRemoveGlowingColorMetaPlayer
    void sendGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMeta
    void sendGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaEntity
    void sendGlowingColorMetaName(org.bukkit.entity.Player,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaName
    void sendEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> sendEffect
    void removeEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType) -> removeEffect
    void sendTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C,int) -> sendTeam
    void addTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> addTeam
    void updateTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> updateTeam
    void addToTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> addToTeam
    void removeTeam(org.bukkit.entity.Player,java.lang.String) -> removeTeam
    void removeFromTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> removeFromTeam
    void displayScoreboard(org.bukkit.entity.Player,int,java.lang.String) -> displayScoreboard
    void displayScoreboard(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> displayScoreboard
    void sendNewObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendNewObjective
    void sendDeleteObjective(org.bukkit.entity.Player,java.lang.String) -> sendDeleteObjective
    void sendEditObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendEditObjective
    void sendScoreUpdate(org.bukkit.entity.Player,java.lang.String,java.lang.String,int) -> sendScoreUpdate
    void sendScoreRemove(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendScoreRemove
    void updatePassengers(org.bukkit.entity.Player,int,int[]) -> updatePassengers
    void injectBlockInstance(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,java.lang.Object) -> injectBlockInstance
    void updateSection(org.bukkit.Chunk,int) -> updateSection
    void updateSections(org.bukkit.Chunk,int,int) -> updateSections
    void updateSections(org.bukkit.Chunk,com.volmit.gloss.volume.lang.collections.GSet) -> updateSections
    void queueSection(org.bukkit.Chunk,int) -> queueSection
    void queueSection(org.bukkit.Location) -> queueSection
    void removeEntity(int,org.bukkit.entity.Player) -> removeEntity
    void moveEntityRelative(int,org.bukkit.entity.Player,double,double,double,boolean) -> moveEntityRelative
    void teleportEntity(int,org.bukkit.entity.Player,org.bukkit.Location,boolean) -> teleportEntity
    void spawnArmorStand(int,java.util.UUID,org.bukkit.Location,int,org.bukkit.entity.Player) -> spawnArmorStand
    void relight(org.bukkit.Chunk) -> relight
    void queueChunkUpdate(org.bukkit.Chunk) -> queueChunkUpdate
    void setBlock(org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> setBlock
    void generateChunk(org.bukkit.World,int,int) -> generateChunk
    void sendChunkUnload(int,int,org.bukkit.entity.Player) -> sendChunkUnload
    void sendChunkUnload(int,int,org.bukkit.Chunk) -> sendChunkUnload
    void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.entity.Player) -> sendChunkMap
    void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.Chunk) -> sendChunkMap
    void pathFind(org.bukkit.entity.LivingEntity,org.bukkit.Location,boolean,double) -> pathFind
    com.volmit.gloss.volume.bukkit.util.net.ProtocolRange getSupportedProtocol() -> getSupportedProtocol
    void addPacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> addPacketHandler
    void removePacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> removePacketHandler
    void sendPacket(java.lang.Object) -> sendPacket
    void sendPacket(java.lang.Object,org.bukkit.World) -> sendPacket
    void sendPacket(java.lang.Object,org.bukkit.entity.Player) -> sendPacket
    void sendPacket(java.lang.Object,org.bukkit.Location) -> sendPacket
    void sendPacket(java.lang.Object,org.bukkit.Chunk) -> sendPacket
    int getViewDistance(org.bukkit.entity.Player) -> getViewDistance
    boolean canSee(org.bukkit.entity.Player,org.bukkit.Location) -> canSee
    boolean canSee(org.bukkit.entity.Player,org.bukkit.Chunk) -> canSee
    void sendPickup(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> sendPickup
    com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue getChunkQueue() -> getChunkQueue
    void scroll(org.bukkit.entity.Player,int) -> scroll
    int getAction(java.lang.Object) -> getAction
    org.bukkit.util.Vector getDirection(java.lang.Object) -> getDirection
    144:144:boolean isWithin(org.bukkit.Chunk,org.bukkit.Chunk,int) -> isWithin
com.volmit.gloss.volume.bukkit.nms.IPacketHandler -> com.volmit.gloss.volume.bukkit.nms.IPacketHandler:
    java.lang.Object onPacketOutAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketOutAsync
    java.lang.Object onPacketInAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketInAsync
com.volmit.gloss.volume.bukkit.nms.NMSAdapter -> com.volmit.gloss.volume.bukkit.nms.NMSAdapter:
    int INTERVAL -> INTERVAL
    int VOLUME -> VOLUME
    com.volmit.gloss.volume.bukkit.util.net.ProtocolRange pr -> pr
    com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue chunkQueue -> chunkQueue
    com.volmit.gloss.volume.lang.collections.GMap teamCache -> teamCache
    10:11:void <clinit>() -> <clinit>
    18:19:void <init>() -> <init>
    21:27:void <init>(com.volmit.gloss.volume.bukkit.util.net.ProtocolRange) -> <init>
    31:32:void <init>(com.volmit.gloss.volume.bukkit.util.net.Protocol,com.volmit.gloss.volume.bukkit.util.net.Protocol) -> <init>
    37:37:com.volmit.gloss.volume.bukkit.util.net.ProtocolRange getSupportedProtocol() -> getSupportedProtocol
    43:43:com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue getChunkQueue() -> getChunkQueue
com.volmit.gloss.volume.bukkit.nms.NMSSVC -> com.volmit.gloss.volume.bukkit.nms.NMSSVC:
    com.volmit.gloss.volume.bukkit.nms.IAdapter ia -> ia
    33:33:void <init>() -> <init>
    39:39:com.volmit.gloss.volume.bukkit.nms.IAdapter adapter() -> adapter
    45:89:void start() -> start
    93:93:boolean hasBinding() -> hasBinding
    100:100:void stop() -> stop
    105:110:com.volmit.gloss.volume.bukkit.util.net.ProtocolRange getSupportedProtocol() -> getSupportedProtocol
    116:122:void addPacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> addPacketHandler
    127:133:void removePacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> removePacketHandler
    138:144:void sendPacket(java.lang.Object) -> sendPacket
    149:155:void sendPacket(java.lang.Object,org.bukkit.World) -> sendPacket
    160:166:void sendPacket(java.lang.Object,org.bukkit.entity.Player) -> sendPacket
    171:177:void sendPacket(java.lang.Object,org.bukkit.Location) -> sendPacket
    182:188:void sendPacket(java.lang.Object,org.bukkit.Chunk) -> sendPacket
    193:198:int getViewDistance(org.bukkit.entity.Player) -> getViewDistance
    204:209:boolean canSee(org.bukkit.entity.Player,org.bukkit.Location) -> canSee
    215:220:boolean canSee(org.bukkit.entity.Player,org.bukkit.Chunk) -> canSee
    226:232:void sendPickup(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> sendPickup
    237:243:void pathFind(org.bukkit.entity.LivingEntity,org.bukkit.Location,boolean,double) -> pathFind
    248:254:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.entity.Player) -> sendChunkMap
    259:265:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.Chunk) -> sendChunkMap
    270:276:void sendChunkUnload(int,int,org.bukkit.entity.Player) -> sendChunkUnload
    281:287:void sendChunkUnload(int,int,org.bukkit.Chunk) -> sendChunkUnload
    292:298:void generateChunk(org.bukkit.World,int,int) -> generateChunk
    303:309:void setBlock(org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> setBlock
    314:320:void queueChunkUpdate(org.bukkit.Chunk) -> queueChunkUpdate
    325:330:com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue getChunkQueue() -> getChunkQueue
    336:342:void relight(org.bukkit.Chunk) -> relight
    347:353:void updateSection(org.bukkit.Chunk,int) -> updateSection
    358:364:void updateSections(org.bukkit.Chunk,int,int) -> updateSections
    369:375:void queueSection(org.bukkit.Chunk,int) -> queueSection
    380:386:void queueSection(org.bukkit.Location) -> queueSection
    391:397:void updateSections(org.bukkit.Chunk,com.volmit.gloss.volume.lang.collections.GSet) -> updateSections
    402:408:void injectBlockInstance(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,java.lang.Object) -> injectBlockInstance
    413:419:void scroll(org.bukkit.entity.Player,int) -> scroll
    424:429:int getAction(java.lang.Object) -> getAction
    435:440:org.bukkit.util.Vector getDirection(java.lang.Object) -> getDirection
    446:452:void spawnArmorStand(int,java.util.UUID,org.bukkit.Location,int,org.bukkit.entity.Player) -> spawnArmorStand
    457:463:void removeEntity(int,org.bukkit.entity.Player) -> removeEntity
    468:474:void moveEntityRelative(int,org.bukkit.entity.Player,double,double,double,boolean) -> moveEntityRelative
    479:485:void teleportEntity(int,org.bukkit.entity.Player,org.bukkit.Location,boolean) -> teleportEntity
    490:496:void updatePassengers(org.bukkit.entity.Player,int,int[]) -> updatePassengers
    501:507:void displayScoreboard(org.bukkit.entity.Player,int,java.lang.String) -> displayScoreboard
    512:518:void displayScoreboard(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> displayScoreboard
    523:529:void sendNewObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendNewObjective
    534:540:void sendDeleteObjective(org.bukkit.entity.Player,java.lang.String) -> sendDeleteObjective
    545:551:void sendEditObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendEditObjective
    556:562:void sendScoreUpdate(org.bukkit.entity.Player,java.lang.String,java.lang.String,int) -> sendScoreUpdate
    567:573:void sendScoreRemove(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendScoreRemove
    578:584:void sendTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C,int) -> sendTeam
    589:595:void addTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> addTeam
    600:606:void updateTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> updateTeam
    611:617:void addToTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> addToTeam
    622:628:void removeTeam(org.bukkit.entity.Player,java.lang.String) -> removeTeam
    633:639:void removeFromTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> removeFromTeam
    644:650:void sendGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMeta
    655:661:void sendEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> sendEffect
    666:672:void removeEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType) -> removeEffect
    677:683:void sendRemoveGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sendRemoveGlowingColorMeta
    688:694:void sendRemoveGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID) -> sendRemoveGlowingColorMetaEntity
    699:705:void sendRemoveGlowingColorMetaPlayer(org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> sendRemoveGlowingColorMetaPlayer
    710:716:void sendGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaEntity
    721:727:void sendGlowingColorMetaName(org.bukkit.entity.Player,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaName
    732:738:void sendBrand(org.bukkit.entity.Player,java.lang.String) -> sendBrand
    743:749:void spawnFallingBlock(int,java.util.UUID,org.bukkit.Location,org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> spawnFallingBlock
com.volmit.gloss.volume.bukkit.nms.TinyProtocol -> com.volmit.gloss.volume.bukkit.nms.TinyProtocol:
    java.lang.String OBC_PREFIX -> OBC_PREFIX
    java.lang.String NMS_PREFIX -> NMS_PREFIX
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol$MethodInvoker getPlayerHandle -> getPlayerHandle
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol$FieldAccessor getConnection -> getConnection
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol$FieldAccessor getManager -> getManager
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol$FieldAccessor getChannel -> getChannel
    java.util.Map channelLookup -> channelLookup
    boolean closed -> closed
    org.bukkit.plugin.Plugin plugin -> plugin
    29:30:void <clinit>() -> <clinit>
    33:54:void <init>(org.bukkit.plugin.Plugin) -> <init>
    59:97:void injectPlayer(org.bukkit.entity.Player) -> injectPlayer
    101:101:java.lang.String getHandlerName() -> getHandlerName
    107:110:void onPlayerJoin(org.bukkit.event.player.PlayerJoinEvent) -> onPlayerJoin
    115:119:void onPluginDisable(org.bukkit.event.server.PluginDisableEvent) -> onPluginDisable
    131:132:void sendPacket(org.bukkit.entity.Player,java.lang.Object) -> sendPacket
    144:145:void receivePacket(org.bukkit.entity.Player,java.lang.Object) -> receivePacket
    156:166:io.netty.channel.Channel getChannel(org.bukkit.entity.Player) -> getChannel
    182:182:java.lang.Object onPacketOutAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketOutAsync
    196:196:java.lang.Object onPacketInAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketInAsync
    205:215:void close() -> close
    230:230:com.volmit.gloss.volume.bukkit.nms.TinyProtocol$FieldAccessor getField(java.lang.Class,java.lang.String,java.lang.Class) -> getField
    246:246:com.volmit.gloss.volume.bukkit.nms.TinyProtocol$FieldAccessor getField(java.lang.Class,java.lang.Class,int) -> getField
    262:262:com.volmit.gloss.volume.bukkit.nms.TinyProtocol$FieldAccessor getField(java.lang.String,java.lang.Class,int) -> getField
    268:317:com.volmit.gloss.volume.bukkit.nms.TinyProtocol$FieldAccessor getField(java.lang.Class,java.lang.String,java.lang.Class,int) -> getField
    336:362:com.volmit.gloss.volume.bukkit.nms.TinyProtocol$MethodInvoker getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    377:381:java.lang.Class getMinecraftClass(java.lang.String) -> getMinecraftClass
    397:401:java.lang.Class getCraftBukkitClass(java.lang.String) -> getCraftBukkitClass
    42:42:org.bukkit.plugin.Plugin access$0(com.volmit.gloss.volume.bukkit.nms.TinyProtocol) -> access$0
com.volmit.gloss.volume.bukkit.nms.TinyProtocol$1 -> com.volmit.gloss.volume.bukkit.nms.TinyProtocol$1:
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol this$0 -> this$0
    org.bukkit.entity.Player val$player -> val$player
    1:59:void <init>(com.volmit.gloss.volume.bukkit.nms.TinyProtocol,org.bukkit.entity.Player) -> <init>
    66:77:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object) -> channelRead
    84:95:void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise) -> write
com.volmit.gloss.volume.bukkit.nms.TinyProtocol$2 -> com.volmit.gloss.volume.bukkit.nms.TinyProtocol$2:
    java.lang.reflect.Field val$field -> val$field
    1:275:void <init>(java.lang.reflect.Field) -> <init>
    283:287:java.lang.Object get(java.lang.Object) -> get
    296:302:void set(java.lang.Object,java.lang.Object) -> set
    308:308:boolean hasField(java.lang.Object) -> hasField
com.volmit.gloss.volume.bukkit.nms.TinyProtocol$3 -> com.volmit.gloss.volume.bukkit.nms.TinyProtocol$3:
    java.lang.reflect.Method val$method -> val$method
    1:342:void <init>(java.lang.reflect.Method) -> <init>
    349:353:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
com.volmit.gloss.volume.bukkit.nms.TinyProtocol$FieldAccessor -> com.volmit.gloss.volume.bukkit.nms.TinyProtocol$FieldAccessor:
    java.lang.Object get(java.lang.Object) -> get
    void set(java.lang.Object,java.lang.Object) -> set
    boolean hasField(java.lang.Object) -> hasField
com.volmit.gloss.volume.bukkit.nms.TinyProtocol$MethodInvoker -> com.volmit.gloss.volume.bukkit.nms.TinyProtocol$MethodInvoker:
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk -> com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk:
    int DEFAULT_BIOME -> DEFAULT_BIOME
    com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSection[] sections -> sections
    byte[] biome -> biome
    int x -> x
    int z -> z
    boolean sky -> sky
    13:13:void <clinit>() -> <clinit>
    21:25:void <init>() -> <init>
    29:33:void <init>(org.bukkit.Chunk) -> <init>
    38:60:void absorb(org.bukkit.Chunk) -> absorb
    64:64:boolean isSky() -> isSky
    69:70:void setSky(boolean) -> setSky
    74:75:void setBiome(int,int,org.bukkit.block.Biome) -> setBiome
    79:79:org.bukkit.block.Biome getBiome(int,int) -> getBiome
    84:98:void makeContinuous() -> makeContinuous
    102:106:void forceContinuous(int) -> forceContinuous
    110:114:void forceFullColumn() -> forceFullColumn
    119:177:void relightFast() -> relightFast
    181:196:byte[] write() -> write
    201:201:boolean hasSky() -> hasSky
    206:225:boolean isContinuous() -> isContinuous
    230:234:void setSkyLight(int,int,int,byte) -> setSkyLight
    238:242:void setBlockLight(int,int,int,byte) -> setBlockLight
    246:250:void set(int,int,int,int,byte) -> set
    254:258:void ensureSection(int) -> ensureSection
    262:262:int getSectionY(int) -> getSectionY
    267:277:int getBitMask() -> getBitMask
    282:282:int getSection(int) -> getSection
    287:287:com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSection[] getSections() -> getSections
    292:292:int getX() -> getX
    297:297:int getZ() -> getZ
    302:303:void setX(int) -> setX
    307:308:void setZ(int) -> setZ
com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType -> com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType:
    com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType SWING_MAIN -> SWING_MAIN
    com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType TAKE_DAMAGE -> TAKE_DAMAGE
    com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType LEAVE_BED -> LEAVE_BED
    com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType SWING_OFF -> SWING_OFF
    com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType CRITICAL_EFFECT -> CRITICAL_EFFECT
    com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType MAGIC_CRITICAL_EFFFECT -> MAGIC_CRITICAL_EFFFECT
    com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType[] ENUM$VALUES -> ENUM$VALUES
    3:10:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.nms.adapter.AnimationType valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.nms.adapter.ByteBufUtils -> com.volmit.gloss.volume.bukkit.nms.adapter.ByteBufUtils:
    34:34:void <init>() -> <init>
    44:47:java.lang.String readUTF8(io.netty.buffer.ByteBuf) -> readUTF8
    58:65:void writeUTF8(io.netty.buffer.ByteBuf,java.lang.String) -> writeUTF8
    75:88:int readVarInt(io.netty.buffer.ByteBuf) -> readVarInt
    100:110:void writeVarInt(io.netty.buffer.ByteBuf,int) -> writeVarInt
com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSection -> com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSection:
    int ARRAY_SIZE -> ARRAY_SIZE
    byte EMPTY_BLOCK_LIGHT -> EMPTY_BLOCK_LIGHT
    byte EMPTY_SKYLIGHT -> EMPTY_SKYLIGHT
    byte DEFAULT_BLOCK_LIGHT -> DEFAULT_BLOCK_LIGHT
    byte DEFAULT_SKYLIGHT -> DEFAULT_SKYLIGHT
    int GLOBAL_PALETTE_BITS_PER_BLOCK -> GLOBAL_PALETTE_BITS_PER_BLOCK
    it.unimi.dsi.fastutil.ints.IntList palette -> palette
    com.volmit.gloss.volume.bukkit.nms.adapter.VariableValueArray data -> data
    com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray skyLight -> skyLight
    com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray blockLight -> blockLight
    int count -> count
    78:79:void <init>() -> <init>
    97:98:void <init>(char[]) -> <init>
    117:127:void <init>(char[],com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray,com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray) -> <init>
    149:175:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.VariableValueArray,it.unimi.dsi.fastutil.ints.IntList,com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray,com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray) -> <init>
    186:195:com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSection fromStateArray(short[]) -> fromStateArray
    207:216:com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSection fromIdArray(short[]) -> fromIdArray
    228:237:com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSection fromIdArray(byte[]) -> fromIdArray
    253:257:int index(int,int,int) -> index
    269:312:void loadTypeArray(char[]) -> loadTypeArray
    326:327:void optimize() -> optimize
    334:347:void recount() -> recount
    356:356:com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSection snapshot() -> snapshot
    372:377:char getType(int,int,int) -> getType
    382:383:void setType(int,int,int,int,byte) -> setType
    399:448:void setType(int,int,int,char) -> setType
    457:467:char[] getTypes() -> getTypes
    483:483:byte getBlockLight(int,int,int) -> getBlockLight
    500:501:void setBlockLight(int,int,int,byte) -> setBlockLight
    516:516:byte getSkyLight(int,int,int) -> getSkyLight
    533:534:void setSkyLight(int,int,int,byte) -> setSkyLight
    558:558:boolean isEmpty() -> isEmpty
    566:578:void writeVarInt(java.io.ByteArrayOutputStream,int) -> writeVarInt
    582:592:void writeLong(java.io.ByteArrayOutputStream,long) -> writeLong
    607:644:void writeToBuf(java.io.ByteArrayOutputStream,boolean) -> writeToBuf
    60:60:com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray getSkyLight() -> getSkyLight
    65:65:com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray getBlockLight() -> getBlockLight
com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue -> com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue:
    com.volmit.gloss.volume.lang.collections.GList c -> c
    com.volmit.gloss.volume.lang.collections.GMap sections -> sections
    boolean running -> running
    com.volmit.gloss.volume.bukkit.task.SR s -> s
    int interval -> interval
    int volume -> volume
    16:30:void <init>(int,int) -> <init>
    34:98:void start() -> start
    102:103:void stop() -> stop
    107:107:boolean isRunning() -> isRunning
    112:116:void queue(org.bukkit.Chunk) -> queue
    120:126:void queueSection(org.bukkit.Chunk,int) -> queueSection
    17:17:com.volmit.gloss.volume.lang.collections.GMap access$0(com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue) -> access$0
    21:21:int access$1(com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue) -> access$1
    16:16:com.volmit.gloss.volume.lang.collections.GList access$2(com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue) -> access$2
    18:18:boolean access$3(com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue) -> access$3
    18:18:void access$4(com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue,boolean) -> access$4
com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue this$0 -> this$0
    1:34:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue,int) -> <init>
    39:96:void run() -> run
    34:34:com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue access$0(com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1) -> access$0
com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1 this$1 -> this$1
    com.volmit.gloss.volume.lang.collections.GList val$tosend -> val$tosend
    1:75:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1,com.volmit.gloss.volume.lang.collections.GList) -> <init>
    80:94:void run() -> run
com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1$1$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1$1$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1$1 this$2 -> this$2
    org.bukkit.Chunk val$i -> val$i
    1:82:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.ChunkSendQueue$1$1,org.bukkit.Chunk) -> <init>
    87:89:void run() -> run
com.volmit.gloss.volume.bukkit.nms.adapter.ChunkTracker -> com.volmit.gloss.volume.bukkit.nms.adapter.ChunkTracker:
    com.volmit.gloss.volume.lang.collections.GMap ig -> ig
    15:18:void <init>() -> <init>
    22:28:void hit(org.bukkit.Location) -> hit
    32:41:void flush() -> flush
com.volmit.gloss.volume.bukkit.nms.adapter.EditQueue -> com.volmit.gloss.volume.bukkit.nms.adapter.EditQueue:
    com.volmit.gloss.volume.lang.collections.GMap queue -> queue
    boolean flushing -> flushing
    long count -> count
    17:22:void <init>() -> <init>
    26:28:void queue(org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> queue
    32:53:void startFlushing() -> startFlushing
    57:59:void complete() -> complete
    63:70:void flush() -> flush
    74:74:long getCount() -> getCount
    14:14:boolean access$0(com.volmit.gloss.volume.bukkit.nms.adapter.EditQueue) -> access$0
    13:13:com.volmit.gloss.volume.lang.collections.GMap access$1(com.volmit.gloss.volume.bukkit.nms.adapter.EditQueue) -> access$1
com.volmit.gloss.volume.bukkit.nms.adapter.EditQueue$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.EditQueue$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.EditQueue this$0 -> this$0
    1:34:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.EditQueue) -> <init>
    39:51:void run() -> run
com.volmit.gloss.volume.bukkit.nms.adapter.IDUtils -> com.volmit.gloss.volume.bukkit.nms.adapter.IDUtils:
    3:3:void <init>() -> <init>
    7:7:int getCombined(int,int) -> getCombined
    12:12:int getId(int) -> getId
    17:17:byte getData(int) -> getData
com.volmit.gloss.volume.bukkit.nms.adapter.MCAChunkGenerator -> com.volmit.gloss.volume.bukkit.nms.adapter.MCAChunkGenerator:
    int minx -> minx
    int maxx -> maxx
    int minz -> minz
    int maxz -> maxz
    org.bukkit.World world -> world
    int START_GEN -> START_GEN
    int DONE -> DONE
    18:25:void <init>(org.bukkit.World,int,int) -> <init>
    29:44:void gen(com.volmit.gloss.volume.lang.collections.Callback) -> gen
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10:
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol p -> p
    com.volmit.gloss.volume.lang.collections.GMap viewDistance -> viewDistance
    com.volmit.gloss.volume.lang.collections.GList packetHandlers -> packetHandlers
    79:82:void <init>() -> <init>
    88:103:void spawnFallingBlock(int,java.util.UUID,org.bukkit.Location,org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> spawnFallingBlock
    108:110:void sendBrand(org.bukkit.entity.Player,java.lang.String) -> sendBrand
    115:116:void displayScoreboard(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> displayScoreboard
    121:125:void displayScoreboard(org.bukkit.entity.Player,int,java.lang.String) -> displayScoreboard
    130:141:void sendTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C,int) -> sendTeam
    146:152:void sendNewObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendNewObjective
    157:163:void sendDeleteObjective(org.bukkit.entity.Player,java.lang.String) -> sendDeleteObjective
    168:174:void sendEditObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendEditObjective
    179:185:void sendScoreUpdate(org.bukkit.entity.Player,java.lang.String,java.lang.String,int) -> sendScoreUpdate
    190:191:void addTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> addTeam
    196:197:void updateTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> updateTeam
    202:203:void removeTeam(org.bukkit.entity.Player,java.lang.String) -> removeTeam
    208:214:void addToTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> addToTeam
    219:225:void removeFromTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> removeFromTeam
    230:236:void sendScoreRemove(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendScoreRemove
    241:245:void updatePassengers(org.bukkit.entity.Player,int,int[]) -> updatePassengers
    250:260:void setBlock(org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> setBlock
    265:296:void start() -> start
    301:302:void stop() -> stop
    307:311:void sendPacket(java.lang.Object) -> sendPacket
    318:349:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.entity.Player) -> sendChunkMap
    354:361:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.Chunk) -> sendChunkMap
    366:370:void sendPacket(java.lang.Object,org.bukkit.World) -> sendPacket
    375:376:void sendPacket(java.lang.Object,org.bukkit.entity.Player) -> sendPacket
    381:388:void sendPacket(java.lang.Object,org.bukkit.Location) -> sendPacket
    393:400:void sendPacket(java.lang.Object,org.bukkit.Chunk) -> sendPacket
    405:410:int getViewDistance(org.bukkit.entity.Player) -> getViewDistance
    416:416:boolean canSee(org.bukkit.entity.Player,org.bukkit.Location) -> canSee
    422:422:boolean canSee(org.bukkit.entity.Player,org.bukkit.Chunk) -> canSee
    428:429:void addPacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> addPacketHandler
    434:435:void removePacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> removePacketHandler
    440:441:void sendPickup(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> sendPickup
    446:506:void pathFind(org.bukkit.entity.LivingEntity,org.bukkit.Location,boolean,double) -> pathFind
    511:512:void sendChunkUnload(int,int,org.bukkit.entity.Player) -> sendChunkUnload
    517:518:void sendChunkUnload(int,int,org.bukkit.Chunk) -> sendChunkUnload
    523:524:void generateChunk(org.bukkit.World,int,int) -> generateChunk
    529:530:void queueChunkUpdate(org.bukkit.Chunk) -> queueChunkUpdate
    535:536:void relight(org.bukkit.Chunk) -> relight
    540:550:int getBitMask(boolean[]) -> getBitMask
    555:562:boolean[] getBitMask(int[]) -> getBitMask
    567:574:boolean[] getBitMaskFT(int,int) -> getBitMaskFT
    580:581:void updateSection(org.bukkit.Chunk,int) -> updateSection
    586:587:void updateSections(org.bukkit.Chunk,int,int) -> updateSections
    592:593:void queueSection(org.bukkit.Chunk,int) -> queueSection
    598:599:void queueSection(org.bukkit.Location) -> queueSection
    604:605:void updateSections(org.bukkit.Chunk,com.volmit.gloss.volume.lang.collections.GSet) -> updateSections
    609:616:boolean[] getBitMask(com.volmit.gloss.volume.lang.collections.GSet) -> getBitMask
    622:622:void injectBlockInstance(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,java.lang.Object) -> injectBlockInstance
    627:628:void scroll(org.bukkit.entity.Player,int) -> scroll
    633:633:int getAction(java.lang.Object) -> getAction
    639:641:org.bukkit.util.Vector getDirection(java.lang.Object) -> getDirection
    647:661:void spawnArmorStand(int,java.util.UUID,org.bukkit.Location,int,org.bukkit.entity.Player) -> spawnArmorStand
    666:668:void removeEntity(int,org.bukkit.entity.Player) -> removeEntity
    673:680:void moveEntityRelative(int,org.bukkit.entity.Player,double,double,double,boolean) -> moveEntityRelative
    685:694:void teleportEntity(int,org.bukkit.entity.Player,org.bukkit.Location,boolean) -> teleportEntity
    699:708:void sendGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMeta
    713:714:void sendGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaEntity
    719:727:void sendRemoveGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID) -> sendRemoveGlowingColorMetaEntity
    732:740:void sendRemoveGlowingColorMetaPlayer(org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> sendRemoveGlowingColorMetaPlayer
    745:763:void sendGlowingColorMetaName(org.bukkit.entity.Player,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaName
    768:776:void sendRemoveGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sendRemoveGlowingColorMeta
    782:801:void sendEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> sendEffect
    806:807:void removeEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType) -> removeEffect
    75:75:com.volmit.gloss.volume.lang.collections.GList access$0(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10) -> access$0
    74:74:com.volmit.gloss.volume.lang.collections.GMap access$1(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10) -> access$1
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10 this$0 -> this$0
    1:265:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10,org.bukkit.plugin.Plugin) -> <init>
    270:275:java.lang.Object onPacketOutAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketOutAsync
    281:293:java.lang.Object onPacketInAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketInAsync
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10$2 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10$2:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10 this$0 -> this$0
    com.volmit.gloss.volume.lang.collections.FinalInteger val$fe -> val$fe
    net.minecraft.server.v1_10_R1.EntityInsentient val$le -> val$le
    org.bukkit.entity.LivingEntity val$e -> val$e
    net.minecraft.server.v1_10_R1.PathEntity val$pe -> val$pe
    boolean val$sprint -> val$sprint
    1:466:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA10,com.volmit.gloss.volume.lang.collections.FinalInteger,net.minecraft.server.v1_10_R1.EntityInsentient,org.bukkit.entity.LivingEntity,net.minecraft.server.v1_10_R1.PathEntity,boolean) -> <init>
    473:504:void run() -> run
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11:
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol p -> p
    com.volmit.gloss.volume.lang.collections.GMap viewDistance -> viewDistance
    com.volmit.gloss.volume.lang.collections.GList packetHandlers -> packetHandlers
    79:82:void <init>() -> <init>
    88:103:void spawnFallingBlock(int,java.util.UUID,org.bukkit.Location,org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> spawnFallingBlock
    107:109:void sendBrand(org.bukkit.entity.Player,java.lang.String) -> sendBrand
    114:115:void displayScoreboard(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> displayScoreboard
    120:124:void displayScoreboard(org.bukkit.entity.Player,int,java.lang.String) -> displayScoreboard
    129:140:void sendTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C,int) -> sendTeam
    145:151:void sendNewObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendNewObjective
    156:162:void sendDeleteObjective(org.bukkit.entity.Player,java.lang.String) -> sendDeleteObjective
    167:173:void sendEditObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendEditObjective
    178:184:void sendScoreUpdate(org.bukkit.entity.Player,java.lang.String,java.lang.String,int) -> sendScoreUpdate
    189:195:void sendScoreRemove(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendScoreRemove
    200:204:void updatePassengers(org.bukkit.entity.Player,int,int[]) -> updatePassengers
    209:210:void addTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> addTeam
    215:216:void updateTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> updateTeam
    221:222:void removeTeam(org.bukkit.entity.Player,java.lang.String) -> removeTeam
    227:233:void addToTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> addToTeam
    238:244:void removeFromTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> removeFromTeam
    249:280:void start() -> start
    285:286:void stop() -> stop
    291:295:void sendPacket(java.lang.Object) -> sendPacket
    300:304:void sendPacket(java.lang.Object,org.bukkit.World) -> sendPacket
    309:310:void sendPacket(java.lang.Object,org.bukkit.entity.Player) -> sendPacket
    315:322:void sendPacket(java.lang.Object,org.bukkit.Location) -> sendPacket
    327:334:void sendPacket(java.lang.Object,org.bukkit.Chunk) -> sendPacket
    339:344:int getViewDistance(org.bukkit.entity.Player) -> getViewDistance
    350:350:boolean canSee(org.bukkit.entity.Player,org.bukkit.Location) -> canSee
    356:356:boolean canSee(org.bukkit.entity.Player,org.bukkit.Chunk) -> canSee
    362:363:void addPacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> addPacketHandler
    368:369:void removePacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> removePacketHandler
    374:375:void sendPickup(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> sendPickup
    381:440:void pathFind(org.bukkit.entity.LivingEntity,org.bukkit.Location,boolean,double) -> pathFind
    447:478:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.entity.Player) -> sendChunkMap
    483:490:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.Chunk) -> sendChunkMap
    495:496:void sendChunkUnload(int,int,org.bukkit.entity.Player) -> sendChunkUnload
    501:502:void sendChunkUnload(int,int,org.bukkit.Chunk) -> sendChunkUnload
    507:508:void generateChunk(org.bukkit.World,int,int) -> generateChunk
    513:523:void setBlock(org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> setBlock
    528:529:void queueChunkUpdate(org.bukkit.Chunk) -> queueChunkUpdate
    534:535:void relight(org.bukkit.Chunk) -> relight
    539:549:int getBitMask(boolean[]) -> getBitMask
    554:561:boolean[] getBitMask(int[]) -> getBitMask
    566:573:boolean[] getBitMaskFT(int,int) -> getBitMaskFT
    579:580:void updateSection(org.bukkit.Chunk,int) -> updateSection
    585:586:void updateSections(org.bukkit.Chunk,int,int) -> updateSections
    591:592:void queueSection(org.bukkit.Chunk,int) -> queueSection
    597:598:void queueSection(org.bukkit.Location) -> queueSection
    603:604:void updateSections(org.bukkit.Chunk,com.volmit.gloss.volume.lang.collections.GSet) -> updateSections
    608:615:boolean[] getBitMask(com.volmit.gloss.volume.lang.collections.GSet) -> getBitMask
    623:623:void injectBlockInstance(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,java.lang.Object) -> injectBlockInstance
    628:629:void scroll(org.bukkit.entity.Player,int) -> scroll
    634:634:int getAction(java.lang.Object) -> getAction
    640:642:org.bukkit.util.Vector getDirection(java.lang.Object) -> getDirection
    648:662:void spawnArmorStand(int,java.util.UUID,org.bukkit.Location,int,org.bukkit.entity.Player) -> spawnArmorStand
    667:669:void removeEntity(int,org.bukkit.entity.Player) -> removeEntity
    674:681:void moveEntityRelative(int,org.bukkit.entity.Player,double,double,double,boolean) -> moveEntityRelative
    686:695:void teleportEntity(int,org.bukkit.entity.Player,org.bukkit.Location,boolean) -> teleportEntity
    700:709:void sendGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMeta
    714:722:void sendRemoveGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID) -> sendRemoveGlowingColorMetaEntity
    727:735:void sendRemoveGlowingColorMetaPlayer(org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> sendRemoveGlowingColorMetaPlayer
    739:740:void sendGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaEntity
    745:763:void sendGlowingColorMetaName(org.bukkit.entity.Player,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaName
    768:776:void sendRemoveGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sendRemoveGlowingColorMeta
    782:801:void sendEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> sendEffect
    806:807:void removeEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType) -> removeEffect
    75:75:com.volmit.gloss.volume.lang.collections.GList access$0(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11) -> access$0
    74:74:com.volmit.gloss.volume.lang.collections.GMap access$1(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11) -> access$1
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11 this$0 -> this$0
    1:249:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11,org.bukkit.plugin.Plugin) -> <init>
    254:259:java.lang.Object onPacketOutAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketOutAsync
    265:277:java.lang.Object onPacketInAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketInAsync
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11$2 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11$2:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11 this$0 -> this$0
    com.volmit.gloss.volume.lang.collections.FinalInteger val$fe -> val$fe
    net.minecraft.server.v1_11_R1.EntityInsentient val$le -> val$le
    org.bukkit.entity.LivingEntity val$e -> val$e
    net.minecraft.server.v1_11_R1.PathEntity val$pe -> val$pe
    boolean val$sprint -> val$sprint
    1:400:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA11,com.volmit.gloss.volume.lang.collections.FinalInteger,net.minecraft.server.v1_11_R1.EntityInsentient,org.bukkit.entity.LivingEntity,net.minecraft.server.v1_11_R1.PathEntity,boolean) -> <init>
    407:438:void run() -> run
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12:
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol p -> p
    com.volmit.gloss.volume.lang.collections.GMap viewDistance -> viewDistance
    com.volmit.gloss.volume.lang.collections.GList packetHandlers -> packetHandlers
    82:85:void <init>() -> <init>
    90:92:void sendBrand(org.bukkit.entity.Player,java.lang.String) -> sendBrand
    97:98:void displayScoreboard(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> displayScoreboard
    104:119:void spawnFallingBlock(int,java.util.UUID,org.bukkit.Location,org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> spawnFallingBlock
    124:128:void displayScoreboard(org.bukkit.entity.Player,int,java.lang.String) -> displayScoreboard
    133:144:void sendTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C,int) -> sendTeam
    149:150:void addTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> addTeam
    155:156:void updateTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> updateTeam
    161:162:void removeTeam(org.bukkit.entity.Player,java.lang.String) -> removeTeam
    167:173:void addToTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> addToTeam
    178:184:void removeFromTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> removeFromTeam
    189:195:void sendNewObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendNewObjective
    200:206:void sendDeleteObjective(org.bukkit.entity.Player,java.lang.String) -> sendDeleteObjective
    211:217:void sendEditObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendEditObjective
    222:228:void sendScoreUpdate(org.bukkit.entity.Player,java.lang.String,java.lang.String,int) -> sendScoreUpdate
    233:239:void sendScoreRemove(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendScoreRemove
    244:248:void updatePassengers(org.bukkit.entity.Player,int,int[]) -> updatePassengers
    252:311:void testChunks(org.bukkit.entity.Player,java.lang.String) -> testChunks
    317:333:void setBlock(org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> setBlock
    338:369:void start() -> start
    374:375:void stop() -> stop
    380:384:void sendPacket(java.lang.Object) -> sendPacket
    389:393:void sendPacket(java.lang.Object,org.bukkit.World) -> sendPacket
    398:399:void sendPacket(java.lang.Object,org.bukkit.entity.Player) -> sendPacket
    404:411:void sendPacket(java.lang.Object,org.bukkit.Location) -> sendPacket
    416:423:void sendPacket(java.lang.Object,org.bukkit.Chunk) -> sendPacket
    428:433:int getViewDistance(org.bukkit.entity.Player) -> getViewDistance
    439:439:boolean canSee(org.bukkit.entity.Player,org.bukkit.Location) -> canSee
    445:445:boolean canSee(org.bukkit.entity.Player,org.bukkit.Chunk) -> canSee
    451:452:void addPacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> addPacketHandler
    457:458:void removePacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> removePacketHandler
    463:464:void sendPickup(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> sendPickup
    469:529:void pathFind(org.bukkit.entity.LivingEntity,org.bukkit.Location,boolean,double) -> pathFind
    534:535:void sendChunkUnload(int,int,org.bukkit.entity.Player) -> sendChunkUnload
    540:541:void sendChunkUnload(int,int,org.bukkit.Chunk) -> sendChunkUnload
    548:579:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.entity.Player) -> sendChunkMap
    584:591:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.Chunk) -> sendChunkMap
    596:597:void generateChunk(org.bukkit.World,int,int) -> generateChunk
    602:603:void queueChunkUpdate(org.bukkit.Chunk) -> queueChunkUpdate
    608:609:void relight(org.bukkit.Chunk) -> relight
    613:623:int getBitMask(boolean[]) -> getBitMask
    628:635:boolean[] getBitMask(int[]) -> getBitMask
    640:647:boolean[] getBitMaskFT(int,int) -> getBitMaskFT
    653:654:void updateSection(org.bukkit.Chunk,int) -> updateSection
    659:660:void updateSections(org.bukkit.Chunk,int,int) -> updateSections
    665:666:void updateSections(org.bukkit.Chunk,com.volmit.gloss.volume.lang.collections.GSet) -> updateSections
    670:677:boolean[] getBitMask(com.volmit.gloss.volume.lang.collections.GSet) -> getBitMask
    683:684:void queueSection(org.bukkit.Chunk,int) -> queueSection
    689:690:void queueSection(org.bukkit.Location) -> queueSection
    696:696:void injectBlockInstance(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,java.lang.Object) -> injectBlockInstance
    701:702:void scroll(org.bukkit.entity.Player,int) -> scroll
    707:707:int getAction(java.lang.Object) -> getAction
    713:738:org.bukkit.util.Vector getDirection(java.lang.Object) -> getDirection
    744:758:void spawnArmorStand(int,java.util.UUID,org.bukkit.Location,int,org.bukkit.entity.Player) -> spawnArmorStand
    763:765:void removeEntity(int,org.bukkit.entity.Player) -> removeEntity
    772:819:void moveEntityRelative(int,org.bukkit.entity.Player,double,double,double,boolean) -> moveEntityRelative
    824:833:void teleportEntity(int,org.bukkit.entity.Player,org.bukkit.Location,boolean) -> teleportEntity
    838:846:void sendRemoveGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID) -> sendRemoveGlowingColorMetaEntity
    851:859:void sendRemoveGlowingColorMetaPlayer(org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> sendRemoveGlowingColorMetaPlayer
    864:873:void sendGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMeta
    878:879:void sendGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaEntity
    884:902:void sendGlowingColorMetaName(org.bukkit.entity.Player,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaName
    907:915:void sendRemoveGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sendRemoveGlowingColorMeta
    921:940:void sendEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> sendEffect
    945:946:void removeEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType) -> removeEffect
    78:78:com.volmit.gloss.volume.lang.collections.GList access$0(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12) -> access$0
    77:77:com.volmit.gloss.volume.lang.collections.GMap access$1(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12) -> access$1
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12 this$0 -> this$0
    1:338:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12,org.bukkit.plugin.Plugin) -> <init>
    343:348:java.lang.Object onPacketOutAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketOutAsync
    354:366:java.lang.Object onPacketInAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketInAsync
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12$2 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12$2:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12 this$0 -> this$0
    com.volmit.gloss.volume.lang.collections.FinalInteger val$fe -> val$fe
    net.minecraft.server.v1_12_R1.EntityInsentient val$le -> val$le
    org.bukkit.entity.LivingEntity val$e -> val$e
    net.minecraft.server.v1_12_R1.PathEntity val$pe -> val$pe
    boolean val$sprint -> val$sprint
    1:489:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA12,com.volmit.gloss.volume.lang.collections.FinalInteger,net.minecraft.server.v1_12_R1.EntityInsentient,org.bukkit.entity.LivingEntity,net.minecraft.server.v1_12_R1.PathEntity,boolean) -> <init>
    496:527:void run() -> run
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8:
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol p -> p
    com.volmit.gloss.volume.lang.collections.GMap viewDistance -> viewDistance
    com.volmit.gloss.volume.lang.collections.GList packetHandlers -> packetHandlers
    75:78:void <init>() -> <init>
    83:85:void sendBrand(org.bukkit.entity.Player,java.lang.String) -> sendBrand
    90:91:void displayScoreboard(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> displayScoreboard
    97:112:void spawnFallingBlock(int,java.util.UUID,org.bukkit.Location,org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> spawnFallingBlock
    117:121:void displayScoreboard(org.bukkit.entity.Player,int,java.lang.String) -> displayScoreboard
    126:137:void sendTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C,int) -> sendTeam
    142:148:void sendNewObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendNewObjective
    153:159:void sendDeleteObjective(org.bukkit.entity.Player,java.lang.String) -> sendDeleteObjective
    164:170:void sendEditObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendEditObjective
    175:181:void sendScoreUpdate(org.bukkit.entity.Player,java.lang.String,java.lang.String,int) -> sendScoreUpdate
    186:192:void sendScoreRemove(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendScoreRemove
    197:198:void addTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> addTeam
    203:204:void updateTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> updateTeam
    209:210:void removeTeam(org.bukkit.entity.Player,java.lang.String) -> removeTeam
    215:221:void addToTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> addToTeam
    226:232:void removeFromTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> removeFromTeam
    238:238:void updatePassengers(org.bukkit.entity.Player,int,int[]) -> updatePassengers
    243:274:void start() -> start
    279:280:void stop() -> stop
    285:289:void sendPacket(java.lang.Object) -> sendPacket
    294:298:void sendPacket(java.lang.Object,org.bukkit.World) -> sendPacket
    303:304:void sendPacket(java.lang.Object,org.bukkit.entity.Player) -> sendPacket
    309:316:void sendPacket(java.lang.Object,org.bukkit.Location) -> sendPacket
    321:328:void sendPacket(java.lang.Object,org.bukkit.Chunk) -> sendPacket
    333:338:int getViewDistance(org.bukkit.entity.Player) -> getViewDistance
    344:344:boolean canSee(org.bukkit.entity.Player,org.bukkit.Location) -> canSee
    350:350:boolean canSee(org.bukkit.entity.Player,org.bukkit.Chunk) -> canSee
    356:357:void addPacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> addPacketHandler
    362:363:void removePacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> removePacketHandler
    368:369:void sendPickup(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> sendPickup
    374:433:void pathFind(org.bukkit.entity.LivingEntity,org.bukkit.Location,boolean,double) -> pathFind
    440:471:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.entity.Player) -> sendChunkMap
    476:483:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.Chunk) -> sendChunkMap
    489:489:void sendChunkUnload(int,int,org.bukkit.entity.Player) -> sendChunkUnload
    495:495:void sendChunkUnload(int,int,org.bukkit.Chunk) -> sendChunkUnload
    500:501:void generateChunk(org.bukkit.World,int,int) -> generateChunk
    507:509:void setBlock(org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> setBlock
    514:515:void queueChunkUpdate(org.bukkit.Chunk) -> queueChunkUpdate
    520:521:void relight(org.bukkit.Chunk) -> relight
    525:535:int getBitMask(boolean[]) -> getBitMask
    540:547:boolean[] getBitMask(int[]) -> getBitMask
    552:559:boolean[] getBitMaskFT(int,int) -> getBitMaskFT
    566:567:void updateSection(org.bukkit.Chunk,int) -> updateSection
    573:574:void updateSections(org.bukkit.Chunk,int,int) -> updateSections
    579:580:void queueSection(org.bukkit.Chunk,int) -> queueSection
    585:586:void queueSection(org.bukkit.Location) -> queueSection
    592:593:void updateSections(org.bukkit.Chunk,com.volmit.gloss.volume.lang.collections.GSet) -> updateSections
    597:604:boolean[] getBitMask(com.volmit.gloss.volume.lang.collections.GSet) -> getBitMask
    612:612:void injectBlockInstance(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,java.lang.Object) -> injectBlockInstance
    617:618:void scroll(org.bukkit.entity.Player,int) -> scroll
    623:623:int getAction(java.lang.Object) -> getAction
    629:631:org.bukkit.util.Vector getDirection(java.lang.Object) -> getDirection
    637:651:void spawnArmorStand(int,java.util.UUID,org.bukkit.Location,int,org.bukkit.entity.Player) -> spawnArmorStand
    656:658:void removeEntity(int,org.bukkit.entity.Player) -> removeEntity
    663:670:void moveEntityRelative(int,org.bukkit.entity.Player,double,double,double,boolean) -> moveEntityRelative
    675:684:void teleportEntity(int,org.bukkit.entity.Player,org.bukkit.Location,boolean) -> teleportEntity
    690:690:void sendGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMeta
    696:696:void sendRemoveGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sendRemoveGlowingColorMeta
    702:721:void sendEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> sendEffect
    726:727:void removeEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType) -> removeEffect
    733:733:void sendGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaEntity
    739:739:void sendGlowingColorMetaName(org.bukkit.entity.Player,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaName
    746:746:void sendRemoveGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID) -> sendRemoveGlowingColorMetaEntity
    753:753:void sendRemoveGlowingColorMetaPlayer(org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> sendRemoveGlowingColorMetaPlayer
    71:71:com.volmit.gloss.volume.lang.collections.GList access$0(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8) -> access$0
    70:70:com.volmit.gloss.volume.lang.collections.GMap access$1(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8) -> access$1
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8 this$0 -> this$0
    1:243:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8,org.bukkit.plugin.Plugin) -> <init>
    248:253:java.lang.Object onPacketOutAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketOutAsync
    259:271:java.lang.Object onPacketInAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketInAsync
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8$2 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8$2:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8 this$0 -> this$0
    com.volmit.gloss.volume.lang.collections.FinalInteger val$fe -> val$fe
    net.minecraft.server.v1_8_R3.EntityInsentient val$le -> val$le
    org.bukkit.entity.LivingEntity val$e -> val$e
    net.minecraft.server.v1_8_R3.PathEntity val$pe -> val$pe
    boolean val$sprint -> val$sprint
    1:393:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA8,com.volmit.gloss.volume.lang.collections.FinalInteger,net.minecraft.server.v1_8_R3.EntityInsentient,org.bukkit.entity.LivingEntity,net.minecraft.server.v1_8_R3.PathEntity,boolean) -> <init>
    400:431:void run() -> run
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92:
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol p -> p
    com.volmit.gloss.volume.lang.collections.GMap viewDistance -> viewDistance
    com.volmit.gloss.volume.lang.collections.GList packetHandlers -> packetHandlers
    79:82:void <init>() -> <init>
    88:103:void spawnFallingBlock(int,java.util.UUID,org.bukkit.Location,org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> spawnFallingBlock
    108:110:void sendBrand(org.bukkit.entity.Player,java.lang.String) -> sendBrand
    115:116:void addTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> addTeam
    121:122:void updateTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> updateTeam
    127:128:void removeTeam(org.bukkit.entity.Player,java.lang.String) -> removeTeam
    133:139:void addToTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> addToTeam
    144:150:void removeFromTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> removeFromTeam
    155:156:void displayScoreboard(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> displayScoreboard
    161:165:void displayScoreboard(org.bukkit.entity.Player,int,java.lang.String) -> displayScoreboard
    170:181:void sendTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C,int) -> sendTeam
    186:192:void sendNewObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendNewObjective
    197:203:void sendDeleteObjective(org.bukkit.entity.Player,java.lang.String) -> sendDeleteObjective
    208:214:void sendEditObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendEditObjective
    219:225:void sendScoreUpdate(org.bukkit.entity.Player,java.lang.String,java.lang.String,int) -> sendScoreUpdate
    230:236:void sendScoreRemove(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendScoreRemove
    241:245:void updatePassengers(org.bukkit.entity.Player,int,int[]) -> updatePassengers
    251:260:void setBlock(org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> setBlock
    265:296:void start() -> start
    301:302:void stop() -> stop
    307:311:void sendPacket(java.lang.Object) -> sendPacket
    316:320:void sendPacket(java.lang.Object,org.bukkit.World) -> sendPacket
    325:326:void sendPacket(java.lang.Object,org.bukkit.entity.Player) -> sendPacket
    331:338:void sendPacket(java.lang.Object,org.bukkit.Location) -> sendPacket
    343:350:void sendPacket(java.lang.Object,org.bukkit.Chunk) -> sendPacket
    355:360:int getViewDistance(org.bukkit.entity.Player) -> getViewDistance
    366:366:boolean canSee(org.bukkit.entity.Player,org.bukkit.Location) -> canSee
    372:372:boolean canSee(org.bukkit.entity.Player,org.bukkit.Chunk) -> canSee
    378:379:void addPacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> addPacketHandler
    384:385:void removePacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> removePacketHandler
    390:391:void sendPickup(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> sendPickup
    396:455:void pathFind(org.bukkit.entity.LivingEntity,org.bukkit.Location,boolean,double) -> pathFind
    462:493:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.entity.Player) -> sendChunkMap
    498:505:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.Chunk) -> sendChunkMap
    510:511:void sendChunkUnload(int,int,org.bukkit.entity.Player) -> sendChunkUnload
    516:517:void sendChunkUnload(int,int,org.bukkit.Chunk) -> sendChunkUnload
    522:523:void generateChunk(org.bukkit.World,int,int) -> generateChunk
    528:529:void queueChunkUpdate(org.bukkit.Chunk) -> queueChunkUpdate
    534:535:void relight(org.bukkit.Chunk) -> relight
    539:549:int getBitMask(boolean[]) -> getBitMask
    554:561:boolean[] getBitMask(int[]) -> getBitMask
    566:573:boolean[] getBitMaskFT(int,int) -> getBitMaskFT
    580:581:void updateSection(org.bukkit.Chunk,int) -> updateSection
    587:588:void updateSections(org.bukkit.Chunk,int,int) -> updateSections
    593:594:void queueSection(org.bukkit.Chunk,int) -> queueSection
    599:600:void queueSection(org.bukkit.Location) -> queueSection
    606:607:void updateSections(org.bukkit.Chunk,com.volmit.gloss.volume.lang.collections.GSet) -> updateSections
    611:618:boolean[] getBitMask(com.volmit.gloss.volume.lang.collections.GSet) -> getBitMask
    626:626:void injectBlockInstance(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,java.lang.Object) -> injectBlockInstance
    631:632:void scroll(org.bukkit.entity.Player,int) -> scroll
    637:637:int getAction(java.lang.Object) -> getAction
    643:645:org.bukkit.util.Vector getDirection(java.lang.Object) -> getDirection
    651:665:void spawnArmorStand(int,java.util.UUID,org.bukkit.Location,int,org.bukkit.entity.Player) -> spawnArmorStand
    670:672:void removeEntity(int,org.bukkit.entity.Player) -> removeEntity
    677:684:void moveEntityRelative(int,org.bukkit.entity.Player,double,double,double,boolean) -> moveEntityRelative
    689:698:void teleportEntity(int,org.bukkit.entity.Player,org.bukkit.Location,boolean) -> teleportEntity
    703:712:void sendGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMeta
    717:718:void sendGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaEntity
    723:731:void sendRemoveGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID) -> sendRemoveGlowingColorMetaEntity
    736:744:void sendRemoveGlowingColorMetaPlayer(org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> sendRemoveGlowingColorMetaPlayer
    748:766:void sendGlowingColorMetaName(org.bukkit.entity.Player,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaName
    771:779:void sendRemoveGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sendRemoveGlowingColorMeta
    785:804:void sendEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> sendEffect
    809:810:void removeEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType) -> removeEffect
    75:75:com.volmit.gloss.volume.lang.collections.GList access$0(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92) -> access$0
    74:74:com.volmit.gloss.volume.lang.collections.GMap access$1(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92) -> access$1
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92 this$0 -> this$0
    1:265:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92,org.bukkit.plugin.Plugin) -> <init>
    270:275:java.lang.Object onPacketOutAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketOutAsync
    281:293:java.lang.Object onPacketInAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketInAsync
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92$2 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92$2:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92 this$0 -> this$0
    com.volmit.gloss.volume.lang.collections.FinalInteger val$fe -> val$fe
    net.minecraft.server.v1_9_R1.EntityInsentient val$le -> val$le
    org.bukkit.entity.LivingEntity val$e -> val$e
    net.minecraft.server.v1_9_R1.PathEntity val$pe -> val$pe
    boolean val$sprint -> val$sprint
    1:415:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA92,com.volmit.gloss.volume.lang.collections.FinalInteger,net.minecraft.server.v1_9_R1.EntityInsentient,org.bukkit.entity.LivingEntity,net.minecraft.server.v1_9_R1.PathEntity,boolean) -> <init>
    422:453:void run() -> run
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94:
    com.volmit.gloss.volume.bukkit.nms.TinyProtocol p -> p
    com.volmit.gloss.volume.lang.collections.GMap viewDistance -> viewDistance
    com.volmit.gloss.volume.lang.collections.GList packetHandlers -> packetHandlers
    79:82:void <init>() -> <init>
    88:103:void spawnFallingBlock(int,java.util.UUID,org.bukkit.Location,org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> spawnFallingBlock
    108:110:void sendBrand(org.bukkit.entity.Player,java.lang.String) -> sendBrand
    115:116:void displayScoreboard(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> displayScoreboard
    121:125:void displayScoreboard(org.bukkit.entity.Player,int,java.lang.String) -> displayScoreboard
    130:141:void sendTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C,int) -> sendTeam
    146:152:void sendNewObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendNewObjective
    157:163:void sendDeleteObjective(org.bukkit.entity.Player,java.lang.String) -> sendDeleteObjective
    168:174:void sendEditObjective(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendEditObjective
    179:185:void sendScoreUpdate(org.bukkit.entity.Player,java.lang.String,java.lang.String,int) -> sendScoreUpdate
    190:191:void addTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> addTeam
    196:197:void updateTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> updateTeam
    202:203:void removeTeam(org.bukkit.entity.Player,java.lang.String) -> removeTeam
    208:214:void addToTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> addToTeam
    219:225:void removeFromTeam(org.bukkit.entity.Player,java.lang.String,java.lang.String[]) -> removeFromTeam
    230:236:void sendScoreRemove(org.bukkit.entity.Player,java.lang.String,java.lang.String) -> sendScoreRemove
    241:245:void updatePassengers(org.bukkit.entity.Player,int,int[]) -> updatePassengers
    250:260:void setBlock(org.bukkit.Location,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> setBlock
    265:296:void start() -> start
    301:302:void stop() -> stop
    307:311:void sendPacket(java.lang.Object) -> sendPacket
    316:320:void sendPacket(java.lang.Object,org.bukkit.World) -> sendPacket
    325:326:void sendPacket(java.lang.Object,org.bukkit.entity.Player) -> sendPacket
    331:338:void sendPacket(java.lang.Object,org.bukkit.Location) -> sendPacket
    343:350:void sendPacket(java.lang.Object,org.bukkit.Chunk) -> sendPacket
    355:360:int getViewDistance(org.bukkit.entity.Player) -> getViewDistance
    366:366:boolean canSee(org.bukkit.entity.Player,org.bukkit.Location) -> canSee
    372:372:boolean canSee(org.bukkit.entity.Player,org.bukkit.Chunk) -> canSee
    378:379:void addPacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> addPacketHandler
    384:385:void removePacketHandler(com.volmit.gloss.volume.bukkit.nms.IPacketHandler) -> removePacketHandler
    390:391:void sendPickup(org.bukkit.entity.Entity,org.bukkit.entity.Entity) -> sendPickup
    396:455:void pathFind(org.bukkit.entity.LivingEntity,org.bukkit.Location,boolean,double) -> pathFind
    462:493:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.entity.Player) -> sendChunkMap
    498:505:void sendChunkMap(com.volmit.gloss.volume.bukkit.nms.adapter.AbstractChunk,org.bukkit.Chunk) -> sendChunkMap
    510:511:void sendChunkUnload(int,int,org.bukkit.entity.Player) -> sendChunkUnload
    516:517:void sendChunkUnload(int,int,org.bukkit.Chunk) -> sendChunkUnload
    522:523:void generateChunk(org.bukkit.World,int,int) -> generateChunk
    528:529:void queueChunkUpdate(org.bukkit.Chunk) -> queueChunkUpdate
    534:535:void relight(org.bukkit.Chunk) -> relight
    539:549:int getBitMask(boolean[]) -> getBitMask
    554:561:boolean[] getBitMask(int[]) -> getBitMask
    566:573:boolean[] getBitMaskFT(int,int) -> getBitMaskFT
    579:580:void updateSection(org.bukkit.Chunk,int) -> updateSection
    585:586:void updateSections(org.bukkit.Chunk,int,int) -> updateSections
    591:592:void queueSection(org.bukkit.Chunk,int) -> queueSection
    597:598:void queueSection(org.bukkit.Location) -> queueSection
    603:604:void updateSections(org.bukkit.Chunk,com.volmit.gloss.volume.lang.collections.GSet) -> updateSections
    608:615:boolean[] getBitMask(com.volmit.gloss.volume.lang.collections.GSet) -> getBitMask
    623:623:void injectBlockInstance(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,java.lang.Object) -> injectBlockInstance
    628:629:void scroll(org.bukkit.entity.Player,int) -> scroll
    634:634:int getAction(java.lang.Object) -> getAction
    640:642:org.bukkit.util.Vector getDirection(java.lang.Object) -> getDirection
    648:662:void spawnArmorStand(int,java.util.UUID,org.bukkit.Location,int,org.bukkit.entity.Player) -> spawnArmorStand
    667:669:void removeEntity(int,org.bukkit.entity.Player) -> removeEntity
    674:681:void moveEntityRelative(int,org.bukkit.entity.Player,double,double,double,boolean) -> moveEntityRelative
    686:695:void teleportEntity(int,org.bukkit.entity.Player,org.bukkit.Location,boolean) -> teleportEntity
    700:709:void sendGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMeta
    714:715:void sendGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaEntity
    720:738:void sendGlowingColorMetaName(org.bukkit.entity.Player,java.lang.String,com.volmit.gloss.volume.bukkit.util.text.C) -> sendGlowingColorMetaName
    743:751:void sendRemoveGlowingColorMeta(org.bukkit.entity.Player,org.bukkit.entity.Entity) -> sendRemoveGlowingColorMeta
    756:764:void sendRemoveGlowingColorMetaEntity(org.bukkit.entity.Player,java.util.UUID) -> sendRemoveGlowingColorMetaEntity
    769:777:void sendRemoveGlowingColorMetaPlayer(org.bukkit.entity.Player,java.util.UUID,java.lang.String) -> sendRemoveGlowingColorMetaPlayer
    783:802:void sendEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> sendEffect
    807:808:void removeEffect(org.bukkit.entity.Player,org.bukkit.entity.Entity,org.bukkit.potion.PotionEffectType) -> removeEffect
    75:75:com.volmit.gloss.volume.lang.collections.GList access$0(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94) -> access$0
    74:74:com.volmit.gloss.volume.lang.collections.GMap access$1(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94) -> access$1
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94$1 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94$1:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94 this$0 -> this$0
    1:265:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94,org.bukkit.plugin.Plugin) -> <init>
    270:275:java.lang.Object onPacketOutAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketOutAsync
    281:293:java.lang.Object onPacketInAsync(org.bukkit.entity.Player,java.lang.Object) -> onPacketInAsync
com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94$2 -> com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94$2:
    com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94 this$0 -> this$0
    com.volmit.gloss.volume.lang.collections.FinalInteger val$fe -> val$fe
    net.minecraft.server.v1_9_R2.EntityInsentient val$le -> val$le
    org.bukkit.entity.LivingEntity val$e -> val$e
    net.minecraft.server.v1_9_R2.PathEntity val$pe -> val$pe
    boolean val$sprint -> val$sprint
    1:415:void <init>(com.volmit.gloss.volume.bukkit.nms.adapter.NMSA94,com.volmit.gloss.volume.lang.collections.FinalInteger,net.minecraft.server.v1_9_R2.EntityInsentient,org.bukkit.entity.LivingEntity,net.minecraft.server.v1_9_R2.PathEntity,boolean) -> <init>
    422:453:void run() -> run
com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray -> com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray:
    byte[] rawData -> rawData
    39:40:void <init>(int) -> <init>
    53:61:void <init>(int,byte) -> <init>
    70:73:void <init>(byte[]) -> <init>
    82:82:int size() -> size
    92:92:int byteSize() -> byteSize
    104:111:byte get(int) -> get
    125:136:void set(int,byte) -> set
    146:148:void fill(byte) -> fill
    160:162:void setRawData(byte[]) -> setRawData
    171:171:com.volmit.gloss.volume.bukkit.nms.adapter.NibbleArray snapshot() -> snapshot
    26:26:byte[] getRawData() -> getRawData
com.volmit.gloss.volume.bukkit.nms.adapter.VariableValueArray -> com.volmit.gloss.volume.bukkit.nms.adapter.VariableValueArray:
    long[] backing -> backing
    int capacity -> capacity
    int bitsPerValue -> bitsPerValue
    long valueMask -> valueMask
    24:42:void <init>(int,int) -> <init>
    53:60:int calculateNeededBits(int) -> calculateNeededBits
    65:65:long getLargestPossibleValue() -> getLargestPossibleValue
    79:93:int get(int) -> get
    110:133:void set(int,int) -> set
    137:145:void checkIndex(int) -> checkIndex
    162:176:com.volmit.gloss.volume.bukkit.nms.adapter.VariableValueArray increaseBitsPerValueTo(int) -> increaseBitsPerValueTo
    182:184:com.volmit.gloss.volume.bukkit.nms.adapter.VariableValueArray clone() -> clone
    8:8:long[] getBacking() -> getBacking
    10:10:int getCapacity() -> getCapacity
    12:12:int getBitsPerValue() -> getBitsPerValue
    1:1:java.lang.Object clone() -> clone
com.volmit.gloss.volume.bukkit.pawn.Async -> com.volmit.gloss.volume.bukkit.pawn.Async:
com.volmit.gloss.volume.bukkit.pawn.BindConfig -> com.volmit.gloss.volume.bukkit.pawn.BindConfig:
    java.lang.String[] value() -> value
com.volmit.gloss.volume.bukkit.pawn.Comment -> com.volmit.gloss.volume.bukkit.pawn.Comment:
    java.lang.String value() -> value
com.volmit.gloss.volume.bukkit.pawn.ConfigIdentity -> com.volmit.gloss.volume.bukkit.pawn.ConfigIdentity:
com.volmit.gloss.volume.bukkit.pawn.Control -> com.volmit.gloss.volume.bukkit.pawn.Control:
com.volmit.gloss.volume.bukkit.pawn.Documented -> com.volmit.gloss.volume.bukkit.pawn.Documented:
com.volmit.gloss.volume.bukkit.pawn.Exampawn -> com.volmit.gloss.volume.bukkit.pawn.Exampawn:
    int f -> f
    3:6:void <init>() -> <init>
    12:12:void onbegin() -> onbegin
    18:18:void onEnd() -> onEnd
    24:24:void onTick() -> onTick
com.volmit.gloss.volume.bukkit.pawn.IPawn -> com.volmit.gloss.volume.bukkit.pawn.IPawn:
com.volmit.gloss.volume.bukkit.pawn.Instance -> com.volmit.gloss.volume.bukkit.pawn.Instance:
com.volmit.gloss.volume.bukkit.pawn.Node -> com.volmit.gloss.volume.bukkit.pawn.Node:
    java.lang.String value() -> value
com.volmit.gloss.volume.bukkit.pawn.Parent -> com.volmit.gloss.volume.bukkit.pawn.Parent:
com.volmit.gloss.volume.bukkit.pawn.PawnManager -> com.volmit.gloss.volume.bukkit.pawn.PawnManager:
    com.volmit.gloss.volume.bukkit.pawn.PawnObject base -> base
    com.volmit.gloss.volume.bukkit.task.SR r -> r
    13:16:void <init>(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> <init>
    20:38:void start() -> start
    42:46:void stop() -> stop
    50:51:void tick() -> tick
    55:55:com.volmit.gloss.volume.bukkit.pawn.PawnObject getBase() -> getBase
com.volmit.gloss.volume.bukkit.pawn.PawnManager$1 -> com.volmit.gloss.volume.bukkit.pawn.PawnManager$1:
    com.volmit.gloss.volume.bukkit.pawn.PawnManager this$0 -> this$0
    1:21:void <init>(com.volmit.gloss.volume.bukkit.pawn.PawnManager) -> <init>
    28:36:void run() -> run
com.volmit.gloss.volume.bukkit.pawn.PawnObject -> com.volmit.gloss.volume.bukkit.pawn.PawnObject:
    com.volmit.gloss.volume.lang.collections.GMap pawns -> pawns
    com.volmit.gloss.volume.lang.collections.GList attachedPawns -> attachedPawns
    com.volmit.gloss.volume.lang.collections.GList starts -> starts
    com.volmit.gloss.volume.lang.collections.GList stops -> stops
    com.volmit.gloss.volume.lang.collections.GMap ticks -> ticks
    com.volmit.gloss.volume.lang.collections.GList astarts -> astarts
    com.volmit.gloss.volume.lang.collections.GList astops -> astops
    com.volmit.gloss.volume.lang.collections.GMap bindPawn -> bindPawn
    com.volmit.gloss.volume.lang.collections.GMap aticks -> aticks
    com.volmit.gloss.volume.bukkit.pawn.IPawn instance -> instance
    39:40:void <init>(java.lang.Class) -> <init>
    43:132:void <init>(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> <init>
    136:144:com.volmit.gloss.volume.bukkit.pawn.PawnObject getNextPawnObject(java.lang.Class) -> getNextPawnObject
    150:157:com.volmit.gloss.volume.bukkit.pawn.IPawn getNextPawn(java.lang.Class) -> getNextPawn
    162:167:com.volmit.gloss.volume.bukkit.pawn.PawnObject attach(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> attach
    172:181:void detach(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> detach
    185:228:void tick() -> tick
    232:272:void start() -> start
    276:297:void postStart() -> postStart
    301:341:void stop() -> stop
    345:345:com.volmit.gloss.volume.lang.collections.GMap getPawns() -> getPawns
    350:350:com.volmit.gloss.volume.lang.collections.GList getStarts() -> getStarts
    355:355:com.volmit.gloss.volume.lang.collections.GList getStops() -> getStops
    360:360:com.volmit.gloss.volume.lang.collections.GMap getTicks() -> getTicks
    365:365:com.volmit.gloss.volume.lang.collections.GList getAstarts() -> getAstarts
    370:370:com.volmit.gloss.volume.lang.collections.GList getAstops() -> getAstops
    375:375:com.volmit.gloss.volume.lang.collections.GMap getAticks() -> getAticks
    380:380:com.volmit.gloss.volume.bukkit.pawn.IPawn getInstance() -> getInstance
    385:385:com.volmit.gloss.volume.lang.collections.GList getAttachedPawns() -> getAttachedPawns
    34:34:com.volmit.gloss.volume.lang.collections.GMap access$0(com.volmit.gloss.volume.bukkit.pawn.PawnObject) -> access$0
    35:35:com.volmit.gloss.volume.bukkit.pawn.IPawn access$1(com.volmit.gloss.volume.bukkit.pawn.PawnObject) -> access$1
    31:31:com.volmit.gloss.volume.lang.collections.GList access$2(com.volmit.gloss.volume.bukkit.pawn.PawnObject) -> access$2
    33:33:com.volmit.gloss.volume.lang.collections.GMap access$3(com.volmit.gloss.volume.bukkit.pawn.PawnObject) -> access$3
    26:26:com.volmit.gloss.volume.lang.collections.GMap access$4(com.volmit.gloss.volume.bukkit.pawn.PawnObject) -> access$4
    32:32:com.volmit.gloss.volume.lang.collections.GList access$5(com.volmit.gloss.volume.bukkit.pawn.PawnObject) -> access$5
com.volmit.gloss.volume.bukkit.pawn.PawnObject$1 -> com.volmit.gloss.volume.bukkit.pawn.PawnObject$1:
    com.volmit.gloss.volume.bukkit.pawn.PawnObject this$0 -> this$0
    1:200:void <init>(com.volmit.gloss.volume.bukkit.pawn.PawnObject) -> <init>
    205:220:void run() -> run
com.volmit.gloss.volume.bukkit.pawn.PawnObject$2 -> com.volmit.gloss.volume.bukkit.pawn.PawnObject$2:
    com.volmit.gloss.volume.bukkit.pawn.PawnObject this$0 -> this$0
    1:252:void <init>(com.volmit.gloss.volume.bukkit.pawn.PawnObject) -> <init>
    257:269:void run() -> run
com.volmit.gloss.volume.bukkit.pawn.PawnObject$3 -> com.volmit.gloss.volume.bukkit.pawn.PawnObject$3:
    com.volmit.gloss.volume.bukkit.pawn.PawnObject this$0 -> this$0
    1:279:void <init>(com.volmit.gloss.volume.bukkit.pawn.PawnObject,long) -> <init>
    284:295:void run() -> run
com.volmit.gloss.volume.bukkit.pawn.PawnObject$4 -> com.volmit.gloss.volume.bukkit.pawn.PawnObject$4:
    com.volmit.gloss.volume.bukkit.pawn.PawnObject this$0 -> this$0
    1:321:void <init>(com.volmit.gloss.volume.bukkit.pawn.PawnObject) -> <init>
    326:338:void run() -> run
com.volmit.gloss.volume.bukkit.pawn.Start -> com.volmit.gloss.volume.bukkit.pawn.Start:
com.volmit.gloss.volume.bukkit.pawn.Stop -> com.volmit.gloss.volume.bukkit.pawn.Stop:
com.volmit.gloss.volume.bukkit.pawn.Tick -> com.volmit.gloss.volume.bukkit.pawn.Tick:
    int value() -> value
com.volmit.gloss.volume.bukkit.service.IService -> com.volmit.gloss.volume.bukkit.service.IService:
com.volmit.gloss.volume.bukkit.service.ServiceManager -> com.volmit.gloss.volume.bukkit.service.ServiceManager:
    com.volmit.gloss.volume.lang.collections.GMap running -> running
    com.volmit.gloss.volume.bukkit.VolumePlugin vp -> vp
    12:16:void <init>(com.volmit.gloss.volume.bukkit.VolumePlugin) -> <init>
    21:36:com.volmit.gloss.volume.bukkit.service.IService getService(java.lang.Class) -> getService
    41:41:boolean isRunning(java.lang.Class) -> isRunning
com.volmit.gloss.volume.bukkit.service.ServiceState -> com.volmit.gloss.volume.bukkit.service.ServiceState:
    com.volmit.gloss.volume.bukkit.service.ServiceState NOT_RUNNING -> NOT_RUNNING
    com.volmit.gloss.volume.bukkit.service.ServiceState RUNNING -> RUNNING
    com.volmit.gloss.volume.bukkit.service.ServiceState FAILING -> FAILING
    com.volmit.gloss.volume.bukkit.service.ServiceState[] ENUM$VALUES -> ENUM$VALUES
    3:7:void <clinit>() -> <clinit>
    3:3:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.gloss.volume.bukkit.service.ServiceState[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.service.ServiceState valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.services.ClusterSVC -> com.volmit.gloss.volume.bukkit.services.ClusterSVC:
    com.volmit.gloss.volume.lang.collections.GMap pawns -> pawns
    com.volmit.gloss.volume.lang.collections.GMap rrs -> rrs
    com.volmit.gloss.volume.lang.collections.GMap vals -> vals
    16:16:void <init>() -> <init>
    25:28:void onStart() -> onStart
    34:34:void onStop() -> onStop
    40:80:void onTick() -> onTick
    84:87:void unbind(java.io.File) -> unbind
    91:99:java.io.File getFile(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> getFile
    104:107:void unbind(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> unbind
    111:114:void bind(java.io.File,com.volmit.gloss.volume.bukkit.pawn.IPawn) -> bind
    118:122:void bind(java.io.File,java.util.function.Function) -> bind
    127:131:int hashCode() -> hashCode
    137:172:boolean equals(java.lang.Object) -> equals
com.volmit.gloss.volume.bukkit.services.CommandSVC -> com.volmit.gloss.volume.bukkit.services.CommandSVC:
    com.volmit.gloss.volume.lang.collections.GMap commands -> commands
    26:26:void <init>() -> <init>
    33:34:void onStart() -> onStart
    38:88:void register(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> register
    93:111:boolean onCommand(org.bukkit.command.CommandSender,org.bukkit.command.Command,java.lang.String,java.lang.String[]) -> onCommand
    117:120:int hashCode() -> hashCode
    126:150:boolean equals(java.lang.Object) -> equals
com.volmit.gloss.volume.bukkit.task.A -> com.volmit.gloss.volume.bukkit.task.A:
    com.volmit.gloss.volume.bukkit.task.TaskManager m -> m
    7:10:void <init>() -> <init>
    12:15:void <init>(long) -> <init>
com.volmit.gloss.volume.bukkit.task.AR -> com.volmit.gloss.volume.bukkit.task.AR:
    com.volmit.gloss.volume.bukkit.task.TaskManager m -> m
    int id -> id
    10:11:void <init>() -> <init>
    15:16:void <init>(int) -> <init>
    6:21:void <init>(int,int) -> <init>
    25:26:void cancel() -> cancel
    30:30:int getId() -> getId
com.volmit.gloss.volume.bukkit.task.S -> com.volmit.gloss.volume.bukkit.task.S:
    com.volmit.gloss.volume.bukkit.task.TaskManager m -> m
    7:10:void <init>() -> <init>
    12:15:void <init>(long) -> <init>
com.volmit.gloss.volume.bukkit.task.SR -> com.volmit.gloss.volume.bukkit.task.SR:
    com.volmit.gloss.volume.bukkit.task.TaskManager m -> m
    int id -> id
    10:11:void <init>() -> <init>
    15:16:void <init>(int) -> <init>
    6:21:void <init>(int,int) -> <init>
    25:26:void cancel() -> cancel
    30:30:int getId() -> getId
com.volmit.gloss.volume.bukkit.task.TICK -> com.volmit.gloss.volume.bukkit.task.TICK:
    long tick -> tick
    5:5:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
com.volmit.gloss.volume.bukkit.task.TaskManager -> com.volmit.gloss.volume.bukkit.task.TaskManager:
    com.volmit.gloss.volume.bukkit.VolumePlugin p -> p
    11:18:void <init>(com.volmit.gloss.volume.bukkit.VolumePlugin) -> <init>
    22:23:void cancel(int) -> cancel
    27:27:int sync(long,java.lang.Runnable) -> sync
    32:32:int sync(java.lang.Runnable) -> sync
    37:37:int syncRepeating(long,java.lang.Runnable) -> syncRepeating
    42:42:int syncRepeating(long,long,java.lang.Runnable) -> syncRepeating
    48:48:int async(long,java.lang.Runnable) -> async
    53:53:int async(java.lang.Runnable) -> async
    58:58:int asyncRepeating(long,java.lang.Runnable) -> asyncRepeating
    64:64:int asyncRepeating(long,long,java.lang.Runnable) -> asyncRepeating
com.volmit.gloss.volume.bukkit.util.data.Alphabet -> com.volmit.gloss.volume.bukkit.util.data.Alphabet:
    com.volmit.gloss.volume.bukkit.util.data.Alphabet ALPHA -> ALPHA
    com.volmit.gloss.volume.bukkit.util.data.Alphabet BRAVO -> BRAVO
    com.volmit.gloss.volume.bukkit.util.data.Alphabet CHARLIE -> CHARLIE
    com.volmit.gloss.volume.bukkit.util.data.Alphabet DELTA -> DELTA
    com.volmit.gloss.volume.bukkit.util.data.Alphabet ECHO -> ECHO
    com.volmit.gloss.volume.bukkit.util.data.Alphabet FOXTROT -> FOXTROT
    com.volmit.gloss.volume.bukkit.util.data.Alphabet GOLF -> GOLF
    com.volmit.gloss.volume.bukkit.util.data.Alphabet HOTEL -> HOTEL
    com.volmit.gloss.volume.bukkit.util.data.Alphabet INDIA -> INDIA
    com.volmit.gloss.volume.bukkit.util.data.Alphabet JULIET -> JULIET
    com.volmit.gloss.volume.bukkit.util.data.Alphabet KILO -> KILO
    com.volmit.gloss.volume.bukkit.util.data.Alphabet LIMA -> LIMA
    com.volmit.gloss.volume.bukkit.util.data.Alphabet MIKE -> MIKE
    com.volmit.gloss.volume.bukkit.util.data.Alphabet NOVEMBER -> NOVEMBER
    com.volmit.gloss.volume.bukkit.util.data.Alphabet OSCAR -> OSCAR
    com.volmit.gloss.volume.bukkit.util.data.Alphabet PAPA -> PAPA
    com.volmit.gloss.volume.bukkit.util.data.Alphabet QUEBEC -> QUEBEC
    com.volmit.gloss.volume.bukkit.util.data.Alphabet ROMEO -> ROMEO
    com.volmit.gloss.volume.bukkit.util.data.Alphabet SIERRA -> SIERRA
    com.volmit.gloss.volume.bukkit.util.data.Alphabet TANGO -> TANGO
    com.volmit.gloss.volume.bukkit.util.data.Alphabet UNIFORM -> UNIFORM
    com.volmit.gloss.volume.bukkit.util.data.Alphabet VICTOR -> VICTOR
    com.volmit.gloss.volume.bukkit.util.data.Alphabet WISKEY -> WISKEY
    com.volmit.gloss.volume.bukkit.util.data.Alphabet XRAY -> XRAY
    com.volmit.gloss.volume.bukkit.util.data.Alphabet YANKEE -> YANKEE
    com.volmit.gloss.volume.bukkit.util.data.Alphabet ZULU -> ZULU
    com.volmit.gloss.volume.bukkit.util.data.Alphabet[] ENUM$VALUES -> ENUM$VALUES
    10:140:void <clinit>() -> <clinit>
    10:10:void <init>(java.lang.String,int) -> <init>
    149:149:char getChar() -> getChar
    160:167:java.lang.String radioTalk(java.lang.String) -> radioTalk
    179:187:com.volmit.gloss.volume.bukkit.util.data.Alphabet fromChar(char) -> fromChar
    197:204:com.volmit.gloss.volume.lang.collections.GList getAlphabet() -> getAlphabet
    1:1:com.volmit.gloss.volume.bukkit.util.data.Alphabet[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.data.Alphabet valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.data.Dangerous -> com.volmit.gloss.volume.bukkit.util.data.Dangerous:
    java.lang.String value() -> value
com.volmit.gloss.volume.bukkit.util.data.Edgy -> com.volmit.gloss.volume.bukkit.util.data.Edgy:
    java.lang.String value() -> value
com.volmit.gloss.volume.bukkit.util.data.Expensive -> com.volmit.gloss.volume.bukkit.util.data.Expensive:
    java.lang.String value() -> value
com.volmit.gloss.volume.bukkit.util.data.PawnClusterPort -> com.volmit.gloss.volume.bukkit.util.data.PawnClusterPort:
    com.volmit.gloss.volume.bukkit.pawn.IPawn pawn -> pawn
    17:20:void <init>(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> <init>
    24:24:com.volmit.gloss.volume.cluster.DataCluster toCluster() -> toCluster
    30:54:com.volmit.gloss.volume.cluster.DataCluster toCluster(com.volmit.gloss.volume.bukkit.pawn.IPawn) -> toCluster
    60:77:com.volmit.gloss.volume.bukkit.pawn.IPawn fromCluster(com.volmit.gloss.volume.cluster.DataCluster) -> fromCluster
    1:1:com.volmit.gloss.volume.cluster.DataCluster toCluster(java.lang.Object) -> toCluster
    1:1:java.lang.Object fromCluster(com.volmit.gloss.volume.cluster.DataCluster) -> fromCluster
com.volmit.gloss.volume.bukkit.util.data.Risky -> com.volmit.gloss.volume.bukkit.util.data.Risky:
    java.lang.String value() -> value
com.volmit.gloss.volume.bukkit.util.data.StringUtil -> com.volmit.gloss.volume.bukkit.util.data.StringUtil:
    14:14:void <init>() -> <init>
    18:23:byte[] utfToBytes(java.lang.String) -> utfToBytes
    28:29:java.lang.String bytesToUTF(byte[]) -> bytesToUTF
    34:34:java.lang.String worldToString(org.bukkit.World) -> worldToString
    39:39:org.bukkit.World worldFromString(java.lang.String) -> worldFromString
    44:44:java.lang.String vectorToString(org.bukkit.util.Vector) -> vectorToString
    49:49:java.lang.String vectorToString(org.bukkit.util.Vector,boolean) -> vectorToString
    54:61:org.bukkit.util.Vector vectorFromString(java.lang.String) -> vectorFromString
    66:66:java.lang.String locationToString(org.bukkit.Location) -> locationToString
    71:71:java.lang.String locationToString(org.bukkit.Location,boolean,boolean) -> locationToString
    76:103:org.bukkit.Location locationFromString(java.lang.String) -> locationFromString
com.volmit.gloss.volume.bukkit.util.data.YAMLClusterPort -> com.volmit.gloss.volume.bukkit.util.data.YAMLClusterPort:
    10:10:void <init>() -> <init>
    14:51:java.lang.String applyComments(com.volmit.gloss.volume.cluster.DataCluster,java.lang.String) -> applyComments
    57:69:com.volmit.gloss.volume.cluster.DataCluster toCluster(org.bukkit.configuration.file.FileConfiguration) -> toCluster
    75:82:org.bukkit.configuration.file.FileConfiguration fromCluster(com.volmit.gloss.volume.cluster.DataCluster) -> fromCluster
    1:1:com.volmit.gloss.volume.cluster.DataCluster toCluster(java.lang.Object) -> toCluster
    1:1:java.lang.Object fromCluster(com.volmit.gloss.volume.cluster.DataCluster) -> fromCluster
com.volmit.gloss.volume.bukkit.util.event.EventBuffer -> com.volmit.gloss.volume.bukkit.util.event.EventBuffer:
    com.volmit.gloss.volume.lang.collections.GList buffer -> buffer
    java.lang.Class eventClass -> eventClass
    com.volmit.gloss.volume.lang.collections.GList consumers -> consumers
    java.util.function.Function sorter -> sorter
    org.bukkit.event.EventPriority priority -> priority
    boolean ignoreCancelled -> ignoreCancelled
    36:44:void <init>(java.lang.Class) -> <init>
    48:49:com.volmit.gloss.volume.bukkit.util.event.EventBuffer acceptCancelled() -> acceptCancelled
    54:55:com.volmit.gloss.volume.bukkit.util.event.EventBuffer priority(org.bukkit.event.EventPriority) -> priority
    60:76:com.volmit.gloss.volume.bukkit.util.event.EventBuffer engage() -> engage
    81:83:void disengage() -> disengage
    87:89:void <init>(java.lang.Class,java.util.function.Consumer) -> <init>
    93:94:void offer(org.bukkit.event.Event) -> offer
    98:110:void consume(org.bukkit.event.Event) -> consume
    114:136:void consumeTop() -> consumeTop
    140:144:void consumeAll() -> consumeAll
    148:149:void consumeNext() -> consumeNext
    153:153:boolean hasNext() -> hasNext
    158:158:int getSize() -> getSize
    163:164:com.volmit.gloss.volume.bukkit.util.event.EventBuffer addConsumer(java.util.function.Consumer) -> addConsumer
    169:170:com.volmit.gloss.volume.bukkit.util.event.EventBuffer setSorter(java.util.function.Function) -> setSorter
    34:34:boolean access$0(com.volmit.gloss.volume.bukkit.util.event.EventBuffer) -> access$0
    41:41:java.lang.String lambda$0(org.bukkit.event.Event) -> lambda$0
com.volmit.gloss.volume.bukkit.util.event.EventBuffer$1 -> com.volmit.gloss.volume.bukkit.util.event.EventBuffer$1:
    com.volmit.gloss.volume.bukkit.util.event.EventBuffer this$0 -> this$0
    1:61:void <init>(com.volmit.gloss.volume.bukkit.util.event.EventBuffer) -> <init>
    67:73:void execute(org.bukkit.event.Listener,org.bukkit.event.Event) -> execute
com.volmit.gloss.volume.bukkit.util.net.Protocol -> com.volmit.gloss.volume.bukkit.util.net.Protocol:
    com.volmit.gloss.volume.bukkit.util.net.Protocol LATEST -> LATEST
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_12_2 -> R1_12_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_12_2_PRE -> R1_12_2_PRE
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_12_1 -> R1_12_1
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_12 -> R1_12
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_11_2 -> R1_11_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_11_1 -> R1_11_1
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_11 -> R1_11
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_10_2 -> R1_10_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_10_1 -> R1_10_1
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_10 -> R1_10
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_9_4 -> R1_9_4
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_9_3 -> R1_9_3
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_9_2 -> R1_9_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_9_1 -> R1_9_1
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_9 -> R1_9
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8_9 -> R1_8_9
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8_8 -> R1_8_8
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8_7 -> R1_8_7
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8_6 -> R1_8_6
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8_5 -> R1_8_5
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8_4 -> R1_8_4
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8_3 -> R1_8_3
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8_2 -> R1_8_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8_1 -> R1_8_1
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_8 -> R1_8
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_10 -> R1_7_10
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_9 -> R1_7_9
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_8 -> R1_7_8
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_7 -> R1_7_7
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_6 -> R1_7_6
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_5 -> R1_7_5
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_4 -> R1_7_4
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_3 -> R1_7_3
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_2 -> R1_7_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol R1_7_1 -> R1_7_1
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_6_4 -> B1_6_4
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_6_3 -> B1_6_3
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_6_2 -> B1_6_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_6_1 -> B1_6_1
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_5_2 -> B1_5_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_5_1 -> B1_5_1
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_5 -> B1_5
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_4_7 -> B1_4_7
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_4_6 -> B1_4_6
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_4_5 -> B1_4_5
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_4_4 -> B1_4_4
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_4_2 -> B1_4_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_3_2 -> B1_3_2
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_3_1 -> B1_3_1
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_2_5 -> B1_2_5
    com.volmit.gloss.volume.bukkit.util.net.Protocol B1_2_4 -> B1_2_4
    com.volmit.gloss.volume.bukkit.util.net.Protocol EARLIEST -> EARLIEST
    com.volmit.gloss.volume.bukkit.util.net.Protocol UNKNOWN -> UNKNOWN
    int version -> version
    java.lang.String packageVersion -> packageVersion
    java.lang.String versionName -> versionName
    boolean netty -> netty
    com.volmit.gloss.volume.bukkit.util.net.Protocol[] ENUM$VALUES -> ENUM$VALUES
    10:434:void <clinit>() -> <clinit>
    443:444:void <init>(java.lang.String,int,int,java.lang.String,boolean) -> <init>
    448:449:void <init>(java.lang.String,int,int) -> <init>
    453:454:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    458:459:void <init>(java.lang.String,int,int,java.lang.String,java.lang.String) -> <init>
    461:472:void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,boolean) -> <init>
    486:495:boolean hasPackageSupport() -> hasPackageSupport
    505:505:java.lang.String getPackageVersion() -> getPackageVersion
    511:511:java.lang.String toString() -> toString
    521:529:com.volmit.gloss.volume.bukkit.util.net.Protocol getSupportedNMSVersion() -> getSupportedNMSVersion
    539:547:com.volmit.gloss.volume.bukkit.util.net.Protocol getProtocolVersion() -> getProtocolVersion
    560:560:com.volmit.gloss.volume.bukkit.util.net.ProtocolRange to(com.volmit.gloss.volume.bukkit.util.net.Protocol) -> to
    570:570:boolean isServerVersion() -> isServerVersion
    580:580:java.lang.String getVersionString() -> getVersionString
    590:590:boolean isNettySupported() -> isNettySupported
    601:601:boolean isActualVersion() -> isActualVersion
    611:616:int getVersion() -> getVersion
    626:631:int getCVersion() -> getCVersion
    641:641:int getMetaVersion() -> getMetaVersion
    1:1:com.volmit.gloss.volume.bukkit.util.net.Protocol[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.net.Protocol valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.net.ProtocolRange -> com.volmit.gloss.volume.bukkit.util.net.ProtocolRange:
    com.volmit.gloss.volume.bukkit.util.net.Protocol from -> from
    com.volmit.gloss.volume.bukkit.util.net.Protocol to -> to
    24:28:void <init>(com.volmit.gloss.volume.bukkit.util.net.Protocol,com.volmit.gloss.volume.bukkit.util.net.Protocol) -> <init>
    37:37:com.volmit.gloss.volume.bukkit.util.net.Protocol getFrom() -> getFrom
    47:47:com.volmit.gloss.volume.bukkit.util.net.Protocol getTo() -> getTo
    59:59:boolean contains(com.volmit.gloss.volume.bukkit.util.net.Protocol) -> contains
    65:65:java.lang.String toString() -> toString
com.volmit.gloss.volume.bukkit.util.net.QueueProgress -> com.volmit.gloss.volume.bukkit.util.net.QueueProgress:
    3:3:void <init>() -> <init>
com.volmit.gloss.volume.bukkit.util.net.URLUtils -> com.volmit.gloss.volume.bukkit.util.net.URLUtils:
    8:8:void <init>() -> <init>
    12:38:int getFileSize(java.net.URL) -> getFileSize
com.volmit.gloss.volume.bukkit.util.particle.ColoredParticleEffect -> com.volmit.gloss.volume.bukkit.util.particle.ColoredParticleEffect:
    org.bukkit.Color color -> color
    boolean alpha -> alpha
    12:16:void <init>(org.bukkit.Color) -> <init>
    21:21:com.volmit.gloss.volume.lang.collections.GList getEffects() -> getEffects
    27:38:void play(org.bukkit.Location) -> play
    44:44:void addEffect(com.volmit.gloss.volume.bukkit.util.particle.VisualEffect) -> addEffect
    48:48:org.bukkit.Color getColor() -> getColor
    53:54:void setColor(org.bukkit.Color) -> setColor
    58:58:boolean isAlpha() -> isAlpha
    63:64:void setAlpha(boolean) -> setAlpha
com.volmit.gloss.volume.bukkit.util.particle.LineParticleManipulator -> com.volmit.gloss.volume.bukkit.util.particle.LineParticleManipulator:
    14:14:void <init>() -> <init>
    31:42:void play(org.bukkit.Location,org.bukkit.Location,java.lang.Double) -> play
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect:
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect EXPLOSION_NORMAL -> EXPLOSION_NORMAL
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect EXPLOSION_LARGE -> EXPLOSION_LARGE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect EXPLOSION_HUGE -> EXPLOSION_HUGE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect FIREWORKS_SPARK -> FIREWORKS_SPARK
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect WATER_BUBBLE -> WATER_BUBBLE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect WATER_SPLASH -> WATER_SPLASH
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect WATER_WAKE -> WATER_WAKE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SUSPENDED -> SUSPENDED
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SUSPENDED_DEPTH -> SUSPENDED_DEPTH
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect CRIT -> CRIT
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect CRIT_MAGIC -> CRIT_MAGIC
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SMOKE_NORMAL -> SMOKE_NORMAL
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SMOKE_LARGE -> SMOKE_LARGE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SPELL -> SPELL
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SPELL_INSTANT -> SPELL_INSTANT
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SPELL_MOB -> SPELL_MOB
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SPELL_MOB_AMBIENT -> SPELL_MOB_AMBIENT
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SPELL_WITCH -> SPELL_WITCH
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect DRIP_WATER -> DRIP_WATER
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect DRIP_LAVA -> DRIP_LAVA
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect VILLAGER_ANGRY -> VILLAGER_ANGRY
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect VILLAGER_HAPPY -> VILLAGER_HAPPY
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect TOWN_AURA -> TOWN_AURA
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect NOTE -> NOTE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect PORTAL -> PORTAL
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect ENCHANTMENT_TABLE -> ENCHANTMENT_TABLE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect FLAME -> FLAME
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect LAVA -> LAVA
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect FOOTSTEP -> FOOTSTEP
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect CLOUD -> CLOUD
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect REDSTONE -> REDSTONE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SNOWBALL -> SNOWBALL
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SNOW_SHOVEL -> SNOW_SHOVEL
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SLIME -> SLIME
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect HEART -> HEART
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect BARRIER -> BARRIER
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect ITEM_CRACK -> ITEM_CRACK
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect BLOCK_CRACK -> BLOCK_CRACK
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect BLOCK_DUST -> BLOCK_DUST
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect WATER_DROP -> WATER_DROP
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect ITEM_TAKE -> ITEM_TAKE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect MOB_APPEARANCE -> MOB_APPEARANCE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect DRAGON_BREATH -> DRAGON_BREATH
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect END_ROD -> END_ROD
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect DAMAGE_INDICATOR -> DAMAGE_INDICATOR
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect SWEEP_ATTACK -> SWEEP_ATTACK
    java.util.Map NAME_MAP -> NAME_MAP
    java.util.Map ID_MAP -> ID_MAP
    java.lang.String name -> name
    int id -> id
    int requiredVersion -> requiredVersion
    java.util.List properties -> properties
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect[] ENUM$VALUES -> ENUM$VALUES
    53:468:void <clinit>() -> <clinit>
    482:488:void <init>(java.lang.String,int,java.lang.String,int,int,com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty[]) -> <init>
    497:497:java.lang.String getName() -> getName
    507:507:int getId() -> getId
    517:517:int getRequiredVersion() -> getRequiredVersion
    527:527:boolean hasProperty(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty) -> hasProperty
    538:542:boolean isSupported() -> isSupported
    554:562:com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect fromName(java.lang.String) -> fromName
    574:582:com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect fromId(int) -> fromId
    594:595:boolean isWater(org.bukkit.Location) -> isWater
    608:618:boolean isLongDistance(org.bukkit.Location,java.util.List) -> isLongDistance
    632:632:boolean isDataCorrect(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect,com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData) -> isDataCorrect
    646:646:boolean isColorCorrect(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect,com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleColor) -> isColorCorrect
    682:698:void display(float,int,org.bukkit.Location,double) -> display
    733:746:void display(float,int,org.bukkit.Location,java.util.List) -> display
    780:781:void display(float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> display
    809:826:void display(org.bukkit.util.Vector,float,org.bukkit.Location,double) -> display
    853:870:void display(org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> display
    895:896:void display(org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> display
    919:932:void display(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleColor,org.bukkit.Location,double) -> display
    955:968:void display(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleColor,org.bukkit.Location,java.util.List) -> display
    989:990:void display(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleColor,org.bukkit.Location,org.bukkit.entity.Player[]) -> display
    1026:1042:void display(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData,float,int,org.bukkit.Location,double) -> display
    1077:1090:void display(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData,float,int,org.bukkit.Location,java.util.List) -> display
    1125:1126:void display(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData,float,int,org.bukkit.Location,org.bukkit.entity.Player[]) -> display
    1153:1166:void display(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,double) -> display
    1192:1205:void display(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,java.util.List) -> display
    1230:1231:void display(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData,org.bukkit.util.Vector,float,org.bukkit.Location,org.bukkit.entity.Player[]) -> display
    1:1:com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$BlockData -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$BlockData:
    1387:1392:void <init>(org.bukkit.Material,byte) -> <init>
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ItemData -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ItemData:
    1358:1359:void <init>(org.bukkit.Material,byte) -> <init>
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$NoteColor -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$NoteColor:
    int note -> note
    1585:1596:void <init>(int) -> <init>
    1606:1606:float getValueX() -> getValueX
    1617:1617:float getValueY() -> getValueY
    1628:1628:float getValueZ() -> getValueZ
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$OrdinaryColor -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$OrdinaryColor:
    int red -> red
    int green -> green
    int blue -> blue
    1458:1487:void <init>(int,int,int) -> <init>
    1497:1498:void <init>(org.bukkit.Color) -> <init>
    1507:1507:int getRed() -> getRed
    1517:1517:int getGreen() -> getGreen
    1527:1527:int getBlue() -> getBlue
    1538:1538:float getValueX() -> getValueX
    1549:1549:float getValueY() -> getValueY
    1560:1560:float getValueZ() -> getValueZ
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleColor -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleColor:
    1406:1406:void <init>() -> <init>
    float getValueX() -> getValueX
    float getValueY() -> getValueY
    float getValueZ() -> getValueZ
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleColorException -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleColorException:
    long serialVersionUID -> serialVersionUID
    1683:1684:void <init>(java.lang.String) -> <init>
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData:
    org.bukkit.Material material -> material
    byte data -> data
    int[] packetData -> packetData
    1288:1293:void <init>(org.bukkit.Material,byte) -> <init>
    1302:1302:org.bukkit.Material getMaterial() -> getMaterial
    1312:1312:byte getData() -> getData
    1322:1322:int[] getPacketData() -> getPacketData
    1332:1332:java.lang.String getPacketDataString() -> getPacketDataString
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleDataException -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleDataException:
    long serialVersionUID -> serialVersionUID
    1656:1657:void <init>(java.lang.String) -> <init>
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticlePacket -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticlePacket:
    int version -> version
    java.lang.Class enumParticle -> enumParticle
    java.lang.reflect.Constructor packetConstructor -> packetConstructor
    java.lang.reflect.Method getHandle -> getHandle
    java.lang.reflect.Field playerConnection -> playerConnection
    java.lang.reflect.Method sendPacket -> sendPacket
    boolean initialized -> initialized
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect effect -> effect
    float offsetX -> offsetX
    float offsetY -> offsetY
    float offsetZ -> offsetZ
    float speed -> speed
    int amount -> amount
    boolean longDistance -> longDistance
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData data -> data
    java.lang.Object packet -> packet
    1769:1788:void <init>(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect,float,float,float,float,int,boolean,com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData) -> <init>
    1812:1813:void <init>(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect,org.bukkit.util.Vector,float,boolean,com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleData) -> <init>
    1830:1835:void <init>(com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect,com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleColor,boolean) -> <init>
    1851:1887:void initialize() -> initialize
    1896:1900:int getVersion() -> getVersion
    1912:1912:boolean isInitialized() -> isInitialized
    1925:1964:void initializePacket(org.bukkit.Location) -> initializePacket
    1981:1990:void sendTo(org.bukkit.Location,org.bukkit.entity.Player) -> sendTo
    2005:2013:void sendTo(org.bukkit.Location,java.util.List) -> sendTo
    2030:2044:void sendTo(org.bukkit.Location,double) -> sendTo
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticlePacket$PacketInstantiationException -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticlePacket$PacketInstantiationException:
    long serialVersionUID -> serialVersionUID
    2098:2099:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticlePacket$PacketSendingException -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticlePacket$PacketSendingException:
    long serialVersionUID -> serialVersionUID
    2125:2126:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticlePacket$VersionIncompatibleException -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticlePacket$VersionIncompatibleException:
    long serialVersionUID -> serialVersionUID
    2070:2071:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty:
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty REQUIRES_WATER -> REQUIRES_WATER
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty REQUIRES_DATA -> REQUIRES_DATA
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty DIRECTIONAL -> DIRECTIONAL
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty COLORABLE -> COLORABLE
    com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty[] ENUM$VALUES -> ENUM$VALUES
    1242:1259:void <clinit>() -> <clinit>
    1242:1242:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleProperty valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleVersionException -> com.volmit.gloss.volume.bukkit.util.particle.ParticleEffect$ParticleVersionException:
    long serialVersionUID -> serialVersionUID
    1709:1710:void <init>(java.lang.String) -> <init>
com.volmit.gloss.volume.bukkit.util.particle.ParticleManipulator -> com.volmit.gloss.volume.bukkit.util.particle.ParticleManipulator:
    8:8:void <init>() -> <init>
com.volmit.gloss.volume.bukkit.util.particle.PhantomEffect -> com.volmit.gloss.volume.bukkit.util.particle.PhantomEffect:
    11:11:void <init>() -> <init>
    16:16:com.volmit.gloss.volume.lang.collections.GList getEffects() -> getEffects
    void play(org.bukkit.Location) -> play
    26:26:void addEffect(com.volmit.gloss.volume.bukkit.util.particle.VisualEffect) -> addEffect
com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils -> com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils:
    33:36:void <init>() -> <init>
    56:65:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    89:89:java.lang.reflect.Constructor getConstructor(java.lang.String,com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType,java.lang.Class[]) -> getConstructor
    119:119:java.lang.Object instantiateObject(java.lang.Class,java.lang.Object[]) -> instantiateObject
    156:156:java.lang.Object instantiateObject(java.lang.String,com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType,java.lang.Object[]) -> instantiateObject
    178:187:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    213:213:java.lang.reflect.Method getMethod(java.lang.String,com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType,java.lang.String,java.lang.Class[]) -> getMethod
    243:243:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[]) -> invokeMethod
    276:276:java.lang.Object invokeMethod(java.lang.Object,java.lang.Class,java.lang.String,java.lang.Object[]) -> invokeMethod
    312:312:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType,java.lang.String,java.lang.Object[]) -> invokeMethod
    332:334:java.lang.reflect.Field getField(java.lang.Class,boolean,java.lang.String) -> getField
    360:360:java.lang.reflect.Field getField(java.lang.String,com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType,boolean,java.lang.String) -> getField
    387:387:java.lang.Object getValue(java.lang.Object,java.lang.Class,boolean,java.lang.String) -> getValue
    419:419:java.lang.Object getValue(java.lang.Object,java.lang.String,com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType,boolean,java.lang.String) -> getValue
    446:446:java.lang.Object getValue(java.lang.Object,boolean,java.lang.String) -> getValue
    475:476:void setValue(java.lang.Object,java.lang.Class,boolean,java.lang.String,java.lang.Object) -> setValue
    509:510:void setValue(java.lang.Object,java.lang.String,com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType,boolean,java.lang.String,java.lang.Object) -> setValue
    536:537:void setValue(java.lang.Object,boolean,java.lang.String,java.lang.Object) -> setValue
com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType -> com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType:
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType BYTE -> BYTE
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType SHORT -> SHORT
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType INTEGER -> INTEGER
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType LONG -> LONG
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType CHARACTER -> CHARACTER
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType FLOAT -> FLOAT
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType DOUBLE -> DOUBLE
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType BOOLEAN -> BOOLEAN
    java.util.Map CLASS_MAP -> CLASS_MAP
    java.lang.Class primitive -> primitive
    java.lang.Class reference -> reference
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType[] ENUM$VALUES -> ENUM$VALUES
    632:646:void <clinit>() -> <clinit>
    656:660:void <init>(java.lang.String,int,java.lang.Class,java.lang.Class) -> <init>
    669:669:java.lang.Class getPrimitive() -> getPrimitive
    679:679:java.lang.Class getReference() -> getReference
    691:691:com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType fromClass(java.lang.Class) -> fromClass
    704:705:java.lang.Class getPrimitive(java.lang.Class) -> getPrimitive
    718:719:java.lang.Class getReference(java.lang.Class) -> getReference
    731:737:java.lang.Class[] getPrimitive(java.lang.Class[]) -> getPrimitive
    749:755:java.lang.Class[] getReference(java.lang.Class[]) -> getReference
    767:773:java.lang.Class[] getPrimitive(java.lang.Object[]) -> getPrimitive
    785:791:java.lang.Class[] getReference(java.lang.Object[]) -> getReference
    805:819:boolean compare(java.lang.Class[],java.lang.Class[]) -> compare
    1:1:com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$DataType valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType -> com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType:
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType MINECRAFT_SERVER -> MINECRAFT_SERVER
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT -> CRAFTBUKKIT
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_BLOCK -> CRAFTBUKKIT_BLOCK
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_CHUNKIO -> CRAFTBUKKIT_CHUNKIO
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_COMMAND -> CRAFTBUKKIT_COMMAND
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_CONVERSATIONS -> CRAFTBUKKIT_CONVERSATIONS
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_ENCHANTMENS -> CRAFTBUKKIT_ENCHANTMENS
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_ENTITY -> CRAFTBUKKIT_ENTITY
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_EVENT -> CRAFTBUKKIT_EVENT
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_GENERATOR -> CRAFTBUKKIT_GENERATOR
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_HELP -> CRAFTBUKKIT_HELP
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_INVENTORY -> CRAFTBUKKIT_INVENTORY
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_MAP -> CRAFTBUKKIT_MAP
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_METADATA -> CRAFTBUKKIT_METADATA
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_POTION -> CRAFTBUKKIT_POTION
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_PROJECTILES -> CRAFTBUKKIT_PROJECTILES
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_SCHEDULER -> CRAFTBUKKIT_SCHEDULER
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_SCOREBOARD -> CRAFTBUKKIT_SCOREBOARD
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_UPDATER -> CRAFTBUKKIT_UPDATER
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType CRAFTBUKKIT_UTIL -> CRAFTBUKKIT_UTIL
    java.lang.String path -> path
    com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType[] ENUM$VALUES -> ENUM$VALUES
    548:550:void <clinit>() -> <clinit>
    560:563:void <init>(java.lang.String,int,java.lang.String) -> <init>
    575:576:void <init>(java.lang.String,int,com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType,java.lang.String) -> <init>
    585:585:java.lang.String getPath() -> getPath
    600:600:java.lang.Class getClass(java.lang.String) -> getClass
    607:607:java.lang.String toString() -> toString
    617:617:java.lang.String getServerVersion() -> getServerVersion
    1:1:com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.particle.ReflectionUtils$PackageType valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.particle.SphereParticleManipulator -> com.volmit.gloss.volume.bukkit.util.particle.SphereParticleManipulator:
    10:10:void <init>() -> <init>
    28:51:void play(org.bukkit.Location,java.lang.Double,java.lang.Double) -> play
com.volmit.gloss.volume.bukkit.util.particle.SystemEffect -> com.volmit.gloss.volume.bukkit.util.particle.SystemEffect:
    com.volmit.gloss.volume.lang.collections.GList effects -> effects
    20:23:void <init>() -> <init>
    28:28:com.volmit.gloss.volume.lang.collections.GList getEffects() -> getEffects
    34:38:void play(org.bukkit.Location) -> play
    43:44:void addEffect(com.volmit.gloss.volume.bukkit.util.particle.VisualEffect) -> addEffect
com.volmit.gloss.volume.bukkit.util.particle.VisualEffect -> com.volmit.gloss.volume.bukkit.util.particle.VisualEffect:
    com.volmit.gloss.volume.lang.collections.GList getEffects() -> getEffects
    void play(org.bukkit.Location) -> play
    void addEffect(com.volmit.gloss.volume.bukkit.util.particle.VisualEffect) -> addEffect
com.volmit.gloss.volume.bukkit.util.physics.VectorMath -> com.volmit.gloss.volume.bukkit.util.physics.VectorMath:
    int[] $SWITCH_TABLE$org$bukkit$block$BlockFace -> $SWITCH_TABLE$org$bukkit$block$BlockFace
    16:16:void <init>() -> <init>
    28:113:com.volmit.gloss.volume.lang.collections.GList split(org.bukkit.block.BlockFace) -> split
    127:127:org.bukkit.util.Vector direction(org.bukkit.Location,org.bukkit.Location) -> direction
    141:141:org.bukkit.util.Vector toVector(float,float) -> toVector
    153:156:org.bukkit.util.Vector reverse(org.bukkit.util.Vector) -> reverse
    168:171:double getSpeed(org.bukkit.util.Vector) -> getSpeed
    185:192:com.volmit.gloss.volume.lang.collections.GList shift(org.bukkit.util.Vector,com.volmit.gloss.volume.lang.collections.GList) -> shift
    204:246:org.bukkit.block.BlockFace getBlockFace(org.bukkit.util.Vector) -> getBlockFace
    260:272:org.bukkit.util.Vector angleLeft(org.bukkit.util.Vector,float) -> angleLeft
    286:298:org.bukkit.util.Vector angleRight(org.bukkit.util.Vector,float) -> angleRight
    312:321:org.bukkit.util.Vector angleUp(org.bukkit.util.Vector,float) -> angleUp
    335:344:org.bukkit.util.Vector angleDown(org.bukkit.util.Vector,float) -> angleDown
    358:406:org.bukkit.util.Vector triNormalize(org.bukkit.util.Vector) -> triNormalize
    16:16:int[] $SWITCH_TABLE$org$bukkit$block$BlockFace() -> $SWITCH_TABLE$org$bukkit$block$BlockFace
com.volmit.gloss.volume.bukkit.util.physics.VectorMath$1 -> com.volmit.gloss.volume.bukkit.util.physics.VectorMath$1:
    org.bukkit.util.Vector val$vector -> val$vector
    1:185:void <init>(org.bukkit.util.Vector) -> <init>
    190:190:org.bukkit.util.Vector onAdapt(org.bukkit.util.Vector) -> onAdapt
    1:1:java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.volume.bukkit.util.plugin.JarScanner -> com.volmit.gloss.volume.bukkit.util.plugin.JarScanner:
    com.volmit.gloss.volume.lang.collections.GSet classes -> classes
    java.io.File jar -> jar
    29:33:void <init>(java.io.File) -> <init>
    43:72:void scan() -> scan
    81:81:com.volmit.gloss.volume.lang.collections.GSet getClasses() -> getClasses
    91:91:java.io.File getJar() -> getJar
com.volmit.gloss.volume.bukkit.util.plugin.Platform -> com.volmit.gloss.volume.bukkit.util.plugin.Platform:
    13:13:void <init>() -> <init>
    23:23:long getStartupTime() -> getStartupTime
    33:33:long getUpTime() -> getUpTime
com.volmit.gloss.volume.bukkit.util.plugin.PluginDeleter -> com.volmit.gloss.volume.bukkit.util.plugin.PluginDeleter:
    org.bukkit.plugin.Plugin plugin -> plugin
    java.io.File f -> f
    java.lang.Runnable r -> r
    27:32:void <init>(org.bukkit.plugin.Plugin,java.io.File,java.lang.Runnable) -> <init>
    38:156:void run() -> run
com.volmit.gloss.volume.bukkit.util.plugin.PluginUtil -> com.volmit.gloss.volume.bukkit.util.plugin.PluginUtil:
    65:65:void <init>() -> <init>
    76:78:void enable(org.bukkit.plugin.Plugin) -> enable
    85:89:void enableAll() -> enableAll
    99:103:void disable(org.bukkit.plugin.Plugin) -> disable
    110:114:void disableAll() -> disableAll
    125:125:java.lang.String getFormattedName(org.bukkit.plugin.Plugin) -> getFormattedName
    139:146:java.lang.String getFormattedName(org.bukkit.plugin.Plugin,boolean) -> getFormattedName
    158:163:org.bukkit.plugin.Plugin getPluginByName(java.lang.String) -> getPluginByName
    173:176:java.util.List getPluginNames(boolean) -> getPluginNames
    188:191:java.lang.String getPluginVersion(java.lang.String) -> getPluginVersion
    204:226:java.lang.String getUsages(org.bukkit.plugin.Plugin) -> getUsages
    241:320:java.util.List findByCommand(java.lang.String) -> findByCommand
    341:342:void load(org.bukkit.plugin.Plugin) -> load
    346:368:java.lang.String getPluginFileName(java.lang.String) -> getPluginFileName
    373:395:java.lang.String getPluginFileNameUnsafe(java.lang.String,org.bukkit.plugin.Plugin) -> getPluginFileNameUnsafe
    407:407:java.io.File getPluginFile(org.bukkit.plugin.Plugin) -> getPluginFile
    426:427:void delete(org.bukkit.plugin.Plugin,java.io.File,java.lang.Runnable) -> delete
    439:491:void load(java.lang.String) -> load
    503:508:void reload(org.bukkit.plugin.Plugin) -> reload
    515:519:void reloadAll() -> reloadAll
    531:657:void unload(org.bukkit.plugin.Plugin) -> unload
com.volmit.gloss.volume.bukkit.util.render.Frame -> com.volmit.gloss.volume.bukkit.util.render.Frame:
    int width -> width
    int height -> height
    java.awt.image.BufferedImage image -> image
    java.awt.Graphics2D gg -> gg
    18:24:void <init>(int,int) -> <init>
    29:29:void drawFrame(com.volmit.gloss.volume.bukkit.util.render.Frame,int,int) -> drawFrame
    33:36:void drawPolygon(java.awt.Polygon,java.awt.Color,float) -> drawPolygon
    40:43:void drawLines(java.awt.Polygon,java.awt.Color,float) -> drawLines
    47:50:void drawFillPolygon(java.awt.Polygon,java.awt.Color) -> drawFillPolygon
    54:57:void drawElipse(int,int,int,int,java.awt.Color,float) -> drawElipse
    61:64:void drawFillElipse(int,int,int,int,java.awt.Color) -> drawFillElipse
    68:77:void translate(int,int) -> translate
    81:90:void scale(double,double) -> scale
    94:105:void rotateVector(double,double) -> rotateVector
    109:110:void rotateDegrees(double) -> rotateDegrees
    114:125:void rotateRadians(double) -> rotateRadians
    129:133:void drawArc(int,int,int,int,double,double,java.awt.Color,float) -> drawArc
    137:141:void drawFillArc(int,int,int,int,double,double,java.awt.Color) -> drawFillArc
    145:148:void drawLine(int,int,int,int,java.awt.Color,float) -> drawLine
    152:155:void drawRect(int,int,int,int,java.awt.Color,float) -> drawRect
    159:162:void drawFillRect(int,int,int,int,java.awt.Color) -> drawFillRect
    166:169:void drawRoundRect(int,int,int,int,int,int,java.awt.Color,float) -> drawRoundRect
    173:176:void drawFillRoundRect(int,int,int,int,int,int,java.awt.Color) -> drawFillRoundRect
    180:187:void clear(java.awt.Color) -> clear
    191:192:void set(int,int,java.awt.Color) -> set
    196:196:int getWidth() -> getWidth
    201:201:int getHeight() -> getHeight
com.volmit.gloss.volume.bukkit.util.render.PhantomFont -> com.volmit.gloss.volume.bukkit.util.render.PhantomFont:
    int spaceSize -> spaceSize
    java.lang.String fontChars -> fontChars
    int[][] fontData -> fontData
    com.volmit.gloss.volume.bukkit.util.render.PhantomFont Font -> Font
    17:281:void <clinit>() -> <clinit>
    288:289:void <init>() -> <init>
    291:334:void <init>(boolean) -> <init>
com.volmit.gloss.volume.bukkit.util.sound.Aud -> com.volmit.gloss.volume.bukkit.util.sound.Aud:
    com.volmit.gloss.volume.bukkit.util.sound.Aud CLICK -> CLICK
    com.volmit.gloss.volume.bukkit.util.sound.Audible aud -> aud
    com.volmit.gloss.volume.bukkit.util.sound.Aud[] ENUM$VALUES -> ENUM$VALUES
    12:14:void <clinit>() -> <clinit>
    18:21:void <init>(java.lang.String,int,com.volmit.gloss.volume.bukkit.util.sound.Audible) -> <init>
    25:25:com.volmit.gloss.volume.bukkit.util.sound.Audible get() -> get
    30:31:void play(org.bukkit.entity.Player) -> play
    35:36:void play(org.bukkit.Location) -> play
    1:1:com.volmit.gloss.volume.bukkit.util.sound.Aud[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.sound.Aud valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.sound.Audible -> com.volmit.gloss.volume.bukkit.util.sound.Audible:
    void play(org.bukkit.entity.Player,org.bukkit.Location) -> play
    void play(org.bukkit.entity.Player) -> play
    void play(org.bukkit.Location) -> play
    void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> play
    java.lang.Float getVolume() -> getVolume
    void setVolume(java.lang.Float) -> setVolume
    java.lang.Float getPitch() -> getPitch
    void setPitch(java.lang.Float) -> setPitch
    com.volmit.gloss.volume.bukkit.util.sound.Audible clone() -> clone
    1:1:java.lang.Object clone() -> clone
com.volmit.gloss.volume.bukkit.util.sound.AudibleEntity -> com.volmit.gloss.volume.bukkit.util.sound.AudibleEntity:
    org.bukkit.entity.Entity entity -> entity
    com.volmit.gloss.volume.bukkit.util.sound.Audible audible -> audible
    com.volmit.gloss.volume.bukkit.task.SR task -> task
    31:59:void <init>(org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.sound.Audible,java.lang.Integer) -> <init>
    66:70:void cancel() -> cancel
    84:85:void onPlay(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.sound.Audible,org.bukkit.entity.Entity) -> onPlay
    94:94:com.volmit.gloss.volume.bukkit.util.sound.Audible getAudible() -> getAudible
    105:106:void setAudible(com.volmit.gloss.volume.bukkit.util.sound.Audible) -> setAudible
    115:115:org.bukkit.entity.Entity getEntity() -> getEntity
com.volmit.gloss.volume.bukkit.util.sound.AudibleEntity$1 -> com.volmit.gloss.volume.bukkit.util.sound.AudibleEntity$1:
    com.volmit.gloss.volume.bukkit.util.sound.AudibleEntity this$0 -> this$0
    org.bukkit.entity.Entity val$entity -> val$entity
    com.volmit.gloss.volume.bukkit.util.sound.Audible val$audible -> val$audible
    1:39:void <init>(com.volmit.gloss.volume.bukkit.util.sound.AudibleEntity,int,org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.sound.Audible) -> <init>
    44:56:void run() -> run
com.volmit.gloss.volume.bukkit.util.sound.Audio -> com.volmit.gloss.volume.bukkit.util.sound.Audio:
    com.volmit.gloss.volume.lang.collections.GList audibles -> audibles
    24:27:void <init>() -> <init>
    35:38:void <init>(com.volmit.gloss.volume.lang.collections.GList) -> <init>
    43:43:com.volmit.gloss.volume.bukkit.util.sound.Audible clone() -> clone
    54:55:void add(com.volmit.gloss.volume.bukkit.util.sound.Audible) -> add
    59:60:com.volmit.gloss.volume.bukkit.util.sound.Audio qadd(com.volmit.gloss.volume.bukkit.util.sound.Audible) -> qadd
    66:70:void play(org.bukkit.entity.Player,org.bukkit.Location) -> play
    75:79:void play(org.bukkit.entity.Player) -> play
    84:88:void play(org.bukkit.Location) -> play
    93:97:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> play
    102:109:java.lang.Float getVolume() -> getVolume
    115:119:void setVolume(java.lang.Float) -> setVolume
    124:131:java.lang.Float getPitch() -> getPitch
    137:141:void setPitch(java.lang.Float) -> setPitch
    1:1:java.lang.Object clone() -> clone
com.volmit.gloss.volume.bukkit.util.sound.AudioDistortion -> com.volmit.gloss.volume.bukkit.util.sound.AudioDistortion:
    5:8:void <init>() -> <init>
    com.volmit.gloss.volume.bukkit.util.sound.Audible distort(com.volmit.gloss.volume.bukkit.util.sound.Audible) -> distort
com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer -> com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer:
    float volume -> volume
    float pitch -> pitch
    com.volmit.gloss.volume.lang.collections.GMap table -> table
    int playhead -> playhead
    boolean playing -> playing
    23:30:void <init>() -> <init>
    35:60:void play(org.bukkit.entity.Player,org.bukkit.Location) -> play
    65:90:void play(org.bukkit.entity.Player) -> play
    95:120:void play(org.bukkit.Location) -> play
    125:150:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> play
    155:155:java.lang.Float getVolume() -> getVolume
    161:162:void setVolume(java.lang.Float) -> setVolume
    167:167:java.lang.Float getPitch() -> getPitch
    173:174:void setPitch(java.lang.Float) -> setPitch
    179:179:com.volmit.gloss.volume.bukkit.util.sound.Audible clone() -> clone
    185:186:void add(com.volmit.gloss.volume.bukkit.util.sound.Audible,int) -> add
    191:191:boolean isPlaying() -> isPlaying
    197:198:void setPlayHead(int) -> setPlayHead
    203:213:int getLength() -> getLength
    219:219:int getPlayHead() -> getPlayHead
    1:1:java.lang.Object clone() -> clone
    20:20:int access$1(com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer) -> access$1
    21:21:void access$2(com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer,boolean) -> access$2
    21:21:boolean access$3(com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer) -> access$3
    19:19:com.volmit.gloss.volume.lang.collections.GMap access$4(com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer) -> access$4
    20:20:void access$5(com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer,int) -> access$5
com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer$1 -> com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer$1:
    com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer this$0 -> this$0
    org.bukkit.entity.Player val$p -> val$p
    org.bukkit.Location val$l -> val$l
    1:35:void <init>(com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer,int,org.bukkit.entity.Player,org.bukkit.Location) -> <init>
    40:58:void run() -> run
com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer$2 -> com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer$2:
    com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer this$0 -> this$0
    org.bukkit.entity.Player val$p -> val$p
    1:65:void <init>(com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer,int,org.bukkit.entity.Player) -> <init>
    70:88:void run() -> run
com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer$3 -> com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer$3:
    com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer this$0 -> this$0
    org.bukkit.Location val$l -> val$l
    1:95:void <init>(com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer,int,org.bukkit.Location) -> <init>
    100:118:void run() -> run
com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer$4 -> com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer$4:
    com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer this$0 -> this$0
    org.bukkit.entity.Player val$p -> val$p
    org.bukkit.util.Vector val$v -> val$v
    1:125:void <init>(com.volmit.gloss.volume.bukkit.util.sound.BasicSequencer,int,org.bukkit.entity.Player,org.bukkit.util.Vector) -> <init>
    130:148:void run() -> run
com.volmit.gloss.volume.bukkit.util.sound.DopplerAudibleEntity -> com.volmit.gloss.volume.bukkit.util.sound.DopplerAudibleEntity:
    19:20:void <init>(org.bukkit.entity.Entity,com.volmit.gloss.volume.bukkit.util.sound.Audible,java.lang.Integer) -> <init>
    25:31:void onPlay(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.sound.Audible,org.bukkit.entity.Entity) -> onPlay
com.volmit.gloss.volume.bukkit.util.sound.GSound -> com.volmit.gloss.volume.bukkit.util.sound.GSound:
    java.lang.String sound -> sound
    org.bukkit.Sound iSound -> iSound
    java.lang.Float volume -> volume
    java.lang.Float pitch -> pitch
    34:39:void <init>(java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    53:59:void <init>(org.bukkit.Sound,java.lang.String,java.lang.Float,java.lang.Float) -> <init>
    67:72:void <init>(java.lang.String) -> <init>
    81:86:void <init>(org.bukkit.Sound,java.lang.Float,java.lang.Float) -> <init>
    94:99:void <init>(org.bukkit.Sound) -> <init>
    104:104:void prePlay() -> prePlay
    117:130:void play(org.bukkit.entity.Player,org.bukkit.Location) -> play
    141:142:void play(org.bukkit.entity.Player) -> play
    150:150:com.volmit.gloss.volume.bukkit.util.sound.Audible clone() -> clone
    162:175:void play(org.bukkit.Location) -> play
    188:203:void play(org.bukkit.entity.Player,org.bukkit.util.Vector) -> play
    212:212:java.lang.String getSound() -> getSound
    223:224:void setSound(java.lang.String) -> setSound
    233:233:org.bukkit.Sound getiSound() -> getiSound
    244:245:void setiSound(org.bukkit.Sound) -> setiSound
    255:255:java.lang.Float getVolume() -> getVolume
    267:268:void setVolume(java.lang.Float) -> setVolume
    278:278:java.lang.Float getPitch() -> getPitch
    290:291:void setPitch(java.lang.Float) -> setPitch
    1:1:java.lang.Object clone() -> clone
com.volmit.gloss.volume.bukkit.util.sound.Instrument -> com.volmit.gloss.volume.bukkit.util.sound.Instrument:
    com.volmit.gloss.volume.bukkit.util.sound.Instrument CLICK -> CLICK
    com.volmit.gloss.volume.bukkit.util.sound.Instrument KINDLE_HIGH -> KINDLE_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument KINDLE_MID -> KINDLE_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument KINDLE_LOW -> KINDLE_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument KINDLE_WIDE -> KINDLE_WIDE
    com.volmit.gloss.volume.bukkit.util.sound.Instrument GRAVEL_HIGH -> GRAVEL_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument GRAVEL_MID -> GRAVEL_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument GRAVEL_LOW -> GRAVEL_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument GRAVEL_WIDE -> GRAVEL_WIDE
    com.volmit.gloss.volume.bukkit.util.sound.Instrument BWANG_HIGH -> BWANG_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument BWANG_MID -> BWANG_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument BWANG_LOW -> BWANG_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument POCKET_HIGH -> POCKET_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument POCKET_MID -> POCKET_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument POCKET_LOW -> POCKET_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument SWEEP_HIGH -> SWEEP_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument SWEEP_MID -> SWEEP_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument SWEEP_LOW -> SWEEP_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument BOB_CLOSE_HIGH -> BOB_CLOSE_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument BOB_CLOSE_MID -> BOB_CLOSE_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument BOB_CLOSE_LOW -> BOB_CLOSE_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument THICK_CLOSE_HIGH -> THICK_CLOSE_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument THICK_CLOSE_MID -> THICK_CLOSE_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument THICK_CLOSE_LOW -> THICK_CLOSE_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument BRITTLE_HIGH -> BRITTLE_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument BRITTLE_MID -> BRITTLE_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument BRITTLE_LOW -> BRITTLE_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument SHOOT_HIGH -> SHOOT_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument SHOOT_MID -> SHOOT_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument SHOOT_LOW -> SHOOT_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument TWIG_HIGH -> TWIG_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument TWIG_MID -> TWIG_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument TWIG_LOW -> TWIG_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument WOOD_CRACK_HIGH -> WOOD_CRACK_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument WOOD_CRACK_MID -> WOOD_CRACK_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument WOOD_CRACK_LOW -> WOOD_CRACK_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument CRUMBLE_HIGH -> CRUMBLE_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument CRUMBLE_MID -> CRUMBLE_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument CRUMBLE_LOW -> CRUMBLE_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument CRAWL_HIGH -> CRAWL_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument CRAWL_MID -> CRAWL_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument CRAWL_LOW -> CRAWL_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument METAL_CLINK_HIGH -> METAL_CLINK_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument METAL_CLINK_MID -> METAL_CLINK_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument METAL_CLINK_LOW -> METAL_CLINK_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_THUMP_HIGH -> DEEP_THUMP_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_THUMP_MID -> DEEP_THUMP_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_THUMP_LOW -> DEEP_THUMP_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_PUNCH_HIGH -> DEEP_PUNCH_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_PUNCH_MID -> DEEP_PUNCH_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_PUNCH_LOW -> DEEP_PUNCH_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_CLICK_HIGH -> DEEP_CLICK_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_CLICK_MID -> DEEP_CLICK_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_CLICK_LOW -> DEEP_CLICK_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument SHOVEL_HIGH -> SHOVEL_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument SHOVEL_MID -> SHOVEL_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument SHOVEL_LOW -> SHOVEL_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_BOOM_HIGH -> DEEP_BOOM_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_BOOM_MID -> DEEP_BOOM_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_BOOM_LOW -> DEEP_BOOM_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_SQUELCH_HIGH -> DEEP_SQUELCH_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_SQUELCH_MID -> DEEP_SQUELCH_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument DEEP_SQUELCH_LOW -> DEEP_SQUELCH_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument METAL_HIT_HIGH -> METAL_HIT_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument METAL_HIT_MID -> METAL_HIT_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument METAL_HIT_LOW -> METAL_HIT_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Instrument WOOD_HIT_HIGH -> WOOD_HIT_HIGH
    com.volmit.gloss.volume.bukkit.util.sound.Instrument WOOD_HIT_MID -> WOOD_HIT_MID
    com.volmit.gloss.volume.bukkit.util.sound.Instrument WOOD_HIT_LOW -> WOOD_HIT_LOW
    com.volmit.gloss.volume.bukkit.util.sound.Audible sound -> sound
    com.volmit.gloss.volume.bukkit.util.sound.Instrument[] ENUM$VALUES -> ENUM$VALUES
    7:98:void <clinit>() -> <clinit>
    102:105:void <init>(java.lang.String,int,com.volmit.gloss.volume.bukkit.util.sound.Audible) -> <init>
    109:110:void play(org.bukkit.Location) -> play
    114:115:void play(org.bukkit.entity.Player) -> play
    119:120:void play(org.bukkit.entity.Player,org.bukkit.Location) -> play
    1:1:com.volmit.gloss.volume.bukkit.util.sound.Instrument[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.sound.Instrument valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.sound.MFADistortion -> com.volmit.gloss.volume.bukkit.util.sound.MFADistortion:
    int span -> span
    float to -> to
    8:12:void <init>(int,float) -> <init>
    17:37:com.volmit.gloss.volume.bukkit.util.sound.Audible distort(com.volmit.gloss.volume.bukkit.util.sound.Audible) -> distort
com.volmit.gloss.volume.bukkit.util.sound.Sequencer -> com.volmit.gloss.volume.bukkit.util.sound.Sequencer:
    void add(com.volmit.gloss.volume.bukkit.util.sound.Audible,int) -> add
    boolean isPlaying() -> isPlaying
    void setPlayHead(int) -> setPlayHead
    int getLength() -> getLength
    int getPlayHead() -> getPlayHead
com.volmit.gloss.volume.bukkit.util.sound.package-info -> com.volmit.gloss.volume.bukkit.util.sound.package-info:
com.volmit.gloss.volume.bukkit.util.text.C -> com.volmit.gloss.volume.bukkit.util.text.C:
    com.volmit.gloss.volume.bukkit.util.text.C BLACK -> BLACK
    com.volmit.gloss.volume.bukkit.util.text.C DARK_BLUE -> DARK_BLUE
    com.volmit.gloss.volume.bukkit.util.text.C DARK_GREEN -> DARK_GREEN
    com.volmit.gloss.volume.bukkit.util.text.C DARK_AQUA -> DARK_AQUA
    com.volmit.gloss.volume.bukkit.util.text.C DARK_RED -> DARK_RED
    com.volmit.gloss.volume.bukkit.util.text.C DARK_PURPLE -> DARK_PURPLE
    com.volmit.gloss.volume.bukkit.util.text.C GOLD -> GOLD
    com.volmit.gloss.volume.bukkit.util.text.C GRAY -> GRAY
    com.volmit.gloss.volume.bukkit.util.text.C DARK_GRAY -> DARK_GRAY
    com.volmit.gloss.volume.bukkit.util.text.C BLUE -> BLUE
    com.volmit.gloss.volume.bukkit.util.text.C GREEN -> GREEN
    com.volmit.gloss.volume.bukkit.util.text.C AQUA -> AQUA
    com.volmit.gloss.volume.bukkit.util.text.C RED -> RED
    com.volmit.gloss.volume.bukkit.util.text.C LIGHT_PURPLE -> LIGHT_PURPLE
    com.volmit.gloss.volume.bukkit.util.text.C YELLOW -> YELLOW
    com.volmit.gloss.volume.bukkit.util.text.C WHITE -> WHITE
    com.volmit.gloss.volume.bukkit.util.text.C MAGIC -> MAGIC
    com.volmit.gloss.volume.bukkit.util.text.C BOLD -> BOLD
    com.volmit.gloss.volume.bukkit.util.text.C STRIKETHROUGH -> STRIKETHROUGH
    com.volmit.gloss.volume.bukkit.util.text.C UNDERLINE -> UNDERLINE
    com.volmit.gloss.volume.bukkit.util.text.C ITALIC -> ITALIC
    com.volmit.gloss.volume.bukkit.util.text.C RESET -> RESET
    char COLOR_CHAR -> COLOR_CHAR
    java.util.regex.Pattern STRIP_COLOR_PATTERN -> STRIP_COLOR_PATTERN
    com.volmit.gloss.volume.bukkit.util.text.C[] COLORCYCLE -> COLORCYCLE
    com.volmit.gloss.volume.bukkit.util.text.C[] COLORS -> COLORS
    int intCode -> intCode
    char code -> code
    boolean isFormat -> isFormat
    java.lang.String toString -> toString
    java.util.Map BY_ID -> BY_ID
    java.util.Map BY_CHAR -> BY_CHAR
    java.util.Map dyeChatMap -> dyeChatMap
    java.util.Map chatHexMap -> chatHexMap
    java.util.Map dyeHexMap -> dyeHexMap
    int[] $SWITCH_TABLE$com$volmit$volume$bukkit$util$text$C -> $SWITCH_TABLE$com$volmit$volume$bukkit$util$text$C
    com.volmit.gloss.volume.bukkit.util.text.C[] ENUM$VALUES -> ENUM$VALUES
    22:789:void <clinit>() -> <clinit>
    338:339:void <init>(java.lang.String,int,char,int) -> <init>
    341:347:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    351:351:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
    361:361:char getChar() -> getChar
    367:367:java.lang.String toString() -> toString
    377:377:org.bukkit.DyeColor dye() -> dye
    382:382:java.lang.String hex() -> hex
    392:392:boolean isFormat() -> isFormat
    402:402:boolean isColor() -> isColor
    417:422:com.volmit.gloss.volume.bukkit.util.text.C getByChar(char) -> getByChar
    438:446:com.volmit.gloss.volume.bukkit.util.text.C getByChar(java.lang.String) -> getByChar
    459:464:java.lang.String stripColor(java.lang.String) -> stripColor
    476:481:com.volmit.gloss.volume.bukkit.util.text.C dyeToChat(org.bukkit.DyeColor) -> dyeToChat
    486:494:org.bukkit.DyeColor chatToDye(org.bukkit.ChatColor) -> chatToDye
    500:505:java.lang.String chatToHex(org.bukkit.ChatColor) -> chatToHex
    510:515:java.lang.String dyeToHex(org.bukkit.DyeColor) -> dyeToHex
    520:541:org.bukkit.Color hexToColor(java.lang.String) -> hexToColor
    546:559:org.bukkit.Color rgbToColor(java.lang.String) -> rgbToColor
    564:582:java.lang.String generateColorTable() -> generateColorTable
    592:592:org.bukkit.ChatColor chatColor() -> chatColor
    609:618:java.lang.String translateAlternateColorCodes(char,java.lang.String) -> translateAlternateColorCodes
    623:631:com.volmit.gloss.volume.bukkit.util.text.C fromItemMeta(byte) -> fromItemMeta
    636:683:byte getMeta() -> getMeta
    689:736:byte getItemMeta() -> getItemMeta
    742:742:com.volmit.gloss.volume.bukkit.util.text.C randomColor() -> randomColor
    754:779:java.lang.String getLastColors(java.lang.String) -> getLastColors
    1:1:com.volmit.gloss.volume.bukkit.util.text.C[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.text.C valueOf(java.lang.String) -> valueOf
    336:336:void <init>(java.lang.String,int,char,int,com.volmit.gloss.volume.bukkit.util.text.C) -> <init>
    341:341:void <init>(java.lang.String,int,char,int,boolean,com.volmit.gloss.volume.bukkit.util.text.C) -> <init>
    20:20:int[] $SWITCH_TABLE$com$volmit$volume$bukkit$util$text$C() -> $SWITCH_TABLE$com$volmit$volume$bukkit$util$text$C
com.volmit.gloss.volume.bukkit.util.text.C$1 -> com.volmit.gloss.volume.bukkit.util.text.C$1:
    1:26:void <init>(java.lang.String,int,char,int) -> <init>
    30:30:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$10 -> com.volmit.gloss.volume.bukkit.util.text.C$10:
    1:125:void <init>(java.lang.String,int,char,int) -> <init>
    129:129:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$11 -> com.volmit.gloss.volume.bukkit.util.text.C$11:
    1:136:void <init>(java.lang.String,int,char,int) -> <init>
    140:140:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$12 -> com.volmit.gloss.volume.bukkit.util.text.C$12:
    1:147:void <init>(java.lang.String,int,char,int) -> <init>
    151:151:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$13 -> com.volmit.gloss.volume.bukkit.util.text.C$13:
    1:158:void <init>(java.lang.String,int,char,int) -> <init>
    162:162:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$14 -> com.volmit.gloss.volume.bukkit.util.text.C$14:
    1:169:void <init>(java.lang.String,int,char,int) -> <init>
    173:173:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$15 -> com.volmit.gloss.volume.bukkit.util.text.C$15:
    1:180:void <init>(java.lang.String,int,char,int) -> <init>
    184:184:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$16 -> com.volmit.gloss.volume.bukkit.util.text.C$16:
    1:191:void <init>(java.lang.String,int,char,int) -> <init>
    195:195:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$17 -> com.volmit.gloss.volume.bukkit.util.text.C$17:
    1:202:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    206:206:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$18 -> com.volmit.gloss.volume.bukkit.util.text.C$18:
    1:213:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    217:217:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$19 -> com.volmit.gloss.volume.bukkit.util.text.C$19:
    1:224:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    228:228:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$2 -> com.volmit.gloss.volume.bukkit.util.text.C$2:
    1:37:void <init>(java.lang.String,int,char,int) -> <init>
    41:41:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$20 -> com.volmit.gloss.volume.bukkit.util.text.C$20:
    1:235:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    239:239:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$21 -> com.volmit.gloss.volume.bukkit.util.text.C$21:
    1:246:void <init>(java.lang.String,int,char,int,boolean) -> <init>
    250:250:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$22 -> com.volmit.gloss.volume.bukkit.util.text.C$22:
    1:258:void <init>(java.lang.String,int,char,int) -> <init>
    262:262:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$3 -> com.volmit.gloss.volume.bukkit.util.text.C$3:
    1:48:void <init>(java.lang.String,int,char,int) -> <init>
    52:52:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$4 -> com.volmit.gloss.volume.bukkit.util.text.C$4:
    1:59:void <init>(java.lang.String,int,char,int) -> <init>
    63:63:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$5 -> com.volmit.gloss.volume.bukkit.util.text.C$5:
    1:70:void <init>(java.lang.String,int,char,int) -> <init>
    74:74:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$6 -> com.volmit.gloss.volume.bukkit.util.text.C$6:
    1:81:void <init>(java.lang.String,int,char,int) -> <init>
    85:85:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$7 -> com.volmit.gloss.volume.bukkit.util.text.C$7:
    1:92:void <init>(java.lang.String,int,char,int) -> <init>
    96:96:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$8 -> com.volmit.gloss.volume.bukkit.util.text.C$8:
    1:103:void <init>(java.lang.String,int,char,int) -> <init>
    107:107:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.C$9 -> com.volmit.gloss.volume.bukkit.util.text.C$9:
    1:114:void <init>(java.lang.String,int,char,int) -> <init>
    118:118:net.md_5.bungee.api.ChatColor asBungee() -> asBungee
com.volmit.gloss.volume.bukkit.util.text.ITagProvider -> com.volmit.gloss.volume.bukkit.util.text.ITagProvider:
    java.lang.String getTag(org.bukkit.command.CommandSender) -> getTag
    void msg(org.bukkit.command.CommandSender,java.lang.String) -> msg
com.volmit.gloss.volume.bukkit.util.text.TXT -> com.volmit.gloss.volume.bukkit.util.text.TXT:
    15:15:void <init>() -> <init>
    28:28:java.lang.String repeat(java.lang.String,int) -> repeat
    42:50:com.volmit.gloss.volume.lang.collections.GList wrap(java.lang.String,int) -> wrap
    70:70:java.lang.String makeTag(com.volmit.gloss.volume.bukkit.util.text.C,com.volmit.gloss.volume.bukkit.util.text.C,com.volmit.gloss.volume.bukkit.util.text.C,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> makeTag
    88:88:java.lang.String makeTag(com.volmit.gloss.volume.bukkit.util.text.C,com.volmit.gloss.volume.bukkit.util.text.C,com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> makeTag
    102:102:java.lang.String line(com.volmit.gloss.volume.bukkit.util.text.C,int) -> line
    118:120:java.lang.String line(com.volmit.gloss.volume.bukkit.util.text.C,int,java.lang.String) -> line
    134:137:java.lang.String line(com.volmit.gloss.volume.bukkit.util.text.C,java.lang.String) -> line
    151:151:java.lang.String underline(com.volmit.gloss.volume.bukkit.util.text.C,int) -> underline
    173:178:java.lang.String getLine(com.volmit.gloss.volume.bukkit.util.text.C,int,double,java.lang.String,java.lang.String,java.lang.String) -> getLine
com.volmit.gloss.volume.bukkit.util.world.Area -> com.volmit.gloss.volume.bukkit.util.world.Area:
    org.bukkit.Location location -> location
    java.lang.Double radius -> radius
    27:27:boolean within(org.bukkit.Location,org.bukkit.Location,double) -> within
    39:43:void <init>(org.bukkit.Location,java.lang.Double) -> <init>
    47:47:com.volmit.gloss.volume.bukkit.util.world.Cuboid toCuboid() -> toCuboid
    59:63:void <init>(org.bukkit.Location,java.lang.Integer) -> <init>
    77:85:java.lang.Double distance(org.bukkit.Location) -> distance
    99:99:java.lang.Double slowDistance(org.bukkit.Location) -> slowDistance
    111:111:boolean isWithin(org.bukkit.Location) -> isWithin
    121:121:boolean hasEntities() -> hasEntities
    133:143:org.bukkit.entity.Entity[] getNearbyEntities(org.bukkit.entity.EntityType) -> getNearbyEntities
    155:165:org.bukkit.entity.Entity[] getNearbyEntities(java.lang.Class) -> getNearbyEntities
    178:202:org.bukkit.entity.Entity[] getNearbyEntities() -> getNearbyEntities
    213:223:org.bukkit.entity.Player[] getNearbyPlayers() -> getNearbyPlayers
    233:233:org.bukkit.Location getLocation() -> getLocation
    244:245:void setLocation(org.bukkit.Location) -> setLocation
    254:254:java.lang.Double getRadius() -> getRadius
    265:266:void setRadius(java.lang.Double) -> setRadius
    275:280:org.bukkit.Location random() -> random
com.volmit.gloss.volume.bukkit.util.world.BlastResistance -> com.volmit.gloss.volume.bukkit.util.world.BlastResistance:
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BARRIER -> BARRIER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BEDROCK -> BEDROCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance COMMAND -> COMMAND
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ENDER_PORTAL -> ENDER_PORTAL
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ENDER_PORTAL_FRAME -> ENDER_PORTAL_FRAME
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ANVIL -> ANVIL
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ENCHANTMENT_TABLE -> ENCHANTMENT_TABLE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance OBSIDIAN -> OBSIDIAN
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ENDER_CHEST -> ENDER_CHEST
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WATER -> WATER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance LAVA -> LAVA
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance STATIONARY_WATER -> STATIONARY_WATER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DRAGON_EGG -> DRAGON_EGG
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ENDER_STONE -> ENDER_STONE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance COAL_BLOCK -> COAL_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DIAMOND_BLOCK -> DIAMOND_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance EMERALD_BLOCK -> EMERALD_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance GOLD_BLOCK -> GOLD_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance IRON_BLOCK -> IRON_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance REDSTONE_BLOCK -> REDSTONE_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BRICK -> BRICK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BRICK_STAIRS -> BRICK_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance HARD_CLAY -> HARD_CLAY
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance STONE -> STONE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SMOOTH_BRICK -> SMOOTH_BRICK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SMOOTH_STAIRS -> SMOOTH_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DOUBLE_STONE_SLAB2 -> DOUBLE_STONE_SLAB2
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance STONE_SLAB2 -> STONE_SLAB2
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance IRON_DOOR -> IRON_DOOR
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance IRON_DOOR_BLOCK -> IRON_DOOR_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance IRON_TRAPDOOR -> IRON_TRAPDOOR
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance MOB_SPAWNER -> MOB_SPAWNER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WEB -> WEB
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DISPENSER -> DISPENSER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DROPPER -> DROPPER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance FURNACE -> FURNACE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BURNING_FURNACE -> BURNING_FURNACE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BEACON -> BEACON
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance COAL_ORE -> COAL_ORE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance COCOA -> COCOA
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DIAMOND_ORE -> DIAMOND_ORE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance EMERALD_ORE -> EMERALD_ORE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance FENCE -> FENCE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance FENCE_GATE -> FENCE_GATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ACACIA_FENCE_GATE -> ACACIA_FENCE_GATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BIRCH_FENCE_GATE -> BIRCH_FENCE_GATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DARK_OAK_FENCE_GATE -> DARK_OAK_FENCE_GATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SPRUCE_FENCE_GATE -> SPRUCE_FENCE_GATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance JUNGLE_FENCE_GATE -> JUNGLE_FENCE_GATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ACACIA_FENCE -> ACACIA_FENCE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BIRCH_FENCE -> BIRCH_FENCE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DARK_OAK_FENCE -> DARK_OAK_FENCE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SPRUCE_FENCE -> SPRUCE_FENCE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance JUNGLE_FENCE -> JUNGLE_FENCE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ACACIA_WOOD_STAIRS -> ACACIA_WOOD_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BIRCH_WOOD_STAIRS -> BIRCH_WOOD_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DARK_OAK_WOOD_STAIRS -> DARK_OAK_WOOD_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SPRUCE_WOOD_STAIRS -> SPRUCE_WOOD_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance JUNGLE_WOOD_STAIRS -> JUNGLE_WOOD_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance QUARTZ_STAIRS -> QUARTZ_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance COBBLESTONE_STAIRS -> COBBLESTONE_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SANDSTONE_STAIRS -> SANDSTONE_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance NETHER_BRICK_STAIRS -> NETHER_BRICK_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WOOD_STAIRS -> WOOD_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance RED_SANDSTONE_STAIRS -> RED_SANDSTONE_STAIRS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ACACIA_DOOR -> ACACIA_DOOR
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BIRCH_DOOR -> BIRCH_DOOR
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DARK_OAK_DOOR -> DARK_OAK_DOOR
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SPRUCE_DOOR -> SPRUCE_DOOR
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance JUNGLE_DOOR -> JUNGLE_DOOR
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance GOLD_ORE -> GOLD_ORE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance HOPPER -> HOPPER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance IRON_ORE -> IRON_ORE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance LAPIS_BLOCK -> LAPIS_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance LAPIS_ORE -> LAPIS_ORE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance QUARTZ_ORE -> QUARTZ_ORE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance REDSTONE_ORE -> REDSTONE_ORE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance TRAP_DOOR -> TRAP_DOOR
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WOOD -> WOOD
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance CHEST -> CHEST
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance TRAPPED_CHEST -> TRAPPED_CHEST
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WORKBENCH -> WORKBENCH
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance CAULDRON -> CAULDRON
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance LOG -> LOG
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance LOG_2 -> LOG_2
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BOOKSHELF -> BOOKSHELF
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BANNER -> BANNER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance STANDING_BANNER -> STANDING_BANNER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WALL_BANNER -> WALL_BANNER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance JACK_O_LANTERN -> JACK_O_LANTERN
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance MELON_BLOCK -> MELON_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SKULL -> SKULL
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance PUMPKIN -> PUMPKIN
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SIGN -> SIGN
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SIGN_POST -> SIGN_POST
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WALL_SIGN -> WALL_SIGN
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance QUARTZ_BLOCK -> QUARTZ_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance NOTE_BLOCK -> NOTE_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance RED_SANDSTONE -> RED_SANDSTONE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SANDSTONE -> SANDSTONE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WOOL -> WOOL
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance MONSTER_EGG -> MONSTER_EGG
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance RAILS -> RAILS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ACTIVATOR_RAIL -> ACTIVATOR_RAIL
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DETECTOR_RAIL -> DETECTOR_RAIL
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance POWERED_RAIL -> POWERED_RAIL
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance CLAY -> CLAY
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DIRT -> DIRT
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance GRASS -> GRASS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance GRAVEL -> GRAVEL
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SPONGE -> SPONGE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BREWING_STAND -> BREWING_STAND
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance STONE_BUTTON -> STONE_BUTTON
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WOOD_BUTTON -> WOOD_BUTTON
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance CAKE_BLOCK -> CAKE_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance ICE -> ICE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance PACKED_ICE -> PACKED_ICE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance LEVER -> LEVER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance MYCEL -> MYCEL
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance PISTON_BASE -> PISTON_BASE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance PISTON_EXTENSION -> PISTON_EXTENSION
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance PISTON_MOVING_PIECE -> PISTON_MOVING_PIECE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance PISTON_STICKY_BASE -> PISTON_STICKY_BASE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance GOLD_PLATE -> GOLD_PLATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance IRON_PLATE -> IRON_PLATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance STONE_PLATE -> STONE_PLATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance WOOD_PLATE -> WOOD_PLATE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SAND -> SAND
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SOUL_SAND -> SOUL_SAND
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance CACTUS -> CACTUS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance LADDER -> LADDER
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance NETHERRACK -> NETHERRACK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance GLASS -> GLASS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance THIN_GLASS -> THIN_GLASS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance STAINED_GLASS -> STAINED_GLASS
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance STAINED_GLASS_PANE -> STAINED_GLASS_PANE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance GLOWSTONE -> GLOWSTONE
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance REDSTONE_LAMP_OFF -> REDSTONE_LAMP_OFF
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance REDSTONE_LAMP_ON -> REDSTONE_LAMP_ON
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SEA_LANTERN -> SEA_LANTERN
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance BED_BLOCK -> BED_BLOCK
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DAYLIGHT_DETECTOR -> DAYLIGHT_DETECTOR
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance DAYLIGHT_DETECTOR_INVERTED -> DAYLIGHT_DETECTOR_INVERTED
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance HUGE_MUSHROOM_1 -> HUGE_MUSHROOM_1
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance HUGE_MUSHROOM_2 -> HUGE_MUSHROOM_2
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance LEAVES -> LEAVES
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance LEAVES_2 -> LEAVES_2
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance SNOW -> SNOW
    int br -> br
    com.volmit.gloss.volume.bukkit.util.world.BlastResistance[] ENUM$VALUES -> ENUM$VALUES
    13:162:void <clinit>() -> <clinit>
    166:169:void <init>(java.lang.String,int,int) -> <init>
    173:173:int getBlastResistance() -> getBlastResistance
    178:193:int get(org.bukkit.Material) -> get
    1:1:com.volmit.gloss.volume.bukkit.util.world.BlastResistance[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.world.BlastResistance valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.world.Blocks -> com.volmit.gloss.volume.bukkit.util.world.Blocks:
    14:14:void <init>() -> <init>
    25:25:org.bukkit.Location getCenter(org.bukkit.block.Block) -> getCenter
    37:37:void update(org.bukkit.block.Block) -> update
    47:53:void updateAround(org.bukkit.block.Block) -> updateAround
com.volmit.gloss.volume.bukkit.util.world.Chunklet -> com.volmit.gloss.volume.bukkit.util.world.Chunklet:
    int x -> x
    int z -> z
    org.bukkit.World world -> world
    37:42:void <init>(int,int,org.bukkit.World) -> <init>
    51:51:com.volmit.gloss.volume.lang.collections.GList inThisChunk() -> inThisChunk
    60:65:void <init>(org.bukkit.Location) -> <init>
    74:87:com.volmit.gloss.volume.lang.collections.GList getPlayers() -> getPlayers
    97:107:com.volmit.gloss.volume.lang.collections.GList getEntities() -> getEntities
    117:117:org.bukkit.Chunk getChunk() -> getChunk
    129:129:boolean contains(org.bukkit.Location) -> contains
    141:141:boolean contains(org.bukkit.entity.Player) -> contains
    153:153:boolean contains(org.bukkit.Chunk) -> contains
    163:163:org.bukkit.Location getMin() -> getMin
    173:173:org.bukkit.Location getMax() -> getMax
    183:183:java.util.Iterator iterator() -> iterator
    195:195:com.volmit.gloss.volume.bukkit.util.world.Chunklet getRelative(com.volmit.gloss.volume.bukkit.util.world.Direction) -> getRelative
    205:212:com.volmit.gloss.volume.lang.collections.GList getNeighbors() -> getNeighbors
    224:258:com.volmit.gloss.volume.lang.collections.GList getCircle(int) -> getCircle
    264:278:boolean equals(java.lang.Object) -> equals
    292:300:com.volmit.gloss.volume.lang.collections.GList getBorder(int,com.volmit.gloss.volume.bukkit.util.world.Direction) -> getBorder
    310:310:int getX() -> getX
    321:322:void setX(int) -> setX
    331:331:int getZ() -> getZ
    342:343:void setZ(int) -> setZ
    352:352:org.bukkit.World getWorld() -> getWorld
    363:364:void setWorld(org.bukkit.World) -> setWorld
com.volmit.gloss.volume.bukkit.util.world.ChunkletMesh -> com.volmit.gloss.volume.bukkit.util.world.ChunkletMesh:
    org.bukkit.World world -> world
    com.volmit.gloss.volume.lang.collections.GMap chunklets -> chunklets
    com.volmit.gloss.volume.lang.collections.GList all -> all
    31:36:void <init>(org.bukkit.World) -> <init>
    43:47:void rebuildReferences() -> rebuildReferences
    56:56:com.volmit.gloss.volume.lang.collections.GList getChunklets() -> getChunklets
    68:76:boolean contains(org.bukkit.Location) -> contains
    88:88:boolean contains(org.bukkit.entity.Player) -> contains
    100:100:boolean contains(org.bukkit.entity.Entity) -> contains
    110:117:com.volmit.gloss.volume.lang.collections.GList getPlayers() -> getPlayers
    127:134:com.volmit.gloss.volume.lang.collections.GList getEntities() -> getEntities
    145:158:void add(com.volmit.gloss.volume.bukkit.util.world.Chunklet) -> add
com.volmit.gloss.volume.bukkit.util.world.Chunks -> com.volmit.gloss.volume.bukkit.util.world.Chunks:
    13:13:void <init>() -> <init>
    24:24:com.volmit.gloss.volume.lang.collections.GList getLoadedChunks(org.bukkit.World) -> getLoadedChunks
    34:41:com.volmit.gloss.volume.lang.collections.GList getLoadedChunks() -> getLoadedChunks
    55:55:com.volmit.gloss.volume.lang.collections.GList getRadius(org.bukkit.Chunk,int) -> getRadius
    73:73:boolean unload(org.bukkit.Chunk,boolean,boolean) -> unload
    87:87:boolean unload(org.bukkit.Chunk,boolean) -> unload
    99:99:boolean unload(org.bukkit.Chunk) -> unload
    115:125:int unload(com.volmit.gloss.volume.lang.collections.GList,boolean,boolean) -> unload
    139:139:int unload(com.volmit.gloss.volume.lang.collections.GList,boolean) -> unload
    151:151:int unload(com.volmit.gloss.volume.lang.collections.GList) -> unload
    167:167:boolean isLoaded(java.lang.String,int,int) -> isLoaded
    183:191:boolean isLoaded(org.bukkit.World,int,int) -> isLoaded
    202:206:void load(com.volmit.gloss.volume.lang.collections.GList) -> load
com.volmit.gloss.volume.bukkit.util.world.Cuboid -> com.volmit.gloss.volume.bukkit.util.world.Cuboid:
    java.lang.String worldName -> worldName
    int x1 -> x1
    int y1 -> y1
    int z1 -> z1
    int x2 -> x2
    int y2 -> y2
    int z2 -> z2
    int[] $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Cuboid$CuboidDirection -> $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Cuboid$CuboidDirection
    41:55:void <init>(org.bukkit.Location,org.bukkit.Location) -> <init>
    67:73:void set(org.bukkit.Location,org.bukkit.Location) -> set
    83:84:void <init>(org.bukkit.Location) -> <init>
    94:95:void <init>(com.volmit.gloss.volume.bukkit.util.world.Cuboid) -> <init>
    115:124:void <init>(org.bukkit.World,int,int,int,int,int,int) -> <init>
    144:153:void <init>(java.lang.String,int,int,int,int,int,int) -> <init>
    155:164:void <init>(java.util.Map) -> <init>
    169:177:java.util.Map serialize() -> serialize
    182:182:com.volmit.gloss.volume.bukkit.util.world.Cuboid flatten(int) -> flatten
    193:193:org.bukkit.Location getLowerNE() -> getLowerNE
    204:204:org.bukkit.Location getUpperSW() -> getUpperSW
    214:217:org.bukkit.Location getCenter() -> getCenter
    229:234:org.bukkit.World getWorld() -> getWorld
    244:244:int getSizeX() -> getSizeX
    254:254:int getSizeY() -> getSizeY
    264:264:int getSizeZ() -> getSizeZ
    274:274:com.volmit.gloss.volume.bukkit.util.world.Dimension getDimension() -> getDimension
    284:284:int getLowerX() -> getLowerX
    294:294:int getLowerY() -> getLowerY
    304:304:int getLowerZ() -> getLowerZ
    314:314:int getUpperX() -> getUpperX
    324:324:int getUpperY() -> getUpperY
    334:334:int getUpperZ() -> getUpperZ
    344:354:org.bukkit.block.Block[] corners() -> corners
    370:385:com.volmit.gloss.volume.bukkit.util.world.Cuboid expand(com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection,int) -> expand
    400:400:com.volmit.gloss.volume.bukkit.util.world.Cuboid shift(com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection,int) -> shift
    416:430:com.volmit.gloss.volume.bukkit.util.world.Cuboid outset(com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection,int) -> outset
    446:446:com.volmit.gloss.volume.bukkit.util.world.Cuboid inset(com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection,int) -> inset
    462:462:boolean contains(int,int,int) -> contains
    474:474:boolean contains(org.bukkit.block.Block) -> contains
    486:486:boolean contains(org.bukkit.Location) -> contains
    496:496:int volume() -> volume
    507:517:byte averageLightLevel() -> averageLightLevel
    528:528:com.volmit.gloss.volume.bukkit.util.world.Cuboid contract() -> contract
    542:582:com.volmit.gloss.volume.bukkit.util.world.Cuboid contract(com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection) -> contract
    596:611:com.volmit.gloss.volume.bukkit.util.world.Cuboid getFace(com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection) -> getFace
    624:631:boolean containsOnly(org.bukkit.Material) -> containsOnly
    643:655:com.volmit.gloss.volume.bukkit.util.world.Cuboid getBoundingCuboid(com.volmit.gloss.volume.bukkit.util.world.Cuboid) -> getBoundingCuboid
    671:671:org.bukkit.block.Block getRelativeBlock(int,int,int) -> getRelativeBlock
    691:691:org.bukkit.block.Block getRelativeBlock(org.bukkit.World,int,int,int) -> getRelativeBlock
    702:716:java.util.List getChunks() -> getChunks
    731:735:void fill(int,byte) -> fill
    759:759:java.util.Iterator iterator() -> iterator
    770:770:com.volmit.gloss.volume.bukkit.util.world.Cuboid clone() -> clone
    781:781:java.lang.String toString() -> toString
    1:1:java.lang.Object clone() -> clone
    26:26:int[] $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Cuboid$CuboidDirection() -> $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Cuboid$CuboidDirection
com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection -> com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection:
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection North -> North
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection East -> East
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection South -> South
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection West -> West
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection Up -> Up
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection Down -> Down
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection Horizontal -> Horizontal
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection Vertical -> Vertical
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection Both -> Both
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection Unknown -> Unknown
    int[] $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Cuboid$CuboidDirection -> $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Cuboid$CuboidDirection
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection[] ENUM$VALUES -> ENUM$VALUES
    832:844:void <clinit>() -> <clinit>
    832:832:void <init>(java.lang.String,int) -> <init>
    848:869:com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection opposite() -> opposite
    1:1:com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection valueOf(java.lang.String) -> valueOf
    832:832:int[] $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Cuboid$CuboidDirection() -> $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Cuboid$CuboidDirection
com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidIterator -> com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidIterator:
    org.bukkit.World w -> w
    int baseX -> baseX
    int baseY -> baseY
    int baseZ -> baseZ
    int x -> x
    int y -> y
    int z -> z
    int sizeX -> sizeX
    int sizeY -> sizeY
    int sizeZ -> sizeZ
    com.volmit.gloss.volume.bukkit.util.world.Cuboid this$0 -> this$0
    791:801:void <init>(com.volmit.gloss.volume.bukkit.util.world.Cuboid,org.bukkit.World,int,int,int,int,int,int) -> <init>
    806:806:boolean hasNext() -> hasNext
    812:822:org.bukkit.block.Block next() -> next
    829:829:void remove() -> remove
    1:1:java.lang.Object next() -> next
com.volmit.gloss.volume.bukkit.util.world.CuboidException -> com.volmit.gloss.volume.bukkit.util.world.CuboidException:
    long serialVersionUID -> serialVersionUID
    15:16:void <init>(java.lang.String) -> <init>
com.volmit.gloss.volume.bukkit.util.world.Dimension -> com.volmit.gloss.volume.bukkit.util.world.Dimension:
    int width -> width
    int height -> height
    int depth -> depth
    27:32:void <init>(int,int,int) -> <init>
    42:47:void <init>(int,int) -> <init>
    57:72:com.volmit.gloss.volume.bukkit.util.world.DimensionFace getPane() -> getPane
    77:77:int getWidth() -> getWidth
    82:82:int getHeight() -> getHeight
    87:87:int getDepth() -> getDepth
com.volmit.gloss.volume.bukkit.util.world.DimensionFace -> com.volmit.gloss.volume.bukkit.util.world.DimensionFace:
    com.volmit.gloss.volume.bukkit.util.world.DimensionFace X -> X
    com.volmit.gloss.volume.bukkit.util.world.DimensionFace Y -> Y
    com.volmit.gloss.volume.bukkit.util.world.DimensionFace Z -> Z
    com.volmit.gloss.volume.bukkit.util.world.DimensionFace[] ENUM$VALUES -> ENUM$VALUES
    11:26:void <clinit>() -> <clinit>
    11:11:void <init>(java.lang.String,int) -> <init>
    1:1:com.volmit.gloss.volume.bukkit.util.world.DimensionFace[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.world.DimensionFace valueOf(java.lang.String) -> valueOf
com.volmit.gloss.volume.bukkit.util.world.Direction -> com.volmit.gloss.volume.bukkit.util.world.Direction:
    com.volmit.gloss.volume.bukkit.util.world.Direction U -> U
    com.volmit.gloss.volume.bukkit.util.world.Direction D -> D
    com.volmit.gloss.volume.bukkit.util.world.Direction N -> N
    com.volmit.gloss.volume.bukkit.util.world.Direction S -> S
    com.volmit.gloss.volume.bukkit.util.world.Direction E -> E
    com.volmit.gloss.volume.bukkit.util.world.Direction W -> W
    int x -> x
    int y -> y
    int z -> z
    com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection f -> f
    int[] $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Direction -> $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Direction
    com.volmit.gloss.volume.bukkit.util.world.Direction[] ENUM$VALUES -> ENUM$VALUES
    13:20:void <clinit>() -> <clinit>
    27:33:void <init>(java.lang.String,int,int,int,int,com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection) -> <init>
    37:37:int x() -> x
    42:42:int y() -> y
    47:47:int z() -> z
    52:52:com.volmit.gloss.volume.bukkit.util.world.Cuboid$CuboidDirection f() -> f
    57:57:com.volmit.gloss.volume.lang.collections.GList news() -> news
    62:62:com.volmit.gloss.volume.lang.collections.GList udnews() -> udnews
    76:108:com.volmit.gloss.volume.bukkit.util.world.Direction fromByte(byte) -> fromByte
    119:137:byte byteValue() -> byteValue
    1:1:com.volmit.gloss.volume.bukkit.util.world.Direction[] values() -> values
    1:1:com.volmit.gloss.volume.bukkit.util.world.Direction valueOf(java.lang.String) -> valueOf
    13:13:int[] $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Direction() -> $SWITCH_TABLE$com$volmit$volume$bukkit$util$world$Direction
com.volmit.gloss.volume.bukkit.util.world.Explosion -> com.volmit.gloss.volume.bukkit.util.world.Explosion:
    boolean blocks -> blocks
    boolean fire -> fire
    float yield -> yield
    11:16:void <init>() -> <init>
    20:21:void boom(org.bukkit.Location) -> boom
    25:26:com.volmit.gloss.volume.bukkit.util.world.Explosion setBreakBlocks(boolean) -> setBreakBlocks
    31:32:com.volmit.gloss.volume.bukkit.util.world.Explosion radius(float) -> radius
    37:38:com.volmit.gloss.volume.bukkit.util.world.Explosion noBlocks() -> noBlocks
    43:44:com.volmit.gloss.volume.bukkit.util.world.Explosion withFire() -> withFire
com.volmit.gloss.volume.bukkit.util.world.Impulse -> com.volmit.gloss.volume.bukkit.util.world.Impulse:
    double radius -> radius
    double forceMax -> forceMax
    double forceMin -> forceMin
    15:20:void <init>(double) -> <init>
    24:25:com.volmit.gloss.volume.bukkit.util.world.Impulse radius(double) -> radius
    30:31:com.volmit.gloss.volume.bukkit.util.world.Impulse force(double) -> force
    36:38:com.volmit.gloss.volume.bukkit.util.world.Impulse force(double,double) -> force
    43:57:void punch(org.bukkit.Location) -> punch
com.volmit.gloss.volume.bukkit.util.world.Inventories -> com.volmit.gloss.volume.bukkit.util.world.Inventories:
    14:14:void <init>() -> <init>
    25:25:boolean hasSpace(org.bukkit.inventory.Inventory) -> hasSpace
    39:39:boolean hasSpace(org.bukkit.inventory.Inventory,int) -> hasSpace
    52:62:com.volmit.gloss.volume.lang.collections.GList getActualContents(org.bukkit.inventory.Inventory) -> getActualContents
    78:94:boolean hasSpace(org.bukkit.inventory.Inventory,org.bukkit.inventory.ItemStack) -> hasSpace
    106:116:int getEmptySlots(org.bukkit.inventory.Inventory) -> getEmptySlots
com.volmit.gloss.volume.bukkit.util.world.Items -> com.volmit.gloss.volume.bukkit.util.world.Items:
    17:17:void <init>() -> <init>
    28:28:boolean is(org.bukkit.inventory.ItemStack) -> is
    42:42:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material) -> is
    57:57:boolean is(org.bukkit.inventory.ItemStack,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> is
    73:73:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,byte) -> is
    89:89:boolean is(org.bukkit.inventory.ItemStack,org.bukkit.Material,int) -> is
    101:101:boolean hasMeta(org.bukkit.inventory.ItemStack) -> hasMeta
    113:113:boolean hasName(org.bukkit.inventory.ItemStack) -> hasName
    125:125:boolean hasLore(org.bukkit.inventory.ItemStack) -> hasLore
    139:139:boolean hasName(org.bukkit.inventory.ItemStack,java.lang.String) -> hasName
    153:153:boolean hasLore(org.bukkit.inventory.ItemStack,java.util.List) -> hasLore
    167:167:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment) -> hasEnchantment
    183:188:boolean hasEnchantment(org.bukkit.inventory.ItemStack,org.bukkit.enchantments.Enchantment,int) -> hasEnchantment
    200:205:boolean hasEnchantments(org.bukkit.inventory.ItemStack) -> hasEnchantments
    218:223:com.volmit.gloss.volume.bukkit.util.world.MaterialBlock toMaterialBlock(org.bukkit.inventory.ItemStack) -> toMaterialBlock
    235:235:boolean isBroken(org.bukkit.inventory.ItemStack) -> isBroken
    247:247:boolean hasDurability(org.bukkit.inventory.ItemStack) -> hasDurability
    259:269:double getDurabilityPercent(org.bukkit.inventory.ItemStack) -> getDurabilityPercent
    282:295:void setDurabilityPercent(org.bukkit.inventory.ItemStack,double) -> setDurabilityPercent
    306:311:short getMaxDurability(org.bukkit.inventory.ItemStack) -> getMaxDurability
    323:328:short getDurability(org.bukkit.inventory.ItemStack) -> getDurability
    341:347:void setDurability(org.bukkit.inventory.ItemStack,short) -> setDurability
    359:365:void setDurability(org.bukkit.inventory.ItemStack,int) -> setDurability
    377:383:void damage(org.bukkit.inventory.ItemStack,int) -> damage
    397:440:boolean isMergable(org.bukkit.inventory.ItemStack,org.bukkit.inventory.ItemStack) -> isMergable
    445:455:boolean addItem(org.bukkit.entity.Player,org.bukkit.inventory.ItemStack) -> addItem
com.volmit.gloss.volume.bukkit.util.world.MaterialBlock -> com.volmit.gloss.volume.bukkit.util.world.MaterialBlock:
    org.bukkit.Material material -> material
    java.lang.Byte data -> data
    27:31:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    33:37:void <init>(org.bukkit.Material) -> <init>
    39:43:void <init>(org.bukkit.Location) -> <init>
    45:49:void <init>() -> <init>
    53:53:org.bukkit.Material getMaterial() -> getMaterial
    58:59:void setMaterial(org.bukkit.Material) -> setMaterial
    63:63:java.lang.Byte getData() -> getData
    68:69:void setData(java.lang.Byte) -> setData
    74:79:java.lang.String toString() -> toString
    85:89:int hashCode() -> hashCode
    95:123:boolean equals(java.lang.Object) -> equals
com.volmit.gloss.volume.bukkit.util.world.PE -> com.volmit.gloss.volume.bukkit.util.world.PE:
    com.volmit.gloss.volume.bukkit.util.world.PE ABSORPTION -> ABSORPTION
    com.volmit.gloss.volume.bukkit.util.world.PE BLINDNESS -> BLINDNESS
    com.volmit.gloss.volume.bukkit.util.world.PE CONFUSION -> CONFUSION
    com.volmit.gloss.volume.bukkit.util.world.PE DAMAGE_RESISTANCE -> DAMAGE_RESISTANCE
    com.volmit.gloss.volume.bukkit.util.world.PE FAST_DIGGING -> FAST_DIGGING
    com.volmit.gloss.volume.bukkit.util.world.PE FIRE_RESISTANCE -> FIRE_RESISTANCE
    com.volmit.gloss.volume.bukkit.util.world.PE GLOWING -> GLOWING
    com.volmit.gloss.volume.bukkit.util.world.PE HARM -> HARM
    com.volmit.gloss.volume.bukkit.util.world.PE HEAL -> HEAL
    com.volmit.gloss.volume.bukkit.util.world.PE HEALTH_BOOST -> HEALTH_BOOST
    com.volmit.gloss.volume.bukkit.util.world.PE HUNGER -> HUNGER
    com.volmit.gloss.volume.bukkit.util.world.PE INCREASE_DAMAGE -> INCREASE_DAMAGE
    com.volmit.gloss.volume.bukkit.util.world.PE INVISIBILITY -> INVISIBILITY
    com.volmit.gloss.volume.bukkit.util.world.PE JUMP -> JUMP
    com.volmit.gloss.volume.bukkit.util.world.PE LEVITATION -> LEVITATION
    com.volmit.gloss.volume.bukkit.util.world.PE LUCK -> LUCK
    com.volmit.gloss.volume.bukkit.util.world.PE NIGHT_VISION -> NIGHT_VISION
    com.volmit.gloss.volume.bukkit.util.world.PE POISON -> POISON
    com.volmit.gloss.volume.bukkit.util.world.PE REGENERATION -> REGENERATION
    com.volmit.gloss.volume.bukkit.util.world.PE SATURATION -> SATURATION
    com.volmit.gloss.volume.bukkit.util.world.PE SLOW -> SLOW
    com.volmit.gloss.volume.bukkit.util.world.PE SLOW_DIGGING -> SLOW_DIGGING
    com.volmit.gloss.volume.bukkit.util.world.PE SPEED -> SPEED
    com.volmit.gloss.volume.bukkit.util.world.PE UNLUCK -> UNLUCK
    com.volmit.gloss.volume.bukkit.util.world.PE WATER_BREATHING -> WATER_BREATHING
    com.volmit.gloss.volume.bukkit.util.world.PE WEAKNESS -> WEAKNESS
    com.volmit.gloss.volume.bukkit.util.world.PE WITHER -> WITHER
    194:221:void <clinit>() -> <clinit>
    54:55:void <init>(java.util.Map) -> <init>
    59:60:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean,boolean) -> <init>
    64:65:void <init>(org.bukkit.potion.PotionEffectType,int,int,boolean) -> <init>
    69:70:void <init>(org.bukkit.potion.PotionEffectType,int,int) -> <init>
    75:75:java.util.Map serialize() -> serialize
    81:81:boolean apply(org.bukkit.entity.LivingEntity) -> apply
    87:87:boolean equals(java.lang.Object) -> equals
    93:93:int getAmplifier() -> getAmplifier
    99:99:int getDuration() -> getDuration
    105:105:org.bukkit.potion.PotionEffectType getType() -> getType
    111:111:boolean isAmbient() -> isAmbient
    117:117:boolean hasParticles() -> hasParticles
    123:123:int hashCode() -> hashCode
    129:129:java.lang.String toString() -> toString
    134:134:com.volmit.gloss.volume.bukkit.util.world.PE defaulted(org.bukkit.potion.PotionEffectType) -> defaulted
    146:146:com.volmit.gloss.volume.bukkit.util.world.PE d(int) -> d
    158:158:com.volmit.gloss.volume.bukkit.util.world.PE a(int) -> a
    168:168:org.bukkit.potion.PotionEffect c() -> c
    179:180:void c(org.bukkit.entity.LivingEntity) -> c
    184:185:void crm(org.bukkit.entity.LivingEntity) -> crm
    189:190:void rm(org.bukkit.entity.LivingEntity) -> rm
com.volmit.gloss.volume.bukkit.util.world.Players -> com.volmit.gloss.volume.bukkit.util.world.Players:
    30:30:void <init>() -> <init>
    34:35:void messageWithPerms(java.lang.String,java.lang.String[]) -> messageWithPerms
    39:40:void messageWithoutPerms(java.lang.String,java.lang.String[]) -> messageWithoutPerms
    44:45:void messageOps(java.lang.String) -> messageOps
    49:50:void messageNonOps(java.lang.String) -> messageNonOps
    54:58:void message(com.volmit.gloss.volume.lang.collections.GList,java.lang.String) -> message
    69:69:boolean isOnline(java.lang.String) -> isOnline
    81:81:org.bukkit.entity.Player getPlayer(java.lang.String) -> getPlayer
    93:93:org.bukkit.inventory.ItemStack getOffHand(org.bukkit.entity.Player) -> getOffHand
    105:105:org.bukkit.inventory.ItemStack getMainHand(org.bukkit.entity.Player) -> getMainHand
    118:119:void setOffHand(org.bukkit.entity.Player,org.bukkit.inventory.ItemStack) -> setOffHand
    131:132:void setMainHand(org.bukkit.entity.Player,org.bukkit.inventory.ItemStack) -> setMainHand
    142:145:void swapHands(org.bukkit.entity.Player) -> swapHands
    154:154:boolean isAnyOnline() -> isAnyOnline
    166:166:com.volmit.gloss.volume.lang.collections.GList inWorld(org.bukkit.World) -> inWorld
    178:190:com.volmit.gloss.volume.lang.collections.GList inChunk(org.bukkit.Chunk) -> inChunk
    204:204:com.volmit.gloss.volume.lang.collections.GList inArea(org.bukkit.Location,double) -> inArea
    218:218:com.volmit.gloss.volume.lang.collections.GList inArea(org.bukkit.Location,int) -> inArea
    228:228:boolean isAnyoneOnline() -> isAnyoneOnline
    238:238:int getPlayerCount() -> getPlayerCount
    248:253:org.bukkit.entity.Player getRandomPlayer() -> getRandomPlayer
    265:265:org.bukkit.entity.Player getPlayer(java.util.UUID) -> getPlayer
    279:316:com.volmit.gloss.volume.lang.collections.GList getPlayers(java.lang.String) -> getPlayers
    326:326:com.volmit.gloss.volume.lang.collections.GList getOps() -> getOps
    343:343:com.volmit.gloss.volume.lang.collections.GList getNonOps() -> getNonOps
    363:363:com.volmit.gloss.volume.lang.collections.GList getPlayersWithPermission(java.lang.String[]) -> getPlayersWithPermission
    391:391:com.volmit.gloss.volume.lang.collections.GList getPlayersWithoutPermission(java.lang.String[]) -> getPlayersWithoutPermission
    421:421:com.volmit.gloss.volume.lang.collections.GList getPlayers(com.volmit.gloss.volume.lang.collections.GListAdapter) -> getPlayers
    431:438:com.volmit.gloss.volume.lang.collections.GList getPlayers() -> getPlayers
    443:448:org.bukkit.entity.Player getAnyPlayer() -> getAnyPlayer
    453:456:boolean isWithinViewDistance(org.bukkit.entity.Player,org.bukkit.Chunk) -> isWithinViewDistance
    461:469:boolean isWithinViewDistance(org.bukkit.Chunk) -> isWithinViewDistance
    480:481:void disable(org.bukkit.entity.Player) -> disable
    491:492:void enable(org.bukkit.entity.Player) -> enable
    505:505:org.bukkit.Location targetBlock(org.bukkit.entity.Player,int) -> targetBlock
    519:519:org.bukkit.entity.Entity targetEntity(org.bukkit.entity.Player,int) -> targetEntity
    531:532:boolean hasInventoryOpen(org.bukkit.entity.Player) -> hasInventoryOpen
    548:580:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Player,double,double) -> getEntityLookingAt
    592:592:boolean canFindPlayer(java.lang.String) -> canFindPlayer
    604:620:org.bukkit.entity.Player findPlayer(java.lang.String) -> findPlayer
    630:637:com.volmit.gloss.volume.lang.collections.GList onlinePlayers() -> onlinePlayers
    649:649:org.bukkit.Location getCrotchLocation(org.bukkit.entity.Player) -> getCrotchLocation
    660:663:void clear(org.bukkit.entity.Player) -> clear
    673:677:void clearEffects(org.bukkit.entity.Player) -> clearEffects
    690:691:void heal(org.bukkit.entity.Player,double) -> heal
    701:702:void heal(org.bukkit.entity.Player) -> heal
    713:714:void resetMaxHeath(org.bukkit.entity.Player) -> resetMaxHeath
    724:725:void resetHunger(org.bukkit.entity.Player) -> resetHunger
    735:736:void kill(org.bukkit.entity.Player) -> kill
    747:747:com.volmit.gloss.volume.bukkit.util.world.Shape getShape(org.bukkit.entity.Player) -> getShape
    759:759:org.bukkit.Location getHand(org.bukkit.entity.Player) -> getHand
    775:784:org.bukkit.Location getHand(org.bukkit.entity.Player,float,float) -> getHand
com.volmit.gloss.volume.bukkit.util.world.Players$1 -> com.volmit.gloss.volume.bukkit.util.world.Players$1:
    1:178:void <init>() -> <init>
    183:188:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Entity) -> onAdapt
    1:1:java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.volume.bukkit.util.world.Players$2 -> com.volmit.gloss.volume.bukkit.util.world.Players$2:
    1:326:void <init>() -> <init>
    331:331:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Player) -> onAdapt
    1:1:java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.volume.bukkit.util.world.Players$3 -> com.volmit.gloss.volume.bukkit.util.world.Players$3:
    1:343:void <init>() -> <init>
    348:348:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Player) -> onAdapt
    1:1:java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.volume.bukkit.util.world.Players$4 -> com.volmit.gloss.volume.bukkit.util.world.Players$4:
    java.lang.String[] val$permissions -> val$permissions
    1:363:void <init>(java.lang.String[]) -> <init>
    368:376:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Player) -> onAdapt
    1:1:java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.volume.bukkit.util.world.Players$5 -> com.volmit.gloss.volume.bukkit.util.world.Players$5:
    java.lang.String[] val$permissions -> val$permissions
    1:391:void <init>(java.lang.String[]) -> <init>
    396:404:org.bukkit.entity.Player onAdapt(org.bukkit.entity.Player) -> onAdapt
    1:1:java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.volume.bukkit.util.world.Players$6 -> com.volmit.gloss.volume.bukkit.util.world.Players$6:
    java.lang.Double val$doff -> val$doff
    org.bukkit.entity.Player val$e -> val$e
    org.bukkit.entity.Entity[] val$result -> val$result
    1:561:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Player,org.bukkit.entity.Entity[]) -> <init>
    566:577:void onTrace(org.bukkit.Location) -> onTrace
com.volmit.gloss.volume.bukkit.util.world.RayTrace -> com.volmit.gloss.volume.bukkit.util.world.RayTrace:
    org.bukkit.Location start -> start
    org.bukkit.util.Vector direction -> direction
    java.lang.Double maxDistance -> maxDistance
    java.lang.Double distanceCovered -> distanceCovered
    java.lang.Double step -> step
    java.lang.Boolean stop -> stop
    38:46:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double) -> <init>
    53:67:void trace() -> trace
    75:76:void stop() -> stop
    87:87:void onTrace(org.bukkit.Location) -> onTrace
    91:91:org.bukkit.Location getStart() -> getStart
    96:97:void setStart(org.bukkit.Location) -> setStart
    101:101:org.bukkit.util.Vector getDirection() -> getDirection
    106:107:void setDirection(org.bukkit.util.Vector) -> setDirection
    111:111:java.lang.Double getMaxDistance() -> getMaxDistance
    116:117:void setMaxDistance(java.lang.Double) -> setMaxDistance
    121:121:java.lang.Double getDistanceCovered() -> getDistanceCovered
    126:127:void setDistanceCovered(java.lang.Double) -> setDistanceCovered
    131:131:java.lang.Double getStep() -> getStep
    136:137:void setStep(java.lang.Double) -> setStep
com.volmit.gloss.volume.bukkit.util.world.Shape -> com.volmit.gloss.volume.bukkit.util.world.Shape:
    org.bukkit.Location location -> location
    org.bukkit.util.Vector offset -> offset
    org.bukkit.util.Vector size -> size
    27:32:void <init>(org.bukkit.Location,org.bukkit.util.Vector,org.bukkit.util.Vector) -> <init>
    44:45:void <init>(org.bukkit.Location,org.bukkit.util.Vector) -> <init>
    55:56:void <init>(org.bukkit.Location) -> <init>
    67:80:boolean isWithinShape(org.bukkit.Location) -> isWithinShape
    90:94:org.bukkit.Location randomLocation() -> randomLocation
    104:104:org.bukkit.Location randomSurface() -> randomSurface
    114:114:org.bukkit.Location getCenter() -> getCenter
    119:119:org.bukkit.Location getLocation() -> getLocation
    124:124:org.bukkit.util.Vector getOffset() -> getOffset
    129:129:org.bukkit.util.Vector getSize() -> getSize
com.volmit.gloss.volume.bukkit.util.world.SnowLevel -> com.volmit.gloss.volume.bukkit.util.world.SnowLevel:
    byte level -> level
    21:24:void <init>(byte) -> <init>
    33:43:byte getLevel() -> getLevel
    54:55:void setLevel(byte) -> setLevel
com.volmit.gloss.volume.bukkit.util.world.VariableBlock -> com.volmit.gloss.volume.bukkit.util.world.VariableBlock:
    com.volmit.gloss.volume.lang.collections.GList blocks -> blocks
    18:21:void <init>() -> <init>
    25:28:void <init>(java.lang.String) -> <init>
    36:39:void <init>(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock[]) -> <init>
    51:52:void <init>(org.bukkit.Material,java.lang.Byte) -> <init>
    62:63:void <init>(org.bukkit.Material) -> <init>
    72:72:com.volmit.gloss.volume.lang.collections.GList getBlocks() -> getBlocks
    77:77:com.volmit.gloss.volume.bukkit.util.world.MaterialBlock random() -> random
    89:89:boolean is(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> is
    100:104:void addBlock(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> addBlock
    114:115:void removeBlock(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> removeBlock
    119:149:void fromString(java.lang.String) -> fromString
    154:161:java.lang.String toString() -> toString
com.volmit.gloss.volume.bukkit.util.world.VectorSchematic -> com.volmit.gloss.volume.bukkit.util.world.VectorSchematic:
    com.volmit.gloss.volume.lang.collections.GMap schematic -> schematic
    22:25:void <init>() -> <init>
    37:45:boolean contains(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> contains
    57:57:boolean containsMultiple(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> containsMultiple
    69:79:com.volmit.gloss.volume.lang.collections.GList find(com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> find
    91:123:com.volmit.gloss.volume.lang.collections.GMap match(org.bukkit.Location) -> match
    133:133:com.volmit.gloss.volume.lang.collections.GMap getSchematic() -> getSchematic
    139:142:int hashCode() -> hashCode
    148:172:boolean equals(java.lang.Object) -> equals
    180:181:void clear() -> clear
com.volmit.gloss.volume.bukkit.util.world.W -> com.volmit.gloss.volume.bukkit.util.world.W:
    32:32:void <init>() -> <init>
    43:51:boolean visible(org.bukkit.block.Block) -> visible
    64:67:void colorArmor(org.bukkit.inventory.ItemStack,org.bukkit.Color) -> colorArmor
    78:89:org.bukkit.entity.Entity getEntity(int) -> getEntity
    104:117:int count(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock) -> count
    134:134:boolean has(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,int) -> has
    146:146:int getChunkX(org.bukkit.block.Block) -> getChunkX
    158:158:int getChunkY(org.bukkit.block.Block) -> getChunkY
    171:172:void dropXp(org.bukkit.Location,int) -> dropXp
    183:183:int getChunkZ(org.bukkit.block.Block) -> getChunkZ
    199:206:void take(org.bukkit.entity.Player,com.volmit.gloss.volume.bukkit.util.world.MaterialBlock,int) -> take
    222:230:int getManhattanDistance(org.bukkit.Location,org.bukkit.Location,boolean) -> getManhattanDistance
    235:242:com.volmit.gloss.volume.lang.collections.GList news(org.bukkit.Location) -> news
    259:267:int getManhattanDistance(org.bukkit.block.Block,org.bukkit.block.Block,boolean) -> getManhattanDistance
    279:279:com.volmit.gloss.volume.lang.collections.GList getBlocks(org.bukkit.Chunk) -> getBlocks
    291:301:com.volmit.gloss.volume.lang.collections.GList getChunklets(org.bukkit.Chunk) -> getChunklets
    313:320:com.volmit.gloss.volume.lang.collections.GList getChunklets(com.volmit.gloss.volume.lang.collections.GList) -> getChunklets
    336:403:com.volmit.gloss.volume.bukkit.util.world.MaterialBlock getMaterialBlock(java.lang.String) -> getMaterialBlock
    417:429:org.bukkit.block.Block[] getRelative(org.bukkit.block.Block,org.bukkit.block.BlockFace[]) -> getRelative
    444:445:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData) -> setTypeAndData
    462:463:void setTypeAndData(org.bukkit.block.Block,org.bukkit.Material,org.bukkit.material.MaterialData,boolean) -> setTypeAndData
    477:478:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int) -> setTypeAndRawData
    495:496:void setTypeAndRawData(org.bukkit.block.Block,org.bukkit.Material,int,boolean) -> setTypeAndRawData
    509:510:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData) -> setData
    525:526:void setData(org.bukkit.block.Block,org.bukkit.material.MaterialData,boolean) -> setData
    542:552:int getHighestPotionLevel(org.bukkit.potion.PotionEffectType,java.util.Collection) -> getHighestPotionLevel
    564:571:com.volmit.gloss.volume.lang.collections.GList chunkFaces(org.bukkit.Chunk) -> chunkFaces
    583:592:com.volmit.gloss.volume.lang.collections.GList blockFaces(org.bukkit.block.Block) -> blockFaces
    604:618:org.bukkit.Location simulateFall(org.bukkit.Location) -> simulateFall
    632:644:com.volmit.gloss.volume.lang.collections.GList chunkRadius(org.bukkit.Chunk,int) -> chunkRadius
    658:670:com.volmit.gloss.volume.lang.collections.GList blockRadius(org.bukkit.block.Block,int) -> blockRadius
    692:724:org.bukkit.entity.Entity getEntityLookingAt(org.bukkit.entity.Entity,double,double) -> getEntityLookingAt
    742:749:boolean isLookingAt(org.bukkit.entity.Entity,org.bukkit.entity.Entity,double,double) -> isLookingAt
    763:763:double differenceOfVectors(org.bukkit.util.Vector,org.bukkit.util.Vector) -> differenceOfVectors
com.volmit.gloss.volume.bukkit.util.world.W$1 -> com.volmit.gloss.volume.bukkit.util.world.W$1:
    java.lang.Double val$doff -> val$doff
    org.bukkit.entity.Entity val$e -> val$e
    org.bukkit.entity.Entity[] val$result -> val$result
    1:705:void <init>(org.bukkit.Location,org.bukkit.util.Vector,java.lang.Double,java.lang.Double,java.lang.Double,org.bukkit.entity.Entity,org.bukkit.entity.Entity[]) -> <init>
    710:721:void onTrace(org.bukkit.Location) -> onTrace
com.volmit.gloss.volume.bukkit.util.world.Worlds -> com.volmit.gloss.volume.bukkit.util.world.Worlds:
    13:13:void <init>() -> <init>
    22:22:com.volmit.gloss.volume.lang.collections.GList getWorlds() -> getWorlds
    34:34:boolean hasWorld(java.lang.String) -> hasWorld
    46:46:org.bukkit.World getWorld(java.lang.String) -> getWorld
com.volmit.gloss.volume.cluster.ClusterBase -> com.volmit.gloss.volume.cluster.ClusterBase:
    java.lang.Object t -> t
    java.lang.Class type -> type
    8:12:void <init>(java.lang.Class,java.lang.Object) -> <init>
    17:17:java.lang.Class getType() -> getType
    23:24:void set(java.lang.Object) -> set
    29:29:java.lang.Object get() -> get
com.volmit.gloss.volume.cluster.ClusterBoolean -> com.volmit.gloss.volume.cluster.ClusterBoolean:
    7:8:void <init>(java.lang.Boolean) -> <init>
com.volmit.gloss.volume.cluster.ClusterDouble -> com.volmit.gloss.volume.cluster.ClusterDouble:
    7:8:void <init>(java.lang.Double) -> <init>
com.volmit.gloss.volume.cluster.ClusterFloat -> com.volmit.gloss.volume.cluster.ClusterFloat:
    7:8:void <init>(java.lang.Float) -> <init>
com.volmit.gloss.volume.cluster.ClusterInteger -> com.volmit.gloss.volume.cluster.ClusterInteger:
    7:8:void <init>(java.lang.Integer) -> <init>
com.volmit.gloss.volume.cluster.ClusterLong -> com.volmit.gloss.volume.cluster.ClusterLong:
    7:8:void <init>(java.lang.Long) -> <init>
com.volmit.gloss.volume.cluster.ClusterShort -> com.volmit.gloss.volume.cluster.ClusterShort:
    7:8:void <init>(java.lang.Short) -> <init>
com.volmit.gloss.volume.cluster.ClusterString -> com.volmit.gloss.volume.cluster.ClusterString:
    7:8:void <init>(java.lang.String) -> <init>
com.volmit.gloss.volume.cluster.ClusterStringList -> com.volmit.gloss.volume.cluster.ClusterStringList:
    10:11:void <init>(com.volmit.gloss.volume.lang.collections.GList) -> <init>
com.volmit.gloss.volume.cluster.DataCluster -> com.volmit.gloss.volume.cluster.DataCluster:
    com.volmit.gloss.volume.lang.collections.GMap clusters -> clusters
    com.volmit.gloss.volume.lang.collections.GMap comments -> comments
    17:18:void <init>() -> <init>
    20:24:void <init>(com.volmit.gloss.volume.lang.collections.GMap) -> <init>
    29:29:com.volmit.gloss.volume.cluster.ICluster getCluster(java.lang.String) -> getCluster
    35:35:com.volmit.gloss.volume.lang.collections.GList k() -> k
    41:41:com.volmit.gloss.volume.lang.collections.GMap map() -> map
    47:62:com.volmit.gloss.volume.cluster.DataCluster crop(java.lang.String) -> crop
    68:68:com.volmit.gloss.volume.cluster.DataCluster copy() -> copy
    74:74:boolean has(java.lang.String) -> has
    80:97:boolean has(java.lang.String,java.lang.Class) -> has
    104:104:java.lang.Object get(java.lang.String) -> get
    111:192:void set(java.lang.String,java.lang.Object) -> set
    197:197:java.lang.String getString(java.lang.String) -> getString
    203:203:java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    209:209:java.lang.Integer getInt(java.lang.String) -> getInt
    215:215:java.lang.Long getLong(java.lang.String) -> getLong
    221:221:java.lang.Float getFloat(java.lang.String) -> getFloat
    227:227:java.lang.Double getDouble(java.lang.String) -> getDouble
    233:233:java.lang.Short getShort(java.lang.String) -> getShort
    239:239:com.volmit.gloss.volume.lang.collections.GList getStringList(java.lang.String) -> getStringList
    245:246:void set(java.lang.String,java.lang.String) -> set
    251:252:void set(java.lang.String,boolean) -> set
    257:258:void set(java.lang.String,int) -> set
    263:264:void set(java.lang.String,long) -> set
    269:270:void set(java.lang.String,float) -> set
    275:276:void set(java.lang.String,double) -> set
    281:282:void set(java.lang.String,short) -> set
    287:288:void set(java.lang.String,com.volmit.gloss.volume.lang.collections.GList) -> set
    293:294:void set(java.lang.String,java.util.List) -> set
    299:299:com.volmit.gloss.volume.lang.collections.GMap getComments() -> getComments
    305:305:boolean hasComment(java.lang.String) -> hasComment
    311:311:java.lang.String getComment(java.lang.String) -> getComment
    317:318:void setComment(java.lang.String,java.lang.String) -> setComment
    323:325:void remove(java.lang.String) -> remove
    330:331:void removeComment(java.lang.String) -> removeComment
    336:337:void removeComments() -> removeComments
com.volmit.gloss.volume.cluster.ICluster -> com.volmit.gloss.volume.cluster.ICluster:
    java.lang.Class getType() -> getType
    void set(java.lang.Object) -> set
    java.lang.Object get() -> get
com.volmit.gloss.volume.cluster.IClusterObject -> com.volmit.gloss.volume.cluster.IClusterObject:
    void toData(com.volmit.gloss.volume.cluster.DataCluster) -> toData
    void fromData(com.volmit.gloss.volume.cluster.DataCluster) -> fromData
com.volmit.gloss.volume.cluster.IClusterPort -> com.volmit.gloss.volume.cluster.IClusterPort:
    com.volmit.gloss.volume.cluster.DataCluster toCluster(java.lang.Object) -> toCluster
    java.lang.Object fromCluster(com.volmit.gloss.volume.cluster.DataCluster) -> fromCluster
com.volmit.gloss.volume.cluster.IDataCluster -> com.volmit.gloss.volume.cluster.IDataCluster:
    com.volmit.gloss.volume.cluster.ICluster getCluster(java.lang.String) -> getCluster
    com.volmit.gloss.volume.lang.collections.GList k() -> k
    com.volmit.gloss.volume.lang.collections.GMap map() -> map
    com.volmit.gloss.volume.lang.collections.GMap getComments() -> getComments
    void remove(java.lang.String) -> remove
    void removeComment(java.lang.String) -> removeComment
    void removeComments() -> removeComments
    boolean hasComment(java.lang.String) -> hasComment
    java.lang.String getComment(java.lang.String) -> getComment
    void setComment(java.lang.String,java.lang.String) -> setComment
    com.volmit.gloss.volume.cluster.DataCluster crop(java.lang.String) -> crop
    com.volmit.gloss.volume.cluster.DataCluster copy() -> copy
    boolean has(java.lang.String) -> has
    boolean has(java.lang.String,java.lang.Class) -> has
    java.lang.Object get(java.lang.String) -> get
    void set(java.lang.String,java.lang.Object) -> set
    java.lang.String getString(java.lang.String) -> getString
    java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    java.lang.Integer getInt(java.lang.String) -> getInt
    java.lang.Long getLong(java.lang.String) -> getLong
    java.lang.Float getFloat(java.lang.String) -> getFloat
    java.lang.Double getDouble(java.lang.String) -> getDouble
    java.lang.Short getShort(java.lang.String) -> getShort
    com.volmit.gloss.volume.lang.collections.GList getStringList(java.lang.String) -> getStringList
    void set(java.lang.String,java.lang.String) -> set
    void set(java.lang.String,boolean) -> set
    void set(java.lang.String,int) -> set
    void set(java.lang.String,long) -> set
    void set(java.lang.String,float) -> set
    void set(java.lang.String,double) -> set
    void set(java.lang.String,short) -> set
    void set(java.lang.String,com.volmit.gloss.volume.lang.collections.GList) -> set
    void set(java.lang.String,java.util.List) -> set
com.volmit.gloss.volume.core.Volume -> com.volmit.gloss.volume.core.Volume:
    3:3:void <init>() -> <init>
    7:8:void kick(java.lang.Throwable) -> kick
com.volmit.gloss.volume.lang.collections.ARR -> com.volmit.gloss.volume.lang.collections.ARR:
    8:8:void <init>() -> <init>
    19:19:java.lang.Object[] create(int) -> create
    31:31:int countUsed(java.lang.Object[]) -> countUsed
    43:53:int countFree(java.lang.Object[]) -> countFree
    67:89:void defrag(java.lang.Object[]) -> defrag
com.volmit.gloss.volume.lang.collections.Adapter -> com.volmit.gloss.volume.lang.collections.Adapter:
    java.lang.Object adapt(java.lang.Object) -> adapt
    java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.volume.lang.collections.Callback -> com.volmit.gloss.volume.lang.collections.Callback:
    java.lang.Object t -> t
    12:12:void <init>() -> <init>
    24:26:void run(java.lang.Object) -> run
    36:36:void run() -> run
    45:45:java.lang.Object get() -> get
com.volmit.gloss.volume.lang.collections.FinalBoolean -> com.volmit.gloss.volume.lang.collections.FinalBoolean:
    boolean i -> i
    18:21:void <init>(boolean) -> <init>
    30:30:boolean get() -> get
    41:42:void set(boolean) -> set
    46:47:void toggle() -> toggle
com.volmit.gloss.volume.lang.collections.FinalDouble -> com.volmit.gloss.volume.lang.collections.FinalDouble:
    double i -> i
    19:22:void <init>(double) -> <init>
    31:31:double get() -> get
    42:43:void set(double) -> set
    53:54:void add(double) -> add
    64:65:void sub(double) -> sub
com.volmit.gloss.volume.lang.collections.FinalFloat -> com.volmit.gloss.volume.lang.collections.FinalFloat:
    float i -> i
    19:22:void <init>(float) -> <init>
    31:31:float get() -> get
    42:43:void set(float) -> set
    53:54:void add(float) -> add
    64:65:void sub(float) -> sub
com.volmit.gloss.volume.lang.collections.FinalInteger -> com.volmit.gloss.volume.lang.collections.FinalInteger:
    int i -> i
    19:22:void <init>(int) -> <init>
    31:31:int get() -> get
    42:43:void set(int) -> set
    53:54:void add(int) -> add
    64:65:void sub(int) -> sub
com.volmit.gloss.volume.lang.collections.FinalLong -> com.volmit.gloss.volume.lang.collections.FinalLong:
    long i -> i
    19:22:void <init>(long) -> <init>
    31:31:long get() -> get
    42:43:void set(long) -> set
    53:54:void add(long) -> add
    64:65:void sub(long) -> sub
com.volmit.gloss.volume.lang.collections.FinalString -> com.volmit.gloss.volume.lang.collections.FinalString:
    java.lang.String string -> string
    19:22:void <init>(java.lang.String) -> <init>
    31:31:java.lang.String get() -> get
    42:43:void set(java.lang.String) -> set
com.volmit.gloss.volume.lang.collections.GAdapter -> com.volmit.gloss.volume.lang.collections.GAdapter:
    13:13:void <init>() -> <init>
    18:18:java.lang.Object adapt(java.lang.Object) -> adapt
    java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.volume.lang.collections.GBiset -> com.volmit.gloss.volume.lang.collections.GBiset:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> a
    java.lang.Object b -> b
    30:34:void <init>(java.lang.Object,java.lang.Object) -> <init>
    43:43:java.lang.Object getA() -> getA
    54:55:void setA(java.lang.Object) -> setA
    64:64:java.lang.Object getB() -> getB
    74:75:void setB(java.lang.Object) -> setB
com.volmit.gloss.volume.lang.collections.GList -> com.volmit.gloss.volume.lang.collections.GList:
    long serialVersionUID -> serialVersionUID
    28:29:void <init>() -> <init>
    33:40:com.volmit.gloss.volume.lang.collections.GList grepExplicit(int,int) -> grepExplicit
    45:52:com.volmit.gloss.volume.lang.collections.GList grepDistance(int,int) -> grepDistance
    57:57:java.lang.Object getAt(int) -> getAt
    62:62:java.lang.Object getAt(java.lang.Integer) -> getAt
    73:79:void <init>(java.util.Set) -> <init>
    89:95:void <init>(java.util.Collection) -> <init>
    105:111:void <init>(java.util.Iterator) -> <init>
    121:123:void <init>(java.lang.Object[]) -> <init>
    134:142:void <init>(java.util.List) -> <init>
    151:178:java.lang.Object mostCommon() -> mostCommon
    188:190:com.volmit.gloss.volume.lang.collections.GList shuffleCopy() -> shuffleCopy
    198:199:void shuffle() -> shuffle
    210:228:com.volmit.gloss.volume.lang.collections.GList split(int) -> split
    239:239:com.volmit.gloss.volume.lang.collections.GList split() -> split
    251:251:boolean hasIndex(int) -> hasIndex
    261:262:java.lang.Object pickRandom() -> pickRandom
    273:280:com.volmit.gloss.volume.lang.collections.GList stringList() -> stringList
    291:295:void forEach(com.volmit.gloss.volume.lang.collections.Callback) -> forEach
    304:304:int last() -> last
    318:323:int getIndexOrLast(int) -> getIndexOrLast
    339:339:com.volmit.gloss.volume.lang.collections.GList cropFrom(int) -> cropFrom
    355:355:com.volmit.gloss.volume.lang.collections.GList cropTo(int) -> cropTo
    372:382:com.volmit.gloss.volume.lang.collections.GList crop(int,int) -> crop
    393:397:com.volmit.gloss.volume.lang.collections.GList removeDuplicates() -> removeDuplicates
    408:412:void removeAll(java.lang.Object) -> removeAll
    416:416:com.volmit.gloss.volume.lang.collections.GSet toSet() -> toSet
    426:426:boolean hasDuplicates() -> hasDuplicates
    434:435:void sort() -> sort
    439:441:com.volmit.gloss.volume.lang.collections.GList sortCopy() -> sortCopy
    455:461:void push(java.lang.Object,int) -> push
    472:476:void add(java.lang.Object[]) -> add
    487:488:com.volmit.gloss.volume.lang.collections.GList qadd(java.lang.Object) -> qadd
    493:494:com.volmit.gloss.volume.lang.collections.GList qadd(java.lang.Object[]) -> qadd
    505:509:void add(java.util.List) -> add
    521:553:java.lang.String toString(java.lang.String) -> toString
    563:564:com.volmit.gloss.volume.lang.collections.GList reverse() -> reverse
    573:573:java.lang.String toString() -> toString
    579:579:com.volmit.gloss.volume.lang.collections.GList clone() -> clone
    589:596:com.volmit.gloss.volume.lang.collections.GList copy() -> copy
    608:609:com.volmit.gloss.volume.lang.collections.GList qdel(java.lang.Object) -> qdel
    619:626:java.lang.Object pop() -> pop
    637:638:void run(com.volmit.gloss.volume.lang.collections.Callback) -> run
    648:649:void runLast(com.volmit.gloss.volume.lang.collections.Callback) -> runLast
    658:665:com.volmit.gloss.volume.lang.collections.GList toStringList() -> toStringList
    677:681:void runAll(com.volmit.gloss.volume.lang.collections.Callback) -> runAll
    688:689:void removeLast() -> removeLast
    698:705:java.lang.Object popLast() -> popLast
    715:724:java.lang.Object popRandom() -> popRandom
    729:733:void fill(java.lang.Object,int) -> fill
    1:1:java.lang.Object clone() -> clone
com.volmit.gloss.volume.lang.collections.GListAdapter -> com.volmit.gloss.volume.lang.collections.GListAdapter:
    15:15:void <init>() -> <init>
    26:38:java.util.List adapt(java.util.List) -> adapt
    java.lang.Object onAdapt(java.lang.Object) -> onAdapt
com.volmit.gloss.volume.lang.collections.GMap -> com.volmit.gloss.volume.lang.collections.GMap:
    long serialVersionUID -> serialVersionUID
    13:14:void <init>() -> <init>
    18:24:void <init>(java.util.Map) -> <init>
    33:40:com.volmit.gloss.volume.lang.collections.GMap copy() -> copy
    54:55:com.volmit.gloss.volume.lang.collections.GMap qput(java.lang.Object,java.lang.Object) -> qput
    65:82:com.volmit.gloss.volume.lang.collections.GMap flip() -> flip
    88:95:java.lang.String toString() -> toString
    107:112:com.volmit.gloss.volume.lang.collections.GMap append(com.volmit.gloss.volume.lang.collections.GMap) -> append
    122:122:com.volmit.gloss.volume.lang.collections.GList k() -> k
    132:132:com.volmit.gloss.volume.lang.collections.GSet kset() -> kset
    142:142:com.volmit.gloss.volume.lang.collections.GList v() -> v
    152:152:com.volmit.gloss.volume.lang.collections.GSet vset() -> vset
    165:169:void putNVD(java.lang.Object,java.lang.Object) -> putNVD
    177:177:boolean contains(java.lang.Object) -> contains
    189:199:com.volmit.gloss.volume.lang.collections.GList get(com.volmit.gloss.volume.lang.collections.GList) -> get
    210:220:com.volmit.gloss.volume.lang.collections.GMap removeDuplicateValues() -> removeDuplicateValues
    234:243:void put(com.volmit.gloss.volume.lang.collections.GList,com.volmit.gloss.volume.lang.collections.GList) -> put
    252:268:com.volmit.gloss.volume.lang.collections.GList sortK() -> sortK
    278:294:com.volmit.gloss.volume.lang.collections.GList sortV() -> sortV
com.volmit.gloss.volume.lang.collections.GQuadraset -> com.volmit.gloss.volume.lang.collections.GQuadraset:
    java.lang.Object a -> a
    java.lang.Object b -> b
    java.lang.Object c -> c
    java.lang.Object d -> d
    12:18:void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    22:22:java.lang.Object getA() -> getA
    27:28:void setA(java.lang.Object) -> setA
    32:32:java.lang.Object getB() -> getB
    37:38:void setB(java.lang.Object) -> setB
    42:42:java.lang.Object getC() -> getC
    47:48:void setC(java.lang.Object) -> setC
    52:52:java.lang.Object getD() -> getD
    57:58:void setD(java.lang.Object) -> setD
com.volmit.gloss.volume.lang.collections.GSet -> com.volmit.gloss.volume.lang.collections.GSet:
    long serialVersionUID -> serialVersionUID
    13:14:void <init>() -> <init>
    18:19:void <init>(java.util.Collection) -> <init>
    23:24:void <init>(int,float) -> <init>
    28:29:void <init>(int) -> <init>
com.volmit.gloss.volume.lang.collections.GTriset -> com.volmit.gloss.volume.lang.collections.GTriset:
    long serialVersionUID -> serialVersionUID
    java.lang.Object a -> a
    java.lang.Object b -> b
    java.lang.Object c -> c
    14:19:void <init>(java.lang.Object,java.lang.Object,java.lang.Object) -> <init>
    23:23:java.lang.Object getA() -> getA
    28:29:void setA(java.lang.Object) -> setA
    33:33:java.lang.Object getB() -> getB
    38:39:void setB(java.lang.Object) -> setB
    43:43:java.lang.Object getC() -> getC
    48:49:void setC(java.lang.Object) -> setC
com.volmit.gloss.volume.lang.format.F -> com.volmit.gloss.volume.lang.format.F:
    java.text.NumberFormat NF -> NF
    java.text.DecimalFormat DF -> DF
    java.lang.String[] NAMES -> NAMES
    java.math.BigInteger THOUSAND -> THOUSAND
    java.util.NavigableMap MAP -> MAP
    25:36:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    40:57:java.lang.String capitalize(java.lang.String) -> capitalize
    62:69:java.lang.String capitalizeWords(java.lang.String) -> capitalizeWords
    74:74:java.lang.String wrap(java.lang.String,int) -> wrap
    79:79:java.lang.String wrapWords(java.lang.String,int) -> wrapWords
    84:84:java.lang.String wrap(java.lang.String,int,java.lang.String,boolean) -> wrap
    89:176:java.lang.String wrap(java.lang.String,int,java.lang.String,boolean,java.lang.String) -> wrap
    182:197:java.lang.String time(double,int) -> time
    202:222:java.lang.String timeLong(long,int) -> timeLong
    227:227:java.lang.String b(int) -> b
    232:232:java.lang.String b(long) -> b
    237:237:java.lang.String b(double) -> b
    242:259:java.lang.String b(java.math.BigInteger) -> b
    264:268:void instantiate() -> instantiate
    280:280:java.lang.String fileSize(long) -> fileSize
    293:293:java.lang.String memSize(long) -> memSize
    298:298:java.lang.String memSize(long,int) -> memSize
    311:312:java.lang.String stamp(long) -> stamp
    328:362:java.lang.String ofSize(long,int) -> ofSize
    368:395:java.lang.String ofSize(long,int,int) -> ofSize
    400:432:java.lang.String ofSizeGram(long,int,int) -> ofSizeGram
    446:451:java.lang.String trim(java.lang.String,int) -> trim
    464:484:java.lang.String cname(java.lang.String) -> cname
    498:510:java.lang.String repeat(java.lang.String,int) -> repeat
    522:529:java.lang.String mem(long) -> mem
    542:560:java.lang.String memx(long) -> memx
    574:575:java.lang.String f(long) -> f
    587:588:java.lang.String f(int) -> f
    602:611:java.lang.String f(double,int) -> f
    627:636:java.lang.String fd(double,int) -> fd
    650:659:java.lang.String f(float,int) -> f
    670:670:java.lang.String f(double) -> f
    681:681:java.lang.String f(float) -> f
    696:696:java.lang.String pc(double,int) -> pc
    711:711:java.lang.String pc(float,int) -> pc
    724:724:java.lang.String pc(double) -> pc
    737:737:java.lang.String pc(float) -> pc
    753:753:java.lang.String pc(int,int,int) -> pc
    767:767:java.lang.String pc(int,int) -> pc
    783:783:java.lang.String pc(long,long,int) -> pc
    797:797:java.lang.String pc(long,long) -> pc
    809:809:java.lang.String msSeconds(long) -> msSeconds
    823:823:java.lang.String msSeconds(long,int) -> msSeconds
    835:835:java.lang.String nsMs(long) -> nsMs
    849:849:java.lang.String nsMs(long,int) -> nsMs
    863:863:java.lang.String nsMsd(long,int) -> nsMsd
com.volmit.gloss.volume.lang.format.Flagger -> com.volmit.gloss.volume.lang.format.Flagger:
    java.lang.String prefix -> prefix
    java.lang.String split -> split
    java.lang.String[] args -> args
    9:14:void <init>(java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    18:19:void <init>(java.lang.String[]) -> <init>
    23:36:boolean hasFlag(java.lang.String) -> hasFlag
    41:49:boolean hasContent(java.lang.String) -> hasContent
    54:62:java.lang.String getContent(java.lang.String) -> getContent
com.volmit.gloss.volume.lang.json.HTTP -> com.volmit.gloss.volume.lang.json.HTTP:
    java.lang.String CRLF -> CRLF
    36:36:void <init>() -> <init>
    94:128:com.volmit.gloss.volume.lang.json.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    163:199:java.lang.String toString(com.volmit.gloss.volume.lang.json.JSONObject) -> toString
com.volmit.gloss.volume.lang.json.HTTPTokener -> com.volmit.gloss.volume.lang.json.HTTPTokener:
    46:47:void <init>(java.lang.String) -> <init>
    59:88:java.lang.String nextToken() -> nextToken
com.volmit.gloss.volume.lang.json.JSONArray -> com.volmit.gloss.volume.lang.json.JSONArray:
    java.util.ArrayList myArrayList -> myArrayList
    94:97:void <init>() -> <init>
    109:144:void <init>(com.volmit.gloss.volume.lang.json.JSONTokener) -> <init>
    158:159:void <init>(java.lang.String) -> <init>
    167:178:void <init>(java.util.Collection) -> <init>
    188:200:void <init>(java.lang.Object) -> <init>
    205:205:java.util.Iterator iterator() -> iterator
    219:224:java.lang.Object get(int) -> get
    240:248:boolean getBoolean(int) -> getBoolean
    263:269:double getDouble(int) -> getDouble
    287:295:java.lang.Enum getEnum(java.lang.Class,int) -> getEnum
    310:316:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    332:338:java.math.BigInteger getBigInteger(int) -> getBigInteger
    353:359:int getInt(int) -> getInt
    375:380:com.volmit.gloss.volume.lang.json.JSONArray getJSONArray(int) -> getJSONArray
    395:400:com.volmit.gloss.volume.lang.json.JSONObject getJSONObject(int) -> getJSONObject
    415:421:long getLong(int) -> getLong
    436:441:java.lang.String getString(int) -> getString
    453:453:boolean isNull(int) -> isNull
    469:480:java.lang.String join(java.lang.String) -> join
    490:490:int length() -> length
    502:502:java.lang.Object opt(int) -> opt
    516:516:boolean optBoolean(int) -> optBoolean
    534:537:boolean optBoolean(int,boolean) -> optBoolean
    552:552:double optDouble(int) -> optDouble
    570:573:double optDouble(int,double) -> optDouble
    588:588:int optInt(int) -> optInt
    606:609:int optInt(int,int) -> optInt
    624:624:java.lang.Enum optEnum(java.lang.Class,int) -> optEnum
    643:665:java.lang.Enum optEnum(java.lang.Class,int,java.lang.Enum) -> optEnum
    684:687:java.math.BigInteger optBigInteger(int,java.math.BigInteger) -> optBigInteger
    706:709:java.math.BigDecimal optBigDecimal(int,java.math.BigDecimal) -> optBigDecimal
    723:724:com.volmit.gloss.volume.lang.json.JSONArray optJSONArray(int) -> optJSONArray
    738:739:com.volmit.gloss.volume.lang.json.JSONObject optJSONObject(int) -> optJSONObject
    753:753:long optLong(int) -> optLong
    771:774:long optLong(int,long) -> optLong
    789:789:java.lang.String optString(int) -> optString
    804:805:java.lang.String optString(int,java.lang.String) -> optString
    817:818:com.volmit.gloss.volume.lang.json.JSONArray put(boolean) -> put
    831:832:com.volmit.gloss.volume.lang.json.JSONArray put(java.util.Collection) -> put
    846:849:com.volmit.gloss.volume.lang.json.JSONArray put(double) -> put
    861:862:com.volmit.gloss.volume.lang.json.JSONArray put(int) -> put
    874:875:com.volmit.gloss.volume.lang.json.JSONArray put(long) -> put
    888:889:com.volmit.gloss.volume.lang.json.JSONArray put(java.util.Map) -> put
    903:904:com.volmit.gloss.volume.lang.json.JSONArray put(java.lang.Object) -> put
    922:923:com.volmit.gloss.volume.lang.json.JSONArray put(int,boolean) -> put
    940:941:com.volmit.gloss.volume.lang.json.JSONArray put(int,java.util.Collection) -> put
    959:960:com.volmit.gloss.volume.lang.json.JSONArray put(int,double) -> put
    978:979:com.volmit.gloss.volume.lang.json.JSONArray put(int,int) -> put
    997:998:com.volmit.gloss.volume.lang.json.JSONArray put(int,long) -> put
    1016:1017:com.volmit.gloss.volume.lang.json.JSONArray put(int,java.util.Map) -> put
    1038:1054:com.volmit.gloss.volume.lang.json.JSONArray put(int,java.lang.Object) -> put
    1067:1067:java.lang.Object remove(int) -> remove
    1080:1110:boolean similar(java.lang.Object) -> similar
    1127:1136:com.volmit.gloss.volume.lang.json.JSONObject toJSONObject(com.volmit.gloss.volume.lang.json.JSONArray) -> toJSONObject
    1155:1158:java.lang.String toString() -> toString
    1176:1179:java.lang.String toString(int) -> toString
    1194:1194:java.io.Writer write(java.io.Writer) -> write
    1214:1249:java.io.Writer write(java.io.Writer,int,int) -> write
com.volmit.gloss.volume.lang.json.JSONException -> com.volmit.gloss.volume.lang.json.JSONException:
    long serialVersionUID -> serialVersionUID
    java.lang.Throwable cause -> cause
    23:24:void <init>(java.lang.String) -> <init>
    34:36:void <init>(java.lang.Throwable) -> <init>
    48:48:java.lang.Throwable getCause() -> getCause
com.volmit.gloss.volume.lang.json.JSONML -> com.volmit.gloss.volume.lang.json.JSONML:
    38:38:void <init>() -> <init>
    58:280:java.lang.Object parse(com.volmit.gloss.volume.lang.json.XMLTokener,boolean,com.volmit.gloss.volume.lang.json.JSONArray) -> parse
    302:302:com.volmit.gloss.volume.lang.json.JSONArray toJSONArray(java.lang.String) -> toJSONArray
    321:321:com.volmit.gloss.volume.lang.json.JSONArray toJSONArray(com.volmit.gloss.volume.lang.json.XMLTokener) -> toJSONArray
    341:341:com.volmit.gloss.volume.lang.json.JSONObject toJSONObject(com.volmit.gloss.volume.lang.json.XMLTokener) -> toJSONObject
    361:361:com.volmit.gloss.volume.lang.json.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    380:457:java.lang.String toString(com.volmit.gloss.volume.lang.json.JSONArray) -> toString
    473:553:java.lang.String toString(com.volmit.gloss.volume.lang.json.JSONObject) -> toString
com.volmit.gloss.volume.lang.json.JSONObject -> com.volmit.gloss.volume.lang.json.JSONObject:
    java.util.Map map -> map
    java.lang.Object NULL -> NULL
    154:154:void <clinit>() -> <clinit>
    159:162:void <init>() -> <init>
    180:190:void <init>(com.volmit.gloss.volume.lang.json.JSONObject,java.lang.String[]) -> <init>
    203:249:void <init>(com.volmit.gloss.volume.lang.json.JSONTokener) -> <init>
    262:278:void <init>(java.util.Map) -> <init>
    303:305:void <init>(java.lang.Object) -> <init>
    323:335:void <init>(java.lang.Object,java.lang.String[]) -> <init>
    351:352:void <init>(java.lang.String) -> <init>
    366:401:void <init>(java.lang.String,java.util.Locale) -> <init>
    424:436:com.volmit.gloss.volume.lang.json.JSONObject accumulate(java.lang.String,java.lang.Object) -> accumulate
    456:468:com.volmit.gloss.volume.lang.json.JSONObject append(java.lang.String,java.lang.Object) -> append
    481:500:java.lang.String doubleToString(double) -> doubleToString
    514:523:java.lang.Object get(java.lang.String) -> get
    540:548:java.lang.Enum getEnum(java.lang.Class,java.lang.String) -> getEnum
    563:571:boolean getBoolean(java.lang.String) -> getBoolean
    586:592:java.math.BigInteger getBigInteger(java.lang.String) -> getBigInteger
    608:614:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    630:636:double getDouble(java.lang.String) -> getDouble
    652:658:int getInt(java.lang.String) -> getInt
    673:678:com.volmit.gloss.volume.lang.json.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    692:697:com.volmit.gloss.volume.lang.json.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    712:718:long getLong(java.lang.String) -> getLong
    729:742:java.lang.String[] getNames(com.volmit.gloss.volume.lang.json.JSONObject) -> getNames
    752:768:java.lang.String[] getNames(java.lang.Object) -> getNames
    782:787:java.lang.String getString(java.lang.String) -> getString
    799:799:boolean has(java.lang.String) -> has
    816:842:com.volmit.gloss.volume.lang.json.JSONObject increment(java.lang.String) -> increment
    856:856:boolean isNull(java.lang.String) -> isNull
    866:866:java.util.Iterator keys() -> keys
    876:876:java.util.Set keySet() -> keySet
    886:886:int length() -> length
    898:904:com.volmit.gloss.volume.lang.json.JSONArray names() -> names
    918:938:java.lang.String numberToString(java.lang.Number) -> numberToString
    950:950:java.lang.Object opt(java.lang.String) -> opt
    964:964:java.lang.Enum optEnum(java.lang.Class,java.lang.String) -> optEnum
    983:1005:java.lang.Enum optEnum(java.lang.Class,java.lang.String,java.lang.Enum) -> optEnum
    1019:1019:boolean optBoolean(java.lang.String) -> optBoolean
    1037:1040:boolean optBoolean(java.lang.String,boolean) -> optBoolean
    1055:1055:double optDouble(java.lang.String) -> optDouble
    1073:1076:java.math.BigInteger optBigInteger(java.lang.String,java.math.BigInteger) -> optBigInteger
    1095:1098:java.math.BigDecimal optBigDecimal(java.lang.String,java.math.BigDecimal) -> optBigDecimal
    1117:1120:double optDouble(java.lang.String,double) -> optDouble
    1135:1135:int optInt(java.lang.String) -> optInt
    1153:1156:int optInt(java.lang.String,int) -> optInt
    1170:1171:com.volmit.gloss.volume.lang.json.JSONArray optJSONArray(java.lang.String) -> optJSONArray
    1184:1185:com.volmit.gloss.volume.lang.json.JSONObject optJSONObject(java.lang.String) -> optJSONObject
    1199:1199:long optLong(java.lang.String) -> optLong
    1217:1220:long optLong(java.lang.String,long) -> optLong
    1235:1235:java.lang.String optString(java.lang.String) -> optString
    1250:1251:java.lang.String optString(java.lang.String,java.lang.String) -> optString
    1256:1306:void populateMap(java.lang.Object) -> populateMap
    1321:1322:com.volmit.gloss.volume.lang.json.JSONObject put(java.lang.String,boolean) -> put
    1338:1339:com.volmit.gloss.volume.lang.json.JSONObject put(java.lang.String,java.util.Collection) -> put
    1355:1356:com.volmit.gloss.volume.lang.json.JSONObject put(java.lang.String,double) -> put
    1372:1373:com.volmit.gloss.volume.lang.json.JSONObject put(java.lang.String,int) -> put
    1389:1390:com.volmit.gloss.volume.lang.json.JSONObject put(java.lang.String,long) -> put
    1406:1407:com.volmit.gloss.volume.lang.json.JSONObject put(java.lang.String,java.util.Map) -> put
    1426:1438:com.volmit.gloss.volume.lang.json.JSONObject put(java.lang.String,java.lang.Object) -> put
    1456:1464:com.volmit.gloss.volume.lang.json.JSONObject putOnce(java.lang.String,java.lang.Object) -> putOnce
    1483:1487:com.volmit.gloss.volume.lang.json.JSONObject putOpt(java.lang.String,java.lang.Object) -> putOpt
    1502:1511:java.lang.String quote(java.lang.String) -> quote
    1518:1578:java.io.Writer quote(java.lang.String,java.io.Writer) -> quote
    1591:1591:java.lang.Object remove(java.lang.String) -> remove
    1606:1641:boolean similar(java.lang.Object) -> similar
    1656:1708:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    1721:1737:void testValidity(java.lang.Object) -> testValidity
    1752:1761:com.volmit.gloss.volume.lang.json.JSONArray toJSONArray(com.volmit.gloss.volume.lang.json.JSONArray) -> toJSONArray
    1780:1783:java.lang.String toString() -> toString
    1803:1806:java.lang.String toString(int) -> toString
    1836:1880:java.lang.String valueToString(java.lang.Object) -> valueToString
    1899:1933:java.lang.Object wrap(java.lang.Object) -> wrap
    1948:1948:java.io.Writer write(java.io.Writer) -> write
    1953:1996:java.io.Writer writeValue(java.io.Writer,java.lang.Object,int,int) -> writeValue
    2001:2005:void indent(java.io.Writer,int) -> indent
    2020:2069:java.io.Writer write(java.io.Writer,int,int) -> write
com.volmit.gloss.volume.lang.json.JSONObject$Null -> com.volmit.gloss.volume.lang.json.JSONObject$Null:
    103:103:void <init>() -> <init>
    115:115:java.lang.Object clone() -> clone
    129:129:boolean equals(java.lang.Object) -> equals
    139:139:java.lang.String toString() -> toString
    103:103:void <init>(com.volmit.gloss.volume.lang.json.JSONObject$Null) -> <init>
com.volmit.gloss.volume.lang.json.JSONString -> com.volmit.gloss.volume.lang.json.JSONString:
    java.lang.String toJSONString() -> toJSONString
com.volmit.gloss.volume.lang.json.JSONStringer -> com.volmit.gloss.volume.lang.json.JSONStringer:
    70:71:void <init>() -> <init>
    84:84:java.lang.String toString() -> toString
com.volmit.gloss.volume.lang.json.JSONTokener -> com.volmit.gloss.volume.lang.json.JSONTokener:
    long character -> character
    boolean eof -> eof
    long index -> index
    long line -> line
    char previous -> previous
    java.io.Reader reader -> reader
    boolean usePrevious -> usePrevious
    60:69:void <init>(java.io.Reader) -> <init>
    79:80:void <init>(java.io.InputStream) -> <init>
    90:91:void <init>(java.lang.String) -> <init>
    100:108:void back() -> back
    120:132:int dehexchar(char) -> dehexchar
    137:137:boolean end() -> end
    148:154:boolean more() -> more
    165:199:char next() -> next
    214:219:char next(char) -> next
    234:251:java.lang.String next(int) -> next
    264:267:char nextClean() -> nextClean
    288:335:java.lang.String nextString(char) -> nextString
    350:362:java.lang.String nextTo(char) -> nextTo
    377:389:java.lang.String nextTo(java.lang.String) -> nextTo
    404:442:java.lang.Object nextValue() -> nextValue
    459:480:char skipTo(char) -> skipTo
    492:492:com.volmit.gloss.volume.lang.json.JSONException syntaxError(java.lang.String) -> syntaxError
    502:502:java.lang.String toString() -> toString
com.volmit.gloss.volume.lang.json.JSONWriter -> com.volmit.gloss.volume.lang.json.JSONWriter:
    int maxdepth -> maxdepth
    boolean comma -> comma
    char mode -> mode
    com.volmit.gloss.volume.lang.json.JSONObject[] stack -> stack
    int top -> top
    java.io.Writer writer -> writer
    98:105:void <init>(java.io.Writer) -> <init>
    118:142:com.volmit.gloss.volume.lang.json.JSONWriter append(java.lang.String) -> append
    158:165:com.volmit.gloss.volume.lang.json.JSONWriter array() -> array
    181:194:com.volmit.gloss.volume.lang.json.JSONWriter end(char,char) -> end
    207:207:com.volmit.gloss.volume.lang.json.JSONWriter endArray() -> endArray
    220:220:com.volmit.gloss.volume.lang.json.JSONWriter endObject() -> endObject
    236:259:com.volmit.gloss.volume.lang.json.JSONWriter key(java.lang.String) -> key
    275:286:com.volmit.gloss.volume.lang.json.JSONWriter object() -> object
    300:311:void pop(char) -> pop
    323:330:void push(com.volmit.gloss.volume.lang.json.JSONObject) -> push
    343:343:com.volmit.gloss.volume.lang.json.JSONWriter value(boolean) -> value
    357:357:com.volmit.gloss.volume.lang.json.JSONWriter value(double) -> value
    370:370:com.volmit.gloss.volume.lang.json.JSONWriter value(long) -> value
    386:386:com.volmit.gloss.volume.lang.json.JSONWriter value(java.lang.Object) -> value
com.volmit.gloss.volume.lang.json.XML -> com.volmit.gloss.volume.lang.json.XML:
    java.lang.Character AMP -> AMP
    java.lang.Character APOS -> APOS
    java.lang.Character BANG -> BANG
    java.lang.Character EQ -> EQ
    java.lang.Character GT -> GT
    java.lang.Character LT -> LT
    java.lang.Character QUEST -> QUEST
    java.lang.Character QUOT -> QUOT
    java.lang.Character SLASH -> SLASH
    41:65:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    83:108:java.lang.String escape(java.lang.String) -> escape
    121:133:void noSpace(java.lang.String) -> noSpace
    151:340:boolean parse(com.volmit.gloss.volume.lang.json.XMLTokener,com.volmit.gloss.volume.lang.json.JSONObject,java.lang.String) -> parse
    359:400:java.lang.Object stringToValue(java.lang.String) -> stringToValue
    421:427:com.volmit.gloss.volume.lang.json.JSONObject toJSONObject(java.lang.String) -> toJSONObject
    440:440:java.lang.String toString(java.lang.Object) -> toString
    455:580:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
com.volmit.gloss.volume.lang.json.XMLTokener -> com.volmit.gloss.volume.lang.json.XMLTokener:
    java.util.HashMap entity -> entity
    46:52:void <clinit>() -> <clinit>
    62:63:void <init>(java.lang.String) -> <init>
    76:89:java.lang.String nextCDATA() -> nextCDATA
    109:134:java.lang.Object nextContent() -> nextContent
    150:167:java.lang.Object nextEntity(char) -> nextEntity
    187:240:java.lang.Object nextMeta() -> nextMeta
    262:335:java.lang.Object nextToken() -> nextToken
    355:421:boolean skipPast(java.lang.String) -> skipPast
com.volmit.gloss.volume.lang.queue.Operation -> com.volmit.gloss.volume.lang.queue.Operation:
    int getPriority() -> getPriority
    java.lang.String id() -> id
com.volmit.gloss.volume.lang.queue.Pool -> com.volmit.gloss.volume.lang.queue.Pool:
    void shove(java.lang.Runnable) -> shove
    void shutDown() -> shutDown
    void shutDownNow() -> shutDownNow
com.volmit.gloss.volume.lang.queue.PressurePool -> com.volmit.gloss.volume.lang.queue.PressurePool:
    java.util.concurrent.ExecutorService svc -> svc
    10:13:void <init>(int) -> <init>
    18:19:void shove(java.lang.Runnable) -> shove
    24:25:void shutDown() -> shutDown
    30:31:void shutDownNow() -> shutDownNow
com.volmit.gloss.volume.math.AlignedPoint -> com.volmit.gloss.volume.math.AlignedPoint:
    double x -> x
    double y -> y
    double z -> z
    9:14:void <init>(double,double,double) -> <init>
    18:18:double getX() -> getX
    23:24:void setX(double) -> setX
    28:28:double getY() -> getY
    33:34:void setY(double) -> setY
    38:38:double getZ() -> getZ
    43:44:void setZ(double) -> setZ
com.volmit.gloss.volume.math.Average -> com.volmit.gloss.volume.math.Average:
    double[] values -> values
    double average -> average
    boolean dirty -> dirty
    9:15:void <init>(int) -> <init>
    19:21:void put(double) -> put
    25:31:double getAverage() -> getAverage
    36:45:void calculateAverage() -> calculateAverage
com.volmit.gloss.volume.math.AxisAlignedBB -> com.volmit.gloss.volume.math.AxisAlignedBB:
    double xa -> xa
    double xb -> xb
    double ya -> ya
    double yb -> yb
    double za -> za
    double zb -> zb
    12:20:void <init>(double,double,double,double,double,double) -> <init>
    24:25:void <init>(com.volmit.gloss.volume.math.AlignedPoint,com.volmit.gloss.volume.math.AlignedPoint) -> <init>
    29:29:boolean contains(com.volmit.gloss.volume.math.AlignedPoint) -> contains
    34:34:boolean intersects(com.volmit.gloss.volume.math.AxisAlignedBB) -> intersects
com.volmit.gloss.volume.math.CDou -> com.volmit.gloss.volume.math.CDou:
    double number -> number
    double max -> max
    8:12:void <init>(double) -> <init>
    16:18:com.volmit.gloss.volume.math.CDou set(double) -> set
    23:25:com.volmit.gloss.volume.math.CDou add(double) -> add
    30:32:com.volmit.gloss.volume.math.CDou sub(double) -> sub
    37:37:double get() -> get
    42:48:void circ() -> circ
com.volmit.gloss.volume.math.CNum -> com.volmit.gloss.volume.math.CNum:
    int number -> number
    int max -> max
    8:12:void <init>(int) -> <init>
    16:18:com.volmit.gloss.volume.math.CNum set(int) -> set
    23:25:com.volmit.gloss.volume.math.CNum add(int) -> add
    30:32:com.volmit.gloss.volume.math.CNum sub(int) -> sub
    37:37:int get() -> get
    42:48:void circ() -> circ
com.volmit.gloss.volume.math.DoubleArrayUtils -> com.volmit.gloss.volume.math.DoubleArrayUtils:
    4:4:void <init>() -> <init>
    8:14:void shiftRight(double[],double) -> shiftRight
    18:20:void wrapRight(double[]) -> wrapRight
    24:28:void fill(double[],double) -> fill
com.volmit.gloss.volume.math.M -> com.volmit.gloss.volume.math.M:
    int precision -> precision
    int modulus -> modulus
    float[] sin -> sin
    16:330:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    20:20:double clip(double,double,double) -> clip
    32:37:boolean r(java.lang.Double) -> r
    52:52:double tps(long,int) -> tps
    64:64:double ticksFromNS(long) -> ticksFromNS
    76:102:java.lang.String toRoman(int) -> toRoman
    116:128:java.lang.String repeat(java.lang.String,int) -> repeat
    133:133:int rand(int,int) -> rand
    145:217:int fromRoman(java.lang.String) -> fromRoman
    227:227:long ns() -> ns
    237:237:long ms() -> ms
    249:249:float sin(float) -> sin
    261:261:float cos(float) -> cos
    273:283:int max(int[]) -> max
    295:305:int min(int[]) -> min
    321:321:boolean within(int,int,int) -> within
    334:334:float sinLookup(int) -> sinLookup
com.volmit.gloss.volume.math.Profiler -> com.volmit.gloss.volume.math.Profiler:
    long nanos -> nanos
    long startNano -> startNano
    long millis -> millis
    long startMillis -> startMillis
    double time -> time
    boolean profiling -> profiling
    16:19:com.volmit.gloss.volume.math.Profiler start() -> start
    22:26:void <init>() -> <init>
    30:33:void begin() -> begin
    37:47:void end() -> end
    51:57:void reset() -> reset
    61:81:java.lang.String getTime(int) -> getTime
    86:86:double getTicks() -> getTicks
    91:91:double getSeconds() -> getSeconds
    96:96:double getMinutes() -> getMinutes
    101:101:double getHours() -> getHours
    106:106:double getMilliseconds() -> getMilliseconds
    111:111:long getNanoseconds() -> getNanoseconds
    116:116:long getNanos() -> getNanos
    121:121:long getStartNano() -> getStartNano
    126:126:long getMillis() -> getMillis
    131:131:long getStartMillis() -> getStartMillis
    136:136:double getTime() -> getTime
    141:141:boolean isProfiling() -> isProfiling
com.volmit.gloss.volume.math.noise.NoiseGenerator -> com.volmit.gloss.volume.math.noise.NoiseGenerator:
    int[] perm -> perm
    double offsetX -> offsetX
    double offsetY -> offsetY
    double offsetZ -> offsetZ
    6:8:void <init>() -> <init>
    22:22:int floor(double) -> floor
    27:27:double fade(double) -> fade
    32:32:double lerp(double,double,double) -> lerp
    37:40:double grad(int,double,double,double) -> grad
    52:52:double noise(double) -> noise
    66:66:double noise(double,double) -> noise
    double noise(double,double,double) -> noise
    98:98:double noise(double,int,double,double) -> noise
    119:119:double noise(double,int,double,double,boolean) -> noise
    140:140:double noise(double,double,int,double,double) -> noise
    163:163:double noise(double,double,int,double,double,boolean) -> noise
    186:186:double noise(double,double,double,int,double,double) -> noise
    211:229:double noise(double,double,double,int,double,double,boolean) -> noise
com.volmit.gloss.volume.math.noise.OctaveGenerator -> com.volmit.gloss.volume.math.noise.OctaveGenerator:
    com.volmit.gloss.volume.math.noise.NoiseGenerator[] octaves -> octaves
    double xScale -> xScale
    double yScale -> yScale
    double zScale -> zScale
    9:16:void <init>(com.volmit.gloss.volume.math.noise.NoiseGenerator[]) -> <init>
    28:31:void setScale(double) -> setScale
    40:40:double getXScale() -> getXScale
    51:52:void setXScale(double) -> setXScale
    61:61:double getYScale() -> getYScale
    72:73:void setYScale(double) -> setYScale
    82:82:double getZScale() -> getZScale
    93:94:void setZScale(double) -> setZScale
    103:103:com.volmit.gloss.volume.math.noise.NoiseGenerator[] getOctaves() -> getOctaves
    120:120:double noise(double,double,double) -> noise
    139:139:double noise(double,double,double,boolean) -> noise
    158:158:double noise(double,double,double,double) -> noise
    179:179:double noise(double,double,double,double,boolean) -> noise
    200:200:double noise(double,double,double,double,double) -> noise
    223:245:double noise(double,double,double,double,double,boolean) -> noise
com.volmit.gloss.volume.math.noise.PerlinNoiseGenerator -> com.volmit.gloss.volume.math.noise.PerlinNoiseGenerator:
    int[][] grad3 -> grad3
    com.volmit.gloss.volume.math.noise.PerlinNoiseGenerator instance -> instance
    13:14:void <clinit>() -> <clinit>
    16:24:void <init>() -> <init>
    34:35:void <init>(long) -> <init>
    43:63:void <init>(java.util.Random) -> <init>
    75:75:double getNoise(double) -> getNoise
    90:90:double getNoise(double,double) -> getNoise
    107:107:double getNoise(double,double,double) -> getNoise
    117:117:com.volmit.gloss.volume.math.noise.PerlinNoiseGenerator getInstance() -> getInstance
    123:154:double noise(double,double,double) -> noise
    173:173:double getNoise(double,int,double,double) -> getNoise
    194:194:double getNoise(double,double,int,double,double) -> getNoise
    217:217:double getNoise(double,double,double,int,double,double) -> getNoise
com.volmit.gloss.volume.math.noise.PerlinOctaveGenerator -> com.volmit.gloss.volume.math.noise.PerlinOctaveGenerator:
    21:22:void <init>(long,int) -> <init>
    34:35:void <init>(java.util.Random,int) -> <init>
    39:46:com.volmit.gloss.volume.math.noise.NoiseGenerator[] createOctaves(java.util.Random,int) -> createOctaves
com.volmit.gloss.volume.math.noise.SimplexNoiseGenerator -> com.volmit.gloss.volume.math.noise.SimplexNoiseGenerator:
    double SQRT_3 -> SQRT_3
    double SQRT_5 -> SQRT_5
    double F2 -> F2
    double G2 -> G2
    double G22 -> G22
    double F3 -> F3
    double G3 -> G3
    double F4 -> F4
    double G4 -> G4
    double G42 -> G42
    double G43 -> G43
    double G44 -> G44
    int[][] grad4 -> grad4
    int[][] simplex -> simplex
    double offsetW -> offsetW
    com.volmit.gloss.volume.math.noise.SimplexNoiseGenerator instance -> instance
    15:30:void <clinit>() -> <clinit>
    34:35:void <init>() -> <init>
    45:46:void <init>(long) -> <init>
    56:58:void <init>(java.util.Random) -> <init>
    62:62:double dot(int[],double,double) -> dot
    67:67:double dot(int[],double,double,double) -> dot
    72:72:double dot(int[],double,double,double,double) -> dot
    85:85:double getNoise(double) -> getNoise
    100:100:double getNoise(double,double) -> getNoise
    117:117:double getNoise(double,double,double) -> getNoise
    136:136:double getNoise(double,double,double,double) -> getNoise
    142:297:double noise(double,double,double) -> noise
    303:385:double noise(double,double) -> noise
    404:563:double noise(double,double,double,double) -> noise
    573:573:com.volmit.gloss.volume.math.noise.SimplexNoiseGenerator getInstance() -> getInstance
com.volmit.gloss.volume.math.noise.SimplexOctaveGenerator -> com.volmit.gloss.volume.math.noise.SimplexOctaveGenerator:
    double wScale -> wScale
    22:23:void <init>(long,int) -> <init>
    10:36:void <init>(java.util.Random,int) -> <init>
    41:43:void setScale(double) -> setScale
    52:52:double getWScale() -> getWScale
    63:64:void setWScale(double) -> setWScale
    86:86:double noise(double,double,double,double,double,double) -> noise
    111:134:double noise(double,double,double,double,double,double,boolean) -> noise
    139:146:com.volmit.gloss.volume.math.noise.NoiseGenerator[] createOctaves(java.util.Random,int) -> createOctaves
com.volmit.gloss.volume.reflect.ClassUtil -> com.volmit.gloss.volume.reflect.ClassUtil:
    com.volmit.gloss.volume.lang.collections.GMap boxes -> boxes
    com.volmit.gloss.volume.lang.collections.GMap unboxes -> unboxes
    87:104:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    24:29:java.lang.Class toWrapper(java.lang.Class) -> toWrapper
    41:46:java.lang.Class toPrimative(java.lang.Class) -> toPrimative
    58:58:boolean isWrapperOrPrimative(java.lang.Class) -> isWrapperOrPrimative
    70:70:boolean isPrimative(java.lang.Class) -> isPrimative
    82:82:boolean isWrapper(java.lang.Class) -> isWrapper
    108:118:java.lang.Class flip(java.lang.Class) -> flip
com.volmit.gloss.volume.reflect.IClassTweaker -> com.volmit.gloss.volume.reflect.IClassTweaker:
    byte[] transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[]) -> transform
com.volmit.gloss.volume.reflect.Main -> com.volmit.gloss.volume.reflect.Main:
    3:3:void <init>() -> <init>
    8:8:void main(java.lang.String[]) -> main
com.volmit.gloss.volume.reflect.V -> com.volmit.gloss.volume.reflect.V:
    java.lang.Object o -> o
    boolean local -> local
    12:16:void <init>(java.lang.Class,java.lang.Object[]) -> <init>
    18:22:void <init>(java.lang.Object) -> <init>
    26:28:void <init>(java.lang.Object,boolean) -> <init>
    34:42:java.lang.annotation.Annotation get(java.lang.Class) -> get
    49:57:java.lang.annotation.Annotation get(java.lang.Class,java.lang.String,java.lang.Class[]) -> get
    64:72:java.lang.annotation.Annotation get(java.lang.Class,java.lang.String) -> get
    80:88:java.lang.Object get(java.lang.String) -> get
    93:110:java.lang.Object invoke(java.lang.String,java.lang.Object[]) -> invoke
    117:124:void set(java.lang.String,java.lang.Object) -> set
com.volmit.gloss.volume.reflect.Violator -> com.volmit.gloss.volume.reflect.Violator:
    java.util.TreeMap nodes -> nodes
    13:13:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    17:68:java.lang.String id(java.lang.Object,java.lang.Object) -> id
    73:74:void p(java.lang.String,java.lang.Object) -> p
    78:78:boolean h(java.lang.String) -> h
    83:83:java.lang.Object g(java.lang.String) -> g
    88:104:java.lang.reflect.Constructor getConstructor(java.lang.Class,java.lang.Class[]) -> getConstructor
    109:116:java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    121:128:java.lang.reflect.Field getDeclaredField(java.lang.Class,java.lang.String) -> getDeclaredField
    133:151:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    157:175:java.lang.Object construct(java.lang.Class,java.lang.Object[]) -> construct
    180:198:java.lang.reflect.Method getDeclaredMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getDeclaredMethod
    204:210:java.lang.annotation.Annotation getAnnotation(java.lang.Class,java.lang.Class) -> getAnnotation
    216:222:java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.Class,java.lang.Class) -> getDeclaredAnnotation
    228:234:java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Field,java.lang.Class) -> getAnnotation
    240:246:java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.reflect.Field,java.lang.Class) -> getDeclaredAnnotation
    252:258:java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Method,java.lang.Class) -> getAnnotation
    264:272:java.lang.annotation.Annotation getDeclaredAnnotation(java.lang.reflect.Method,java.lang.Class) -> getDeclaredAnnotation
com.volmit.volmume.lang.sched.ECON -> com.volume.gloss.src.ctgi:
    boolean run() -> AOcL
com.volmit.volmume.lang.sched.EF -> com.volume.gloss.src.iSuW:
    void run(java.lang.Object) -> run
com.volmit.volmume.lang.sched.EOP -> com.volume.gloss.src.Bchh:
    void run() -> run
com.volmit.volmume.lang.sched.OP -> com.volume.gloss.src.XBGf:
    com.volmit.gloss.volume.lang.collections.GList ops -> MRnO
    12:15:void <init>() -> <init>
    19:25:void run(java.util.concurrent.ExecutorService) -> kHrl
    29:64:void execute(int,java.util.concurrent.ExecutorService) -> eHBj
    68:69:com.volmit.volmume.lang.sched.OP then(com.volmit.volmume.lang.sched.EOP) -> eHBj
    74:80:com.volmit.volmume.lang.sched.OP and(com.volmit.volmume.lang.sched.EOP) -> kHrl
    86:95:com.volmit.volmume.lang.sched.OP itr(com.volmit.volmume.lang.sched.RTV,com.volmit.volmume.lang.sched.EF) -> eHBj
    101:121:com.volmit.volmume.lang.sched.OP itrp(com.volmit.volmume.lang.sched.RTV,com.volmit.volmume.lang.sched.EF) -> kHrl
    33:33:void lambda$0(com.volmit.volmume.lang.sched.EOP) -> DYEw
    87:87:void lambda$1(java.lang.Iterable[],com.volmit.volmume.lang.sched.RTV) -> eHBj
    89:93:void lambda$2(java.lang.Iterable[],com.volmit.volmume.lang.sched.EF) -> eHBj
    102:102:void lambda$4(java.lang.Iterable[],com.volmit.volmume.lang.sched.RTV) -> kHrl
    104:119:void lambda$5(java.lang.Iterable[],com.volmit.volmume.lang.sched.EF) -> kHrl
    91:91:void lambda$3(com.volmit.volmume.lang.sched.EF,java.lang.Object) -> eHBj
    110:110:void lambda$6(com.volmit.volmume.lang.sched.EF,java.lang.Object) -> kHrl
    116:116:void lambda$7(com.volmit.volmume.lang.sched.EF,java.lang.Object) -> DYEw
com.volmit.volmume.lang.sched.Pools -> com.volume.gloss.src.xrHJ:
    9:9:void <init>() -> <init>
    13:29:java.util.concurrent.ExecutorService newForkJoinPool(int,java.lang.String) -> eHBj
com.volmit.volmume.lang.sched.Pools$1 -> com.volume.gloss.src.xrHJ$1:
    com.volmit.volmume.lang.sched.Pools this$0 -> DHTU
    java.lang.String val$prefix -> qKTk
    1:13:void <init>(com.volmit.volmume.lang.sched.Pools,java.lang.String) -> <init>
    18:20:java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool) -> newThread
com.volmit.volmume.lang.sched.Pools$2 -> com.volume.gloss.src.xrHJ$2:
    com.volmit.volmume.lang.sched.Pools this$0 -> DHTU
    1:22:void <init>(com.volmit.volmume.lang.sched.Pools) -> <init>
    27:28:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.volmit.volmume.lang.sched.RTV -> com.volume.gloss.src.DjQu:
    java.lang.Object run() -> run
